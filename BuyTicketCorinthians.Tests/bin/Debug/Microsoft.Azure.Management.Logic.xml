<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.Management.Logic</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations">
            <summary>
            IntegrationAccountAgreementsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations.ListWithHttpMessagesAsync(System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreementFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account agreements.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets an integration account agreement.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='agreementName'>
            The integration account agreement name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreement,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates an integration account agreement.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='agreementName'>
            The integration account agreement name.
            </param>
            <param name='agreement'>
            The integration account agreement.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes an integration account agreement.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='agreementName'>
            The integration account agreement name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations.ListContentCallbackUrlWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the content callback url.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='agreementName'>
            The integration account agreement name.
            </param>
            <param name='listContentCallbackUrl'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account agreements.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IIntegrationAccountAssembliesOperations">
            <summary>
            IntegrationAccountAssembliesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountAssembliesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List the assemblies for an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountAssembliesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get an assembly for an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='assemblyArtifactName'>
            The assembly artifact name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountAssembliesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.AssemblyDefinition,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or update an assembly for an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='assemblyArtifactName'>
            The assembly artifact name.
            </param>
            <param name='assemblyArtifact'>
            The assembly artifact.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountAssembliesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete an assembly for an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='assemblyArtifactName'>
            The assembly artifact name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountAssembliesOperations.ListContentCallbackUrlWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the content callback url for an integration account assembly.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='assemblyArtifactName'>
            The assembly artifact name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IIntegrationAccountBatchConfigurationsOperations">
            <summary>
            IntegrationAccountBatchConfigurationsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountBatchConfigurationsOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List the batch configurations for an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountBatchConfigurationsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get a batch configuration for an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='batchConfigurationName'>
            The batch configuration name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountBatchConfigurationsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.BatchConfiguration,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or update a batch configuration for an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='batchConfigurationName'>
            The batch configuration name.
            </param>
            <param name='batchConfiguration'>
            The batch configuration.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountBatchConfigurationsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete a batch configuration for an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='batchConfigurationName'>
            The batch configuration name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations">
            <summary>
            IntegrationAccountCertificatesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account certificates.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='top'>
            The number of items to be included in the result.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets an integration account certificate.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='certificateName'>
            The integration account certificate name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates an integration account certificate.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='certificateName'>
            The integration account certificate name.
            </param>
            <param name='certificate'>
            The integration account certificate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes an integration account certificate.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='certificateName'>
            The integration account certificate name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account certificates.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations">
            <summary>
            IntegrationAccountMapsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations.ListWithHttpMessagesAsync(System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountMapFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account maps.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets an integration account map.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='mapName'>
            The integration account map name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountMap,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates an integration account map.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='mapName'>
            The integration account map name.
            </param>
            <param name='map'>
            The integration account map.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes an integration account map.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='mapName'>
            The integration account map name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations.ListContentCallbackUrlWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the content callback url.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='mapName'>
            The integration account map name.
            </param>
            <param name='listContentCallbackUrl'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account maps.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations">
            <summary>
            IntegrationAccountPartnersOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations.ListWithHttpMessagesAsync(System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account partners.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets an integration account partner.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='partnerName'>
            The integration account partner name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates an integration account partner.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='partnerName'>
            The integration account partner name.
            </param>
            <param name='partner'>
            The integration account partner.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes an integration account partner.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='partnerName'>
            The integration account partner name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations.ListContentCallbackUrlWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the content callback url.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='partnerName'>
            The integration account partner name.
            </param>
            <param name='listContentCallbackUrl'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account partners.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations">
            <summary>
            IntegrationAccountSchemasOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations.ListWithHttpMessagesAsync(System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account schemas.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets an integration account schema.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='schemaName'>
            The integration account schema name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates an integration account schema.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='schemaName'>
            The integration account schema name.
            </param>
            <param name='schema'>
            The integration account schema.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes an integration account schema.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='schemaName'>
            The integration account schema name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations.ListContentCallbackUrlWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the content callback url.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='schemaName'>
            The integration account schema name.
            </param>
            <param name='listContentCallbackUrl'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account schemas.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IIntegrationAccountSessionsOperations">
            <summary>
            IntegrationAccountSessionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountSessionsOperations.ListWithHttpMessagesAsync(System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSessionFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account sessions.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountSessionsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets an integration account session.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='sessionName'>
            The integration account session name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountSessionsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountSession,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates an integration account session.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='sessionName'>
            The integration account session name.
            </param>
            <param name='session'>
            The integration account session.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountSessionsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes an integration account session.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='sessionName'>
            The integration account session name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountSessionsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account sessions.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations">
            <summary>
            IntegrationAccountsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations.ListBySubscriptionWithHttpMessagesAsync(System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration accounts by subscription.
            </summary>
            <param name='top'>
            The number of items to be included in the result.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration accounts by resource group.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='top'>
            The number of items to be included in the result.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccount,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='integrationAccount'>
            The integration account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccount,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='integrationAccount'>
            The integration account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations.ListCallbackUrlWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the integration account callback URL.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='parameters'>
            The callback URL parameters.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations.ListKeyVaultKeysWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.ListKeyVaultKeysDefinition,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the integration account's Key Vault keys.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='listKeyVaultKeys'>
            The key vault parameters.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations.LogTrackingEventsWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.TrackingEventsDefinition,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Logs the integration account's tracking events.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='logTrackingEvents'>
            The callback URL parameters.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations.RegenerateAccessKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.RegenerateActionParameter,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Regenerates the integration account access key.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='regenerateAccessKey'>
            The access key type.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations.ListBySubscriptionNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration accounts by subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration accounts by resource group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.ILogicManagementClient">
            <summary>
            REST API for Azure Logic Apps.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.SubscriptionId">
            <summary>
            The subscription id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.ApiVersion">
            <summary>
            The API version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default
            value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When
            set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.Workflows">
            <summary>
            Gets the IWorkflowsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowVersions">
            <summary>
            Gets the IWorkflowVersionsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowTriggers">
            <summary>
            Gets the IWorkflowTriggersOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowVersionTriggers">
            <summary>
            Gets the IWorkflowVersionTriggersOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowTriggerHistories">
            <summary>
            Gets the IWorkflowTriggerHistoriesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowRuns">
            <summary>
            Gets the IWorkflowRunsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowRunActions">
            <summary>
            Gets the IWorkflowRunActionsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowRunActionRepetitions">
            <summary>
            Gets the IWorkflowRunActionRepetitionsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowRunActionRepetitionsRequestHistories">
            <summary>
            Gets the IWorkflowRunActionRepetitionsRequestHistoriesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowRunActionRequestHistories">
            <summary>
            Gets the IWorkflowRunActionRequestHistoriesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowRunActionScopeRepetitions">
            <summary>
            Gets the IWorkflowRunActionScopeRepetitionsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowRunOperations">
            <summary>
            Gets the IWorkflowRunOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccounts">
            <summary>
            Gets the IIntegrationAccountsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountAssemblies">
            <summary>
            Gets the IIntegrationAccountAssembliesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountBatchConfigurations">
            <summary>
            Gets the IIntegrationAccountBatchConfigurationsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountSchemas">
            <summary>
            Gets the IIntegrationAccountSchemasOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountMaps">
            <summary>
            Gets the IIntegrationAccountMapsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountPartners">
            <summary>
            Gets the IIntegrationAccountPartnersOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountAgreements">
            <summary>
            Gets the IIntegrationAccountAgreementsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountCertificates">
            <summary>
            Gets the IIntegrationAccountCertificatesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountSessions">
            <summary>
            Gets the IIntegrationAccountSessionsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.ILogicManagementClient.Operations">
            <summary>
            Gets the IOperations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperations">
            <summary>
            IntegrationAccountAgreementsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the IntegrationAccountAgreementsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperations.ListWithHttpMessagesAsync(System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreementFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account agreements.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets an integration account agreement.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='agreementName'>
            The integration account agreement name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreement,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates an integration account agreement.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='agreementName'>
            The integration account agreement name.
            </param>
            <param name='agreement'>
            The integration account agreement.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes an integration account agreement.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='agreementName'>
            The integration account agreement name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperations.ListContentCallbackUrlWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the content callback url.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='agreementName'>
            The integration account agreement name.
            </param>
            <param name='listContentCallbackUrl'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account agreements.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperationsExtensions">
            <summary>
            Extension methods for IntegrationAccountAgreementsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreementFilter})">
            <summary>
            Gets a list of integration account agreements.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreementFilter},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account agreements.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations,System.String,System.String,System.String)">
            <summary>
            Gets an integration account agreement.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='agreementName'>
            The integration account agreement name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an integration account agreement.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='agreementName'>
            The integration account agreement name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreement)">
            <summary>
            Creates or updates an integration account agreement.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='agreementName'>
            The integration account agreement name.
            </param>
            <param name='agreement'>
            The integration account agreement.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreement,System.Threading.CancellationToken)">
            <summary>
            Creates or updates an integration account agreement.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='agreementName'>
            The integration account agreement name.
            </param>
            <param name='agreement'>
            The integration account agreement.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations,System.String,System.String,System.String)">
            <summary>
            Deletes an integration account agreement.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='agreementName'>
            The integration account agreement name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an integration account agreement.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='agreementName'>
            The integration account agreement name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperationsExtensions.ListContentCallbackUrl(Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters)">
            <summary>
            Get the content callback url.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='agreementName'>
            The integration account agreement name.
            </param>
            <param name='listContentCallbackUrl'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperationsExtensions.ListContentCallbackUrlAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters,System.Threading.CancellationToken)">
            <summary>
            Get the content callback url.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='agreementName'>
            The integration account agreement name.
            </param>
            <param name='listContentCallbackUrl'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations,System.String)">
            <summary>
            Gets a list of integration account agreements.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAgreementsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account agreements.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IntegrationAccountAssembliesOperations">
            <summary>
            IntegrationAccountAssembliesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAssembliesOperations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the IntegrationAccountAssembliesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.IntegrationAccountAssembliesOperations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAssembliesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List the assemblies for an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAssembliesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get an assembly for an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='assemblyArtifactName'>
            The assembly artifact name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAssembliesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.AssemblyDefinition,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or update an assembly for an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='assemblyArtifactName'>
            The assembly artifact name.
            </param>
            <param name='assemblyArtifact'>
            The assembly artifact.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAssembliesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete an assembly for an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='assemblyArtifactName'>
            The assembly artifact name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAssembliesOperations.ListContentCallbackUrlWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the content callback url for an integration account assembly.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='assemblyArtifactName'>
            The assembly artifact name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IntegrationAccountAssembliesOperationsExtensions">
            <summary>
            Extension methods for IntegrationAccountAssembliesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAssembliesOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountAssembliesOperations,System.String,System.String)">
            <summary>
            List the assemblies for an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAssembliesOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountAssembliesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List the assemblies for an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAssembliesOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IIntegrationAccountAssembliesOperations,System.String,System.String,System.String)">
            <summary>
            Get an assembly for an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='assemblyArtifactName'>
            The assembly artifact name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAssembliesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountAssembliesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get an assembly for an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='assemblyArtifactName'>
            The assembly artifact name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAssembliesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountAssembliesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.AssemblyDefinition)">
            <summary>
            Create or update an assembly for an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='assemblyArtifactName'>
            The assembly artifact name.
            </param>
            <param name='assemblyArtifact'>
            The assembly artifact.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAssembliesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountAssembliesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.AssemblyDefinition,System.Threading.CancellationToken)">
            <summary>
            Create or update an assembly for an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='assemblyArtifactName'>
            The assembly artifact name.
            </param>
            <param name='assemblyArtifact'>
            The assembly artifact.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAssembliesOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountAssembliesOperations,System.String,System.String,System.String)">
            <summary>
            Delete an assembly for an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='assemblyArtifactName'>
            The assembly artifact name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAssembliesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountAssembliesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an assembly for an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='assemblyArtifactName'>
            The assembly artifact name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAssembliesOperationsExtensions.ListContentCallbackUrl(Microsoft.Azure.Management.Logic.IIntegrationAccountAssembliesOperations,System.String,System.String,System.String)">
            <summary>
            Get the content callback url for an integration account assembly.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='assemblyArtifactName'>
            The assembly artifact name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountAssembliesOperationsExtensions.ListContentCallbackUrlAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountAssembliesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the content callback url for an integration account assembly.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='assemblyArtifactName'>
            The assembly artifact name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IntegrationAccountBatchConfigurationsOperations">
            <summary>
            IntegrationAccountBatchConfigurationsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountBatchConfigurationsOperations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the IntegrationAccountBatchConfigurationsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.IntegrationAccountBatchConfigurationsOperations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountBatchConfigurationsOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List the batch configurations for an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountBatchConfigurationsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get a batch configuration for an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='batchConfigurationName'>
            The batch configuration name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountBatchConfigurationsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.BatchConfiguration,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or update a batch configuration for an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='batchConfigurationName'>
            The batch configuration name.
            </param>
            <param name='batchConfiguration'>
            The batch configuration.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountBatchConfigurationsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete a batch configuration for an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='batchConfigurationName'>
            The batch configuration name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IntegrationAccountBatchConfigurationsOperationsExtensions">
            <summary>
            Extension methods for IntegrationAccountBatchConfigurationsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountBatchConfigurationsOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountBatchConfigurationsOperations,System.String,System.String)">
            <summary>
            List the batch configurations for an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountBatchConfigurationsOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountBatchConfigurationsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List the batch configurations for an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountBatchConfigurationsOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IIntegrationAccountBatchConfigurationsOperations,System.String,System.String,System.String)">
            <summary>
            Get a batch configuration for an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='batchConfigurationName'>
            The batch configuration name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountBatchConfigurationsOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountBatchConfigurationsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a batch configuration for an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='batchConfigurationName'>
            The batch configuration name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountBatchConfigurationsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountBatchConfigurationsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.BatchConfiguration)">
            <summary>
            Create or update a batch configuration for an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='batchConfigurationName'>
            The batch configuration name.
            </param>
            <param name='batchConfiguration'>
            The batch configuration.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountBatchConfigurationsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountBatchConfigurationsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.BatchConfiguration,System.Threading.CancellationToken)">
            <summary>
            Create or update a batch configuration for an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='batchConfigurationName'>
            The batch configuration name.
            </param>
            <param name='batchConfiguration'>
            The batch configuration.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountBatchConfigurationsOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountBatchConfigurationsOperations,System.String,System.String,System.String)">
            <summary>
            Delete a batch configuration for an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='batchConfigurationName'>
            The batch configuration name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountBatchConfigurationsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountBatchConfigurationsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a batch configuration for an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='batchConfigurationName'>
            The batch configuration name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperations">
            <summary>
            IntegrationAccountCertificatesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the IntegrationAccountCertificatesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account certificates.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='top'>
            The number of items to be included in the result.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets an integration account certificate.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='certificateName'>
            The integration account certificate name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates an integration account certificate.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='certificateName'>
            The integration account certificate name.
            </param>
            <param name='certificate'>
            The integration account certificate.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes an integration account certificate.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='certificateName'>
            The integration account certificate name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account certificates.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions">
            <summary>
            Extension methods for IntegrationAccountCertificatesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets a list of integration account certificates.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='top'>
            The number of items to be included in the result.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account certificates.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='top'>
            The number of items to be included in the result.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String)">
            <summary>
            Gets an integration account certificate.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='certificateName'>
            The integration account certificate name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an integration account certificate.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='certificateName'>
            The integration account certificate name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate)">
            <summary>
            Creates or updates an integration account certificate.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='certificateName'>
            The integration account certificate name.
            </param>
            <param name='certificate'>
            The integration account certificate.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate,System.Threading.CancellationToken)">
            <summary>
            Creates or updates an integration account certificate.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='certificateName'>
            The integration account certificate name.
            </param>
            <param name='certificate'>
            The integration account certificate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String)">
            <summary>
            Deletes an integration account certificate.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='certificateName'>
            The integration account certificate name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an integration account certificate.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='certificateName'>
            The integration account certificate name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String)">
            <summary>
            Gets a list of integration account certificates.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account certificates.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperations">
            <summary>
            IntegrationAccountMapsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the IntegrationAccountMapsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperations.ListWithHttpMessagesAsync(System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountMapFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account maps.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets an integration account map.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='mapName'>
            The integration account map name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountMap,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates an integration account map.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='mapName'>
            The integration account map name.
            </param>
            <param name='map'>
            The integration account map.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes an integration account map.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='mapName'>
            The integration account map name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperations.ListContentCallbackUrlWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the content callback url.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='mapName'>
            The integration account map name.
            </param>
            <param name='listContentCallbackUrl'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account maps.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperationsExtensions">
            <summary>
            Extension methods for IntegrationAccountMapsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountMapFilter})">
            <summary>
            Gets a list of integration account maps.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountMapFilter},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account maps.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations,System.String,System.String,System.String)">
            <summary>
            Gets an integration account map.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='mapName'>
            The integration account map name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an integration account map.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='mapName'>
            The integration account map name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountMap)">
            <summary>
            Creates or updates an integration account map.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='mapName'>
            The integration account map name.
            </param>
            <param name='map'>
            The integration account map.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountMap,System.Threading.CancellationToken)">
            <summary>
            Creates or updates an integration account map.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='mapName'>
            The integration account map name.
            </param>
            <param name='map'>
            The integration account map.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations,System.String,System.String,System.String)">
            <summary>
            Deletes an integration account map.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='mapName'>
            The integration account map name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an integration account map.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='mapName'>
            The integration account map name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperationsExtensions.ListContentCallbackUrl(Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters)">
            <summary>
            Get the content callback url.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='mapName'>
            The integration account map name.
            </param>
            <param name='listContentCallbackUrl'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperationsExtensions.ListContentCallbackUrlAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters,System.Threading.CancellationToken)">
            <summary>
            Get the content callback url.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='mapName'>
            The integration account map name.
            </param>
            <param name='listContentCallbackUrl'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations,System.String)">
            <summary>
            Gets a list of integration account maps.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountMapsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account maps.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperations">
            <summary>
            IntegrationAccountPartnersOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the IntegrationAccountPartnersOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperations.ListWithHttpMessagesAsync(System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account partners.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets an integration account partner.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='partnerName'>
            The integration account partner name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates an integration account partner.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='partnerName'>
            The integration account partner name.
            </param>
            <param name='partner'>
            The integration account partner.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes an integration account partner.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='partnerName'>
            The integration account partner name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperations.ListContentCallbackUrlWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the content callback url.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='partnerName'>
            The integration account partner name.
            </param>
            <param name='listContentCallbackUrl'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account partners.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions">
            <summary>
            Extension methods for IntegrationAccountPartnersOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter})">
            <summary>
            Gets a list of integration account partners.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account partners.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String)">
            <summary>
            Gets an integration account partner.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='partnerName'>
            The integration account partner name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an integration account partner.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='partnerName'>
            The integration account partner name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner)">
            <summary>
            Creates or updates an integration account partner.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='partnerName'>
            The integration account partner name.
            </param>
            <param name='partner'>
            The integration account partner.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner,System.Threading.CancellationToken)">
            <summary>
            Creates or updates an integration account partner.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='partnerName'>
            The integration account partner name.
            </param>
            <param name='partner'>
            The integration account partner.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String)">
            <summary>
            Deletes an integration account partner.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='partnerName'>
            The integration account partner name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an integration account partner.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='partnerName'>
            The integration account partner name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.ListContentCallbackUrl(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters)">
            <summary>
            Get the content callback url.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='partnerName'>
            The integration account partner name.
            </param>
            <param name='listContentCallbackUrl'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.ListContentCallbackUrlAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters,System.Threading.CancellationToken)">
            <summary>
            Get the content callback url.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='partnerName'>
            The integration account partner name.
            </param>
            <param name='listContentCallbackUrl'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String)">
            <summary>
            Gets a list of integration account partners.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account partners.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperations">
            <summary>
            IntegrationAccountSchemasOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the IntegrationAccountSchemasOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperations.ListWithHttpMessagesAsync(System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account schemas.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets an integration account schema.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='schemaName'>
            The integration account schema name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates an integration account schema.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='schemaName'>
            The integration account schema name.
            </param>
            <param name='schema'>
            The integration account schema.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes an integration account schema.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='schemaName'>
            The integration account schema name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperations.ListContentCallbackUrlWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the content callback url.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='schemaName'>
            The integration account schema name.
            </param>
            <param name='listContentCallbackUrl'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account schemas.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions">
            <summary>
            Extension methods for IntegrationAccountSchemasOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter})">
            <summary>
            Gets a list of integration account schemas.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account schemas.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String)">
            <summary>
            Gets an integration account schema.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='schemaName'>
            The integration account schema name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an integration account schema.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='schemaName'>
            The integration account schema name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema)">
            <summary>
            Creates or updates an integration account schema.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='schemaName'>
            The integration account schema name.
            </param>
            <param name='schema'>
            The integration account schema.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema,System.Threading.CancellationToken)">
            <summary>
            Creates or updates an integration account schema.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='schemaName'>
            The integration account schema name.
            </param>
            <param name='schema'>
            The integration account schema.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String)">
            <summary>
            Deletes an integration account schema.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='schemaName'>
            The integration account schema name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an integration account schema.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='schemaName'>
            The integration account schema name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.ListContentCallbackUrl(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters)">
            <summary>
            Get the content callback url.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='schemaName'>
            The integration account schema name.
            </param>
            <param name='listContentCallbackUrl'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.ListContentCallbackUrlAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters,System.Threading.CancellationToken)">
            <summary>
            Get the content callback url.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='schemaName'>
            The integration account schema name.
            </param>
            <param name='listContentCallbackUrl'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String)">
            <summary>
            Gets a list of integration account schemas.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account schemas.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IntegrationAccountSessionsOperations">
            <summary>
            IntegrationAccountSessionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSessionsOperations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the IntegrationAccountSessionsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.IntegrationAccountSessionsOperations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSessionsOperations.ListWithHttpMessagesAsync(System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSessionFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account sessions.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSessionsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets an integration account session.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='sessionName'>
            The integration account session name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSessionsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountSession,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates an integration account session.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='sessionName'>
            The integration account session name.
            </param>
            <param name='session'>
            The integration account session.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSessionsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes an integration account session.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='sessionName'>
            The integration account session name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSessionsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account sessions.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IntegrationAccountSessionsOperationsExtensions">
            <summary>
            Extension methods for IntegrationAccountSessionsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSessionsOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountSessionsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSessionFilter})">
            <summary>
            Gets a list of integration account sessions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSessionsOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSessionsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSessionFilter},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account sessions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSessionsOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IIntegrationAccountSessionsOperations,System.String,System.String,System.String)">
            <summary>
            Gets an integration account session.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='sessionName'>
            The integration account session name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSessionsOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSessionsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an integration account session.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='sessionName'>
            The integration account session name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSessionsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountSessionsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountSession)">
            <summary>
            Creates or updates an integration account session.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='sessionName'>
            The integration account session name.
            </param>
            <param name='session'>
            The integration account session.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSessionsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSessionsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountSession,System.Threading.CancellationToken)">
            <summary>
            Creates or updates an integration account session.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='sessionName'>
            The integration account session name.
            </param>
            <param name='session'>
            The integration account session.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSessionsOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountSessionsOperations,System.String,System.String,System.String)">
            <summary>
            Deletes an integration account session.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='sessionName'>
            The integration account session name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSessionsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSessionsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an integration account session.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='sessionName'>
            The integration account session name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSessionsOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IIntegrationAccountSessionsOperations,System.String)">
            <summary>
            Gets a list of integration account sessions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountSessionsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSessionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration account sessions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IntegrationAccountsOperations">
            <summary>
            IntegrationAccountsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the IntegrationAccountsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.IntegrationAccountsOperations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperations.ListBySubscriptionWithHttpMessagesAsync(System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration accounts by subscription.
            </summary>
            <param name='top'>
            The number of items to be included in the result.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration accounts by resource group.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='top'>
            The number of items to be included in the result.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccount,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='integrationAccount'>
            The integration account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccount,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='integrationAccount'>
            The integration account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes an integration account.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperations.ListCallbackUrlWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the integration account callback URL.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='parameters'>
            The callback URL parameters.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperations.ListKeyVaultKeysWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.ListKeyVaultKeysDefinition,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the integration account's Key Vault keys.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='listKeyVaultKeys'>
            The key vault parameters.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperations.LogTrackingEventsWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.TrackingEventsDefinition,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Logs the integration account's tracking events.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='logTrackingEvents'>
            The callback URL parameters.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperations.RegenerateAccessKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.RegenerateActionParameter,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Regenerates the integration account access key.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='regenerateAccessKey'>
            The access key type.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperations.ListBySubscriptionNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration accounts by subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration accounts by resource group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions">
            <summary>
            Extension methods for IntegrationAccountsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.ListBySubscription(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.Nullable{System.Int32})">
            <summary>
            Gets a list of integration accounts by subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='top'>
            The number of items to be included in the result.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.ListBySubscriptionAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration accounts by subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='top'>
            The number of items to be included in the result.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets a list of integration accounts by resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='top'>
            The number of items to be included in the result.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration accounts by resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='top'>
            The number of items to be included in the result.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String,System.String)">
            <summary>
            Gets an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccount)">
            <summary>
            Creates or updates an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='integrationAccount'>
            The integration account.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccount,System.Threading.CancellationToken)">
            <summary>
            Creates or updates an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='integrationAccount'>
            The integration account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.Update(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccount)">
            <summary>
            Updates an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='integrationAccount'>
            The integration account.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccount,System.Threading.CancellationToken)">
            <summary>
            Updates an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='integrationAccount'>
            The integration account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String,System.String)">
            <summary>
            Deletes an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an integration account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.ListCallbackUrl(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters)">
            <summary>
            Gets the integration account callback URL.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='parameters'>
            The callback URL parameters.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.ListCallbackUrlAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the integration account callback URL.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='parameters'>
            The callback URL parameters.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.ListKeyVaultKeys(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.ListKeyVaultKeysDefinition)">
            <summary>
            Gets the integration account's Key Vault keys.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='listKeyVaultKeys'>
            The key vault parameters.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.ListKeyVaultKeysAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.ListKeyVaultKeysDefinition,System.Threading.CancellationToken)">
            <summary>
            Gets the integration account's Key Vault keys.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='listKeyVaultKeys'>
            The key vault parameters.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.LogTrackingEvents(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.TrackingEventsDefinition)">
            <summary>
            Logs the integration account's tracking events.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='logTrackingEvents'>
            The callback URL parameters.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.LogTrackingEventsAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.TrackingEventsDefinition,System.Threading.CancellationToken)">
            <summary>
            Logs the integration account's tracking events.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='logTrackingEvents'>
            The callback URL parameters.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.RegenerateAccessKey(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.RegenerateActionParameter)">
            <summary>
            Regenerates the integration account access key.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='regenerateAccessKey'>
            The access key type.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.RegenerateAccessKeyAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.RegenerateActionParameter,System.Threading.CancellationToken)">
            <summary>
            Regenerates the integration account access key.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='integrationAccountName'>
            The integration account name.
            </param>
            <param name='regenerateAccessKey'>
            The access key type.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.ListBySubscriptionNext(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String)">
            <summary>
            Gets a list of integration accounts by subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.ListBySubscriptionNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration accounts by subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String)">
            <summary>
            Gets a list of integration accounts by resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IntegrationAccountsOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of integration accounts by resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IOperations">
            <summary>
            Operations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Logic REST API operations.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Logic.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Logic REST API operations.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Logic.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IWorkflowRunActionRepetitionsOperations">
            <summary>
            WorkflowRunActionRepetitionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowRunActionRepetitionsOperations.ListWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all of a workflow run action repetitions.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowRunActionRepetitionsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get a workflow run action repetition.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='repetitionName'>
            The workflow repetition.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowRunActionRepetitionsOperations.ListExpressionTracesWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists a workflow run expression trace.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='repetitionName'>
            The workflow repetition.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IWorkflowRunActionRepetitionsRequestHistoriesOperations">
            <summary>
            WorkflowRunActionRepetitionsRequestHistoriesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowRunActionRepetitionsRequestHistoriesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List a workflow run repetition request history.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='repetitionName'>
            The workflow repetition.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Logic.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowRunActionRepetitionsRequestHistoriesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a workflow run repetition request history.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='repetitionName'>
            The workflow repetition.
            </param>
            <param name='requestHistoryName'>
            The request history name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Logic.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowRunActionRepetitionsRequestHistoriesOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List a workflow run repetition request history.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Logic.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IWorkflowRunActionRequestHistoriesOperations">
            <summary>
            WorkflowRunActionRequestHistoriesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowRunActionRequestHistoriesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List a workflow run request history.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Logic.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowRunActionRequestHistoriesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a workflow run request history.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='requestHistoryName'>
            The request history name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Logic.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowRunActionRequestHistoriesOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List a workflow run request history.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Logic.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IWorkflowRunActionScopeRepetitionsOperations">
            <summary>
            WorkflowRunActionScopeRepetitionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowRunActionScopeRepetitionsOperations.ListWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List the workflow run action scoped repetitions.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowRunActionScopeRepetitionsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get a workflow run action scoped repetition.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='repetitionName'>
            The workflow repetition.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IWorkflowRunActionsOperations">
            <summary>
            WorkflowRunActionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowRunActionsOperations.ListWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowRunActionFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow run actions.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowRunActionsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a workflow run action.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowRunActionsOperations.ListExpressionTracesWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists a workflow run expression trace.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowRunActionsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow run actions.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IWorkflowRunOperations">
            <summary>
            WorkflowRunOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowRunOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets an operation for a run.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='operationId'>
            The workflow operation id.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IWorkflowRunsOperations">
            <summary>
            WorkflowRunsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowRunsOperations.ListWithHttpMessagesAsync(System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowRunFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow runs.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowRunsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a workflow run.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowRunsOperations.CancelWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Cancels a workflow run.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowRunsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow runs.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IWorkflowsOperations">
            <summary>
            WorkflowsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowsOperations.ListBySubscriptionWithHttpMessagesAsync(Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflows by subscription.
            </summary>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowsOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflows by resource group.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a workflow.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.Workflow,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a workflow.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='workflow'>
            The workflow.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowsOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.Workflow,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates a workflow.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='workflow'>
            The workflow.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a workflow.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowsOperations.DisableWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Disables a workflow.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowsOperations.EnableWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Enables a workflow.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowsOperations.GenerateUpgradedDefinitionWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.GenerateUpgradedDefinitionParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Generates the upgraded definition for a workflow.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='parameters'>
            Parameters for generating an upgraded definition.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowsOperations.ListCallbackUrlWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the workflow callback Url.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='listCallbackUrl'>
            Which callback url to list.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowsOperations.ListSwaggerWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets an OpenAPI definition for the workflow.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowsOperations.MoveWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.Workflow,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Moves an existing workflow.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='move'>
            The workflow to move.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowsOperations.RegenerateAccessKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.RegenerateActionParameter,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Regenerates the callback URL access key for request triggers.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='keyType'>
            The access key type.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowsOperations.ValidateByResourceGroupWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.Workflow,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates the workflow.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='validate'>
            The workflow.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowsOperations.ValidateByLocationWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.Workflow,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates the workflow definition.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='location'>
            The workflow location.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='workflow'>
            The workflow definition.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowsOperations.ListBySubscriptionNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflows by subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowsOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflows by resource group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IWorkflowTriggerHistoriesOperations">
            <summary>
            WorkflowTriggerHistoriesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowTriggerHistoriesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistoryFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow trigger histories.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowTriggerHistoriesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a workflow trigger history.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='historyName'>
            The workflow trigger history name. Corresponds to the run name for
            triggers that resulted in a run.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowTriggerHistoriesOperations.ResubmitWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Resubmits a workflow run based on the trigger history.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='historyName'>
            The workflow trigger history name. Corresponds to the run name for
            triggers that resulted in a run.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowTriggerHistoriesOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow trigger histories.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations">
            <summary>
            WorkflowTriggersOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations.ListWithHttpMessagesAsync(System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowTriggerFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow triggers.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a workflow trigger.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations.ResetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Resets a workflow trigger.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations.RunWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Runs a workflow trigger.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations.GetSchemaJsonWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the trigger schema as JSON.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations.SetStateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.SetTriggerStateActionDefinition,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the state of a workflow trigger.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='setState'>
            The workflow trigger state.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations.ListCallbackUrlWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the callback URL for a workflow trigger.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow triggers.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IWorkflowVersionsOperations">
            <summary>
            WorkflowVersionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowVersionsOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow versions.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='top'>
            The number of items to be included in the result.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowVersionsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a workflow version.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='versionId'>
            The workflow versionId.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowVersionsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow versions.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.IWorkflowVersionTriggersOperations">
            <summary>
            WorkflowVersionTriggersOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.IWorkflowVersionTriggersOperations.ListCallbackUrlWithHttpMessagesAsync(System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the callback url for a trigger of a workflow version.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='versionId'>
            The workflow versionId.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='parameters'>
            The callback URL parameters.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.LogicManagementClient">
            <summary>
            REST API for Azure Logic Apps.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.SubscriptionId">
            <summary>
            The subscription id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.ApiVersion">
            <summary>
            The API version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default value is
            30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When set to
            true a unique x-ms-client-request-id value is generated and included in
            each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.Workflows">
            <summary>
            Gets the IWorkflowsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowVersions">
            <summary>
            Gets the IWorkflowVersionsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowTriggers">
            <summary>
            Gets the IWorkflowTriggersOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowVersionTriggers">
            <summary>
            Gets the IWorkflowVersionTriggersOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowTriggerHistories">
            <summary>
            Gets the IWorkflowTriggerHistoriesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowRuns">
            <summary>
            Gets the IWorkflowRunsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowRunActions">
            <summary>
            Gets the IWorkflowRunActionsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowRunActionRepetitions">
            <summary>
            Gets the IWorkflowRunActionRepetitionsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowRunActionRepetitionsRequestHistories">
            <summary>
            Gets the IWorkflowRunActionRepetitionsRequestHistoriesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowRunActionRequestHistories">
            <summary>
            Gets the IWorkflowRunActionRequestHistoriesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowRunActionScopeRepetitions">
            <summary>
            Gets the IWorkflowRunActionScopeRepetitionsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowRunOperations">
            <summary>
            Gets the IWorkflowRunOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccounts">
            <summary>
            Gets the IIntegrationAccountsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountAssemblies">
            <summary>
            Gets the IIntegrationAccountAssembliesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountBatchConfigurations">
            <summary>
            Gets the IIntegrationAccountBatchConfigurationsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountSchemas">
            <summary>
            Gets the IIntegrationAccountSchemasOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountMaps">
            <summary>
            Gets the IIntegrationAccountMapsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountPartners">
            <summary>
            Gets the IIntegrationAccountPartnersOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountAgreements">
            <summary>
            Gets the IIntegrationAccountAgreementsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountCertificates">
            <summary>
            Gets the IIntegrationAccountCertificatesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountSessions">
            <summary>
            Gets the IIntegrationAccountSessionsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.LogicManagementClient.Operations">
            <summary>
            Gets the IOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the LogicManagementClient class.
            </summary>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling LogicManagementClient.Dispose(). False: will not dispose provided httpClient</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the LogicManagementClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the LogicManagementClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the LogicManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the LogicManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the LogicManagementClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the LogicManagementClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling LogicManagementClient.Dispose(). False: will not dispose provided httpClient</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the LogicManagementClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the LogicManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the LogicManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.LogicManagementClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.AgreementContent">
            <summary>
            The integration account agreement content.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AgreementContent.#ctor">
            <summary>
            Initializes a new instance of the AgreementContent class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AgreementContent.#ctor(Microsoft.Azure.Management.Logic.Models.AS2AgreementContent,Microsoft.Azure.Management.Logic.Models.X12AgreementContent,Microsoft.Azure.Management.Logic.Models.EdifactAgreementContent)">
            <summary>
            Initializes a new instance of the AgreementContent class.
            </summary>
            <param name="aS2">The AS2 agreement content.</param>
            <param name="x12">The X12 agreement content.</param>
            <param name="edifact">The EDIFACT agreement content.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AgreementContent.AS2">
            <summary>
            Gets or sets the AS2 agreement content.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AgreementContent.X12">
            <summary>
            Gets or sets the X12 agreement content.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AgreementContent.Edifact">
            <summary>
            Gets or sets the EDIFACT agreement content.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AgreementContent.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.AgreementType">
            <summary>
            Defines values for AgreementType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.ArtifactContentPropertiesDefinition">
            <summary>
            The artifact content properties definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ArtifactContentPropertiesDefinition.#ctor">
            <summary>
            Initializes a new instance of the
            ArtifactContentPropertiesDefinition class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ArtifactContentPropertiesDefinition.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Object,System.Object,System.String,Microsoft.Azure.Management.Logic.Models.ContentLink)">
            <summary>
            Initializes a new instance of the
            ArtifactContentPropertiesDefinition class.
            </summary>
            <param name="createdTime">The artifact creation time.</param>
            <param name="changedTime">The artifact changed time.</param>
            <param name="contentType">The content type.</param>
            <param name="contentLink">The content link.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ArtifactContentPropertiesDefinition.Content">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ArtifactContentPropertiesDefinition.ContentType">
            <summary>
            Gets or sets the content type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ArtifactContentPropertiesDefinition.ContentLink">
            <summary>
            Gets or sets the content link.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.ArtifactProperties">
            <summary>
            The artifact properties definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ArtifactProperties.#ctor">
            <summary>
            Initializes a new instance of the ArtifactProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ArtifactProperties.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Object)">
            <summary>
            Initializes a new instance of the ArtifactProperties class.
            </summary>
            <param name="createdTime">The artifact creation time.</param>
            <param name="changedTime">The artifact changed time.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ArtifactProperties.CreatedTime">
            <summary>
            Gets or sets the artifact creation time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ArtifactProperties.ChangedTime">
            <summary>
            Gets or sets the artifact changed time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ArtifactProperties.Metadata">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.AS2AcknowledgementConnectionSettings">
            <summary>
            The AS2 agreement acknowledgement connection settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2AcknowledgementConnectionSettings.#ctor">
            <summary>
            Initializes a new instance of the
            AS2AcknowledgementConnectionSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2AcknowledgementConnectionSettings.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the
            AS2AcknowledgementConnectionSettings class.
            </summary>
            <param name="ignoreCertificateNameMismatch">The value indicating
            whether to ignore mismatch in certificate name.</param>
            <param name="supportHttpStatusCodeContinue">The value indicating
            whether to support HTTP status code 'CONTINUE'.</param>
            <param name="keepHttpConnectionAlive">The value indicating whether
            to keep the connection alive.</param>
            <param name="unfoldHttpHeaders">The value indicating whether to
            unfold the HTTP headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2AcknowledgementConnectionSettings.IgnoreCertificateNameMismatch">
            <summary>
            Gets or sets the value indicating whether to ignore mismatch in
            certificate name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2AcknowledgementConnectionSettings.SupportHttpStatusCodeContinue">
            <summary>
            Gets or sets the value indicating whether to support HTTP status
            code 'CONTINUE'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2AcknowledgementConnectionSettings.KeepHttpConnectionAlive">
            <summary>
            Gets or sets the value indicating whether to keep the connection
            alive.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2AcknowledgementConnectionSettings.UnfoldHttpHeaders">
            <summary>
            Gets or sets the value indicating whether to unfold the HTTP
            headers.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2AcknowledgementConnectionSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.AS2AgreementContent">
            <summary>
            The integration account AS2 agreement content.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2AgreementContent.#ctor">
            <summary>
            Initializes a new instance of the AS2AgreementContent class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2AgreementContent.#ctor(Microsoft.Azure.Management.Logic.Models.AS2OneWayAgreement,Microsoft.Azure.Management.Logic.Models.AS2OneWayAgreement)">
            <summary>
            Initializes a new instance of the AS2AgreementContent class.
            </summary>
            <param name="receiveAgreement">The AS2 one-way receive
            agreement.</param>
            <param name="sendAgreement">The AS2 one-way send agreement.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2AgreementContent.ReceiveAgreement">
            <summary>
            Gets or sets the AS2 one-way receive agreement.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2AgreementContent.SendAgreement">
            <summary>
            Gets or sets the AS2 one-way send agreement.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2AgreementContent.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.AS2EnvelopeSettings">
            <summary>
            The AS2 agreement envelope settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2EnvelopeSettings.#ctor">
            <summary>
            Initializes a new instance of the AS2EnvelopeSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2EnvelopeSettings.#ctor(System.String,System.Boolean,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AS2EnvelopeSettings class.
            </summary>
            <param name="messageContentType">The message content type.</param>
            <param name="transmitFileNameInMimeHeader">The value indicating
            whether to transmit file name in mime header.</param>
            <param name="fileNameTemplate">The template for file name.</param>
            <param name="suspendMessageOnFileNameGenerationError">The value
            indicating whether to suspend message on file name generation
            error.</param>
            <param name="autogenerateFileName">The value indicating whether to
            auto generate file name.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2EnvelopeSettings.MessageContentType">
            <summary>
            Gets or sets the message content type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2EnvelopeSettings.TransmitFileNameInMimeHeader">
            <summary>
            Gets or sets the value indicating whether to transmit file name in
            mime header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2EnvelopeSettings.FileNameTemplate">
            <summary>
            Gets or sets the template for file name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2EnvelopeSettings.SuspendMessageOnFileNameGenerationError">
            <summary>
            Gets or sets the value indicating whether to suspend message on
            file name generation error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2EnvelopeSettings.AutogenerateFileName">
            <summary>
            Gets or sets the value indicating whether to auto generate file
            name.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2EnvelopeSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.AS2ErrorSettings">
            <summary>
            The AS2 agreement error settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2ErrorSettings.#ctor">
            <summary>
            Initializes a new instance of the AS2ErrorSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2ErrorSettings.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AS2ErrorSettings class.
            </summary>
            <param name="suspendDuplicateMessage">The value indicating whether
            to suspend duplicate message.</param>
            <param name="resendIfMdnNotReceived">The value indicating whether
            to resend message If MDN is not received.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2ErrorSettings.SuspendDuplicateMessage">
            <summary>
            Gets or sets the value indicating whether to suspend duplicate
            message.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2ErrorSettings.ResendIfMdnNotReceived">
            <summary>
            Gets or sets the value indicating whether to resend message If MDN
            is not received.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2ErrorSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.AS2MdnSettings">
            <summary>
            The AS2 agreement mdn settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2MdnSettings.#ctor">
            <summary>
            Initializes a new instance of the AS2MdnSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2MdnSettings.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the AS2MdnSettings class.
            </summary>
            <param name="needMdn">The value indicating whether to send or
            request a MDN.</param>
            <param name="signMdn">The value indicating whether the MDN needs to
            be signed or not.</param>
            <param name="sendMdnAsynchronously">The value indicating whether to
            send the asynchronous MDN.</param>
            <param name="signOutboundMdnIfOptional">The value indicating
            whether to sign the outbound MDN if optional.</param>
            <param name="sendInboundMdnToMessageBox">The value indicating
            whether to send inbound MDN to message box.</param>
            <param name="micHashingAlgorithm">The signing or hashing algorithm.
            Possible values include: 'NotSpecified', 'None', 'MD5', 'SHA1',
            'SHA2256', 'SHA2384', 'SHA2512'</param>
            <param name="receiptDeliveryUrl">The receipt delivery URL.</param>
            <param name="dispositionNotificationTo">The disposition
            notification to header value.</param>
            <param name="mdnText">The MDN text.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2MdnSettings.NeedMdn">
            <summary>
            Gets or sets the value indicating whether to send or request a MDN.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2MdnSettings.SignMdn">
            <summary>
            Gets or sets the value indicating whether the MDN needs to be
            signed or not.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2MdnSettings.SendMdnAsynchronously">
            <summary>
            Gets or sets the value indicating whether to send the asynchronous
            MDN.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2MdnSettings.ReceiptDeliveryUrl">
            <summary>
            Gets or sets the receipt delivery URL.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2MdnSettings.DispositionNotificationTo">
            <summary>
            Gets or sets the disposition notification to header value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2MdnSettings.SignOutboundMdnIfOptional">
            <summary>
            Gets or sets the value indicating whether to sign the outbound MDN
            if optional.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2MdnSettings.MdnText">
            <summary>
            Gets or sets the MDN text.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2MdnSettings.SendInboundMdnToMessageBox">
            <summary>
            Gets or sets the value indicating whether to send inbound MDN to
            message box.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2MdnSettings.MicHashingAlgorithm">
            <summary>
            Gets or sets the signing or hashing algorithm. Possible values
            include: 'NotSpecified', 'None', 'MD5', 'SHA1', 'SHA2256',
            'SHA2384', 'SHA2512'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2MdnSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.AS2MessageConnectionSettings">
            <summary>
            The AS2 agreement message connection settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2MessageConnectionSettings.#ctor">
            <summary>
            Initializes a new instance of the AS2MessageConnectionSettings
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2MessageConnectionSettings.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AS2MessageConnectionSettings
            class.
            </summary>
            <param name="ignoreCertificateNameMismatch">The value indicating
            whether to ignore mismatch in certificate name.</param>
            <param name="supportHttpStatusCodeContinue">The value indicating
            whether to support HTTP status code 'CONTINUE'.</param>
            <param name="keepHttpConnectionAlive">The value indicating whether
            to keep the connection alive.</param>
            <param name="unfoldHttpHeaders">The value indicating whether to
            unfold the HTTP headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2MessageConnectionSettings.IgnoreCertificateNameMismatch">
            <summary>
            Gets or sets the value indicating whether to ignore mismatch in
            certificate name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2MessageConnectionSettings.SupportHttpStatusCodeContinue">
            <summary>
            Gets or sets the value indicating whether to support HTTP status
            code 'CONTINUE'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2MessageConnectionSettings.KeepHttpConnectionAlive">
            <summary>
            Gets or sets the value indicating whether to keep the connection
            alive.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2MessageConnectionSettings.UnfoldHttpHeaders">
            <summary>
            Gets or sets the value indicating whether to unfold the HTTP
            headers.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2MessageConnectionSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.AS2OneWayAgreement">
            <summary>
            The integration account AS2 one-way agreement.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2OneWayAgreement.#ctor">
            <summary>
            Initializes a new instance of the AS2OneWayAgreement class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2OneWayAgreement.#ctor(Microsoft.Azure.Management.Logic.Models.BusinessIdentity,Microsoft.Azure.Management.Logic.Models.BusinessIdentity,Microsoft.Azure.Management.Logic.Models.AS2ProtocolSettings)">
            <summary>
            Initializes a new instance of the AS2OneWayAgreement class.
            </summary>
            <param name="senderBusinessIdentity">The sender business
            identity</param>
            <param name="receiverBusinessIdentity">The receiver business
            identity</param>
            <param name="protocolSettings">The AS2 protocol settings.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2OneWayAgreement.SenderBusinessIdentity">
            <summary>
            Gets or sets the sender business identity
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2OneWayAgreement.ReceiverBusinessIdentity">
            <summary>
            Gets or sets the receiver business identity
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2OneWayAgreement.ProtocolSettings">
            <summary>
            Gets or sets the AS2 protocol settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2OneWayAgreement.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.AS2ProtocolSettings">
            <summary>
            The AS2 agreement protocol settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2ProtocolSettings.#ctor">
            <summary>
            Initializes a new instance of the AS2ProtocolSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2ProtocolSettings.#ctor(Microsoft.Azure.Management.Logic.Models.AS2MessageConnectionSettings,Microsoft.Azure.Management.Logic.Models.AS2AcknowledgementConnectionSettings,Microsoft.Azure.Management.Logic.Models.AS2MdnSettings,Microsoft.Azure.Management.Logic.Models.AS2SecuritySettings,Microsoft.Azure.Management.Logic.Models.AS2ValidationSettings,Microsoft.Azure.Management.Logic.Models.AS2EnvelopeSettings,Microsoft.Azure.Management.Logic.Models.AS2ErrorSettings)">
            <summary>
            Initializes a new instance of the AS2ProtocolSettings class.
            </summary>
            <param name="messageConnectionSettings">The message connection
            settings.</param>
            <param name="acknowledgementConnectionSettings">The acknowledgement
            connection settings.</param>
            <param name="mdnSettings">The MDN settings.</param>
            <param name="securitySettings">The security settings.</param>
            <param name="validationSettings">The validation settings.</param>
            <param name="envelopeSettings">The envelope settings.</param>
            <param name="errorSettings">The error settings.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2ProtocolSettings.MessageConnectionSettings">
            <summary>
            Gets or sets the message connection settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2ProtocolSettings.AcknowledgementConnectionSettings">
            <summary>
            Gets or sets the acknowledgement connection settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2ProtocolSettings.MdnSettings">
            <summary>
            Gets or sets the MDN settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2ProtocolSettings.SecuritySettings">
            <summary>
            Gets or sets the security settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2ProtocolSettings.ValidationSettings">
            <summary>
            Gets or sets the validation settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2ProtocolSettings.EnvelopeSettings">
            <summary>
            Gets or sets the envelope settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2ProtocolSettings.ErrorSettings">
            <summary>
            Gets or sets the error settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2ProtocolSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.AS2SecuritySettings">
            <summary>
            The AS2 agreement security settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2SecuritySettings.#ctor">
            <summary>
            Initializes a new instance of the AS2SecuritySettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2SecuritySettings.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the AS2SecuritySettings class.
            </summary>
            <param name="overrideGroupSigningCertificate">The value indicating
            whether to send or request a MDN.</param>
            <param name="enableNrrForInboundEncodedMessages">The value
            indicating whether to enable NRR for inbound encoded
            messages.</param>
            <param name="enableNrrForInboundDecodedMessages">The value
            indicating whether to enable NRR for inbound decoded
            messages.</param>
            <param name="enableNrrForOutboundMdn">The value indicating whether
            to enable NRR for outbound MDN.</param>
            <param name="enableNrrForOutboundEncodedMessages">The value
            indicating whether to enable NRR for outbound encoded
            messages.</param>
            <param name="enableNrrForOutboundDecodedMessages">The value
            indicating whether to enable NRR for outbound decoded
            messages.</param>
            <param name="enableNrrForInboundMdn">The value indicating whether
            to enable NRR for inbound MDN.</param>
            <param name="signingCertificateName">The name of the signing
            certificate.</param>
            <param name="encryptionCertificateName">The name of the encryption
            certificate.</param>
            <param name="sha2AlgorithmFormat">The Sha2 algorithm format. Valid
            values are Sha2, ShaHashSize, ShaHyphenHashSize,
            Sha2UnderscoreHashSize.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2SecuritySettings.OverrideGroupSigningCertificate">
            <summary>
            Gets or sets the value indicating whether to send or request a MDN.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2SecuritySettings.SigningCertificateName">
            <summary>
            Gets or sets the name of the signing certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2SecuritySettings.EncryptionCertificateName">
            <summary>
            Gets or sets the name of the encryption certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2SecuritySettings.EnableNrrForInboundEncodedMessages">
            <summary>
            Gets or sets the value indicating whether to enable NRR for inbound
            encoded messages.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2SecuritySettings.EnableNrrForInboundDecodedMessages">
            <summary>
            Gets or sets the value indicating whether to enable NRR for inbound
            decoded messages.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2SecuritySettings.EnableNrrForOutboundMdn">
            <summary>
            Gets or sets the value indicating whether to enable NRR for
            outbound MDN.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2SecuritySettings.EnableNrrForOutboundEncodedMessages">
            <summary>
            Gets or sets the value indicating whether to enable NRR for
            outbound encoded messages.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2SecuritySettings.EnableNrrForOutboundDecodedMessages">
            <summary>
            Gets or sets the value indicating whether to enable NRR for
            outbound decoded messages.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2SecuritySettings.EnableNrrForInboundMdn">
            <summary>
            Gets or sets the value indicating whether to enable NRR for inbound
            MDN.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2SecuritySettings.Sha2AlgorithmFormat">
            <summary>
            Gets or sets the Sha2 algorithm format. Valid values are Sha2,
            ShaHashSize, ShaHyphenHashSize, Sha2UnderscoreHashSize.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2SecuritySettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.AS2ValidationSettings">
            <summary>
            The AS2 agreement validation settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2ValidationSettings.#ctor">
            <summary>
            Initializes a new instance of the AS2ValidationSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2ValidationSettings.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the AS2ValidationSettings class.
            </summary>
            <param name="overrideMessageProperties">The value indicating
            whether to override incoming message properties with those in
            agreement.</param>
            <param name="encryptMessage">The value indicating whether the
            message has to be encrypted.</param>
            <param name="signMessage">The value indicating whether the message
            has to be signed.</param>
            <param name="compressMessage">The value indicating whether the
            message has to be compressed.</param>
            <param name="checkDuplicateMessage">The value indicating whether to
            check for duplicate message.</param>
            <param name="interchangeDuplicatesValidityDays">The number of days
            to look back for duplicate interchange.</param>
            <param name="checkCertificateRevocationListOnSend">The value
            indicating whether to check for certificate revocation list on
            send.</param>
            <param name="checkCertificateRevocationListOnReceive">The value
            indicating whether to check for certificate revocation list on
            receive.</param>
            <param name="encryptionAlgorithm">The encryption algorithm.
            Possible values include: 'NotSpecified', 'None', 'DES3', 'RC2',
            'AES128', 'AES192', 'AES256'</param>
            <param name="signingAlgorithm">The signing algorithm. Possible
            values include: 'NotSpecified', 'Default', 'SHA1', 'SHA2256',
            'SHA2384', 'SHA2512'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2ValidationSettings.OverrideMessageProperties">
            <summary>
            Gets or sets the value indicating whether to override incoming
            message properties with those in agreement.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2ValidationSettings.EncryptMessage">
            <summary>
            Gets or sets the value indicating whether the message has to be
            encrypted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2ValidationSettings.SignMessage">
            <summary>
            Gets or sets the value indicating whether the message has to be
            signed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2ValidationSettings.CompressMessage">
            <summary>
            Gets or sets the value indicating whether the message has to be
            compressed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2ValidationSettings.CheckDuplicateMessage">
            <summary>
            Gets or sets the value indicating whether to check for duplicate
            message.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2ValidationSettings.InterchangeDuplicatesValidityDays">
            <summary>
            Gets or sets the number of days to look back for duplicate
            interchange.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2ValidationSettings.CheckCertificateRevocationListOnSend">
            <summary>
            Gets or sets the value indicating whether to check for certificate
            revocation list on send.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2ValidationSettings.CheckCertificateRevocationListOnReceive">
            <summary>
            Gets or sets the value indicating whether to check for certificate
            revocation list on receive.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2ValidationSettings.EncryptionAlgorithm">
            <summary>
            Gets or sets the encryption algorithm. Possible values include:
            'NotSpecified', 'None', 'DES3', 'RC2', 'AES128', 'AES192', 'AES256'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AS2ValidationSettings.SigningAlgorithm">
            <summary>
            Gets or sets the signing algorithm. Possible values include:
            'NotSpecified', 'Default', 'SHA1', 'SHA2256', 'SHA2384', 'SHA2512'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AS2ValidationSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.AssemblyDefinition">
            <summary>
            The assembly definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AssemblyDefinition.#ctor">
            <summary>
            Initializes a new instance of the AssemblyDefinition class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AssemblyDefinition.#ctor(Microsoft.Azure.Management.Logic.Models.AssemblyProperties,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the AssemblyDefinition class.
            </summary>
            <param name="properties">The assembly properties.</param>
            <param name="id">The resource id.</param>
            <param name="name">Gets the resource name.</param>
            <param name="type">Gets the resource type.</param>
            <param name="location">The resource location.</param>
            <param name="tags">The resource tags.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AssemblyDefinition.Properties">
            <summary>
            Gets or sets the assembly properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AssemblyDefinition.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.AssemblyProperties">
            <summary>
            The assembly properties definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AssemblyProperties.#ctor">
            <summary>
            Initializes a new instance of the AssemblyProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AssemblyProperties.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Object,System.Object,System.String,Microsoft.Azure.Management.Logic.Models.ContentLink,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the AssemblyProperties class.
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <param name="createdTime">The artifact creation time.</param>
            <param name="changedTime">The artifact changed time.</param>
            <param name="contentType">The content type.</param>
            <param name="contentLink">The content link.</param>
            <param name="assemblyVersion">The assembly version.</param>
            <param name="assemblyCulture">The assembly culture.</param>
            <param name="assemblyPublicKeyToken">The assembly public key
            token.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AssemblyProperties.AssemblyName">
            <summary>
            Gets or sets the assembly name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AssemblyProperties.AssemblyVersion">
            <summary>
            Gets or sets the assembly version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AssemblyProperties.AssemblyCulture">
            <summary>
            Gets or sets the assembly culture.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AssemblyProperties.AssemblyPublicKeyToken">
            <summary>
            Gets or sets the assembly public key token.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AssemblyProperties.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.AzureResourceErrorInfo">
            <summary>
            The azure resource error info.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AzureResourceErrorInfo.#ctor">
            <summary>
            Initializes a new instance of the AzureResourceErrorInfo class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AzureResourceErrorInfo.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.AzureResourceErrorInfo})">
            <summary>
            Initializes a new instance of the AzureResourceErrorInfo class.
            </summary>
            <param name="code">The error code.</param>
            <param name="message">The error message.</param>
            <param name="details">The error details.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AzureResourceErrorInfo.Message">
            <summary>
            Gets or sets the error message.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.AzureResourceErrorInfo.Details">
            <summary>
            Gets or sets the error details.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.AzureResourceErrorInfo.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.B2BPartnerContent">
            <summary>
            The B2B partner content.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.B2BPartnerContent.#ctor">
            <summary>
            Initializes a new instance of the B2BPartnerContent class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.B2BPartnerContent.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.BusinessIdentity})">
            <summary>
            Initializes a new instance of the B2BPartnerContent class.
            </summary>
            <param name="businessIdentities">The list of partner business
            identities.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.B2BPartnerContent.BusinessIdentities">
            <summary>
            Gets or sets the list of partner business identities.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.BatchConfiguration">
            <summary>
            The batch configuration resource definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.BatchConfiguration.#ctor">
            <summary>
            Initializes a new instance of the BatchConfiguration class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.BatchConfiguration.#ctor(Microsoft.Azure.Management.Logic.Models.BatchConfigurationProperties,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the BatchConfiguration class.
            </summary>
            <param name="properties">The batch configuration
            properties.</param>
            <param name="id">The resource id.</param>
            <param name="name">Gets the resource name.</param>
            <param name="type">Gets the resource type.</param>
            <param name="location">The resource location.</param>
            <param name="tags">The resource tags.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.BatchConfiguration.Properties">
            <summary>
            Gets or sets the batch configuration properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.BatchConfiguration.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.BatchConfigurationProperties">
            <summary>
            The batch configuration properties definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.BatchConfigurationProperties.#ctor">
            <summary>
            Initializes a new instance of the BatchConfigurationProperties
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.BatchConfigurationProperties.#ctor(System.String,Microsoft.Azure.Management.Logic.Models.BatchReleaseCriteria,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Object)">
            <summary>
            Initializes a new instance of the BatchConfigurationProperties
            class.
            </summary>
            <param name="batchGroupName">The name of the batch group.</param>
            <param name="releaseCriteria">The batch release criteria.</param>
            <param name="createdTime">The artifact creation time.</param>
            <param name="changedTime">The artifact changed time.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.BatchConfigurationProperties.BatchGroupName">
            <summary>
            Gets or sets the name of the batch group.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.BatchConfigurationProperties.ReleaseCriteria">
            <summary>
            Gets or sets the batch release criteria.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.BatchConfigurationProperties.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.BatchReleaseCriteria">
            <summary>
            The batch release criteria.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.BatchReleaseCriteria.#ctor">
            <summary>
            Initializes a new instance of the BatchReleaseCriteria class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.BatchReleaseCriteria.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.Azure.Management.Logic.Models.WorkflowTriggerRecurrence)">
            <summary>
            Initializes a new instance of the BatchReleaseCriteria class.
            </summary>
            <param name="messageCount">The message count.</param>
            <param name="batchSize">The batch size in bytes.</param>
            <param name="recurrence">The recurrence.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.BatchReleaseCriteria.MessageCount">
            <summary>
            Gets or sets the message count.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.BatchReleaseCriteria.BatchSize">
            <summary>
            Gets or sets the batch size in bytes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.BatchReleaseCriteria.Recurrence">
            <summary>
            Gets or sets the recurrence.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.BusinessIdentity">
            <summary>
            The integration account partner's business identity.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.BusinessIdentity.#ctor">
            <summary>
            Initializes a new instance of the BusinessIdentity class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.BusinessIdentity.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the BusinessIdentity class.
            </summary>
            <param name="qualifier">The business identity qualifier e.g.
            as2identity, ZZ, ZZZ, 31, 32</param>
            <param name="value">The user defined business identity
            value.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.BusinessIdentity.Qualifier">
            <summary>
            Gets or sets the business identity qualifier e.g. as2identity, ZZ,
            ZZZ, 31, 32
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.BusinessIdentity.Value">
            <summary>
            Gets or sets the user defined business identity value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.BusinessIdentity.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.CallbackUrl">
            <summary>
            The callback url.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.CallbackUrl.#ctor">
            <summary>
            Initializes a new instance of the CallbackUrl class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.CallbackUrl.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CallbackUrl class.
            </summary>
            <param name="value">The URL value.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.CallbackUrl.Value">
            <summary>
            Gets or sets the URL value.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.ContentHash">
            <summary>
            The content hash.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ContentHash.#ctor">
            <summary>
            Initializes a new instance of the ContentHash class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ContentHash.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ContentHash class.
            </summary>
            <param name="algorithm">The algorithm of the content hash.</param>
            <param name="value">The value of the content hash.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ContentHash.Algorithm">
            <summary>
            Gets or sets the algorithm of the content hash.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ContentHash.Value">
            <summary>
            Gets or sets the value of the content hash.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.ContentLink">
            <summary>
            The content link.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ContentLink.#ctor">
            <summary>
            Initializes a new instance of the ContentLink class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ContentLink.#ctor(System.String,System.String,System.Nullable{System.Int64},Microsoft.Azure.Management.Logic.Models.ContentHash,System.Object)">
            <summary>
            Initializes a new instance of the ContentLink class.
            </summary>
            <param name="uri">The content link URI.</param>
            <param name="contentVersion">The content version.</param>
            <param name="contentSize">The content size.</param>
            <param name="contentHash">The content hash.</param>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ContentLink.Uri">
            <summary>
            Gets or sets the content link URI.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ContentLink.ContentVersion">
            <summary>
            Gets or sets the content version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ContentLink.ContentSize">
            <summary>
            Gets or sets the content size.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ContentLink.ContentHash">
            <summary>
            Gets or sets the content hash.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ContentLink.Metadata">
            <summary>
            Gets or sets the metadata.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.Correlation">
            <summary>
            The correlation property.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Correlation.#ctor">
            <summary>
            Initializes a new instance of the Correlation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Correlation.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Correlation class.
            </summary>
            <param name="clientTrackingId">The client tracking id.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Correlation.ClientTrackingId">
            <summary>
            Gets or sets the client tracking id.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.DayOfWeek">
            <summary>
            Defines values for DayOfWeek.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.DaysOfWeek">
            <summary>
            Defines values for DaysOfWeek.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.EdifactAcknowledgementSettings">
            <summary>
            The Edifact agreement acknowledgement settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactAcknowledgementSettings.#ctor">
            <summary>
            Initializes a new instance of the EdifactAcknowledgementSettings
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactAcknowledgementSettings.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the EdifactAcknowledgementSettings
            class.
            </summary>
            <param name="needTechnicalAcknowledgement">The value indicating
            whether technical acknowledgement is needed.</param>
            <param name="batchTechnicalAcknowledgements">The value indicating
            whether to batch the technical acknowledgements.</param>
            <param name="needFunctionalAcknowledgement">The value indicating
            whether functional acknowledgement is needed.</param>
            <param name="batchFunctionalAcknowledgements">The value indicating
            whether to batch functional acknowledgements.</param>
            <param name="needLoopForValidMessages">The value indicating whether
            a loop is needed for valid messages.</param>
            <param name="sendSynchronousAcknowledgement">The value indicating
            whether to send synchronous acknowledgement.</param>
            <param name="acknowledgementControlNumberLowerBound">The
            acknowledgement control number lower bound.</param>
            <param name="acknowledgementControlNumberUpperBound">The
            acknowledgement control number upper bound.</param>
            <param name="rolloverAcknowledgementControlNumber">The value
            indicating whether to rollover acknowledgement control
            number.</param>
            <param name="acknowledgementControlNumberPrefix">The
            acknowledgement control number prefix.</param>
            <param name="acknowledgementControlNumberSuffix">The
            acknowledgement control number suffix.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactAcknowledgementSettings.NeedTechnicalAcknowledgement">
            <summary>
            Gets or sets the value indicating whether technical acknowledgement
            is needed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactAcknowledgementSettings.BatchTechnicalAcknowledgements">
            <summary>
            Gets or sets the value indicating whether to batch the technical
            acknowledgements.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactAcknowledgementSettings.NeedFunctionalAcknowledgement">
            <summary>
            Gets or sets the value indicating whether functional
            acknowledgement is needed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactAcknowledgementSettings.BatchFunctionalAcknowledgements">
            <summary>
            Gets or sets the value indicating whether to batch functional
            acknowledgements.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactAcknowledgementSettings.NeedLoopForValidMessages">
            <summary>
            Gets or sets the value indicating whether a loop is needed for
            valid messages.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactAcknowledgementSettings.SendSynchronousAcknowledgement">
            <summary>
            Gets or sets the value indicating whether to send synchronous
            acknowledgement.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactAcknowledgementSettings.AcknowledgementControlNumberPrefix">
            <summary>
            Gets or sets the acknowledgement control number prefix.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactAcknowledgementSettings.AcknowledgementControlNumberSuffix">
            <summary>
            Gets or sets the acknowledgement control number suffix.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactAcknowledgementSettings.AcknowledgementControlNumberLowerBound">
            <summary>
            Gets or sets the acknowledgement control number lower bound.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactAcknowledgementSettings.AcknowledgementControlNumberUpperBound">
            <summary>
            Gets or sets the acknowledgement control number upper bound.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactAcknowledgementSettings.RolloverAcknowledgementControlNumber">
            <summary>
            Gets or sets the value indicating whether to rollover
            acknowledgement control number.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactAcknowledgementSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.EdifactAgreementContent">
            <summary>
            The Edifact agreement content.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactAgreementContent.#ctor">
            <summary>
            Initializes a new instance of the EdifactAgreementContent class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactAgreementContent.#ctor(Microsoft.Azure.Management.Logic.Models.EdifactOneWayAgreement,Microsoft.Azure.Management.Logic.Models.EdifactOneWayAgreement)">
            <summary>
            Initializes a new instance of the EdifactAgreementContent class.
            </summary>
            <param name="receiveAgreement">The EDIFACT one-way receive
            agreement.</param>
            <param name="sendAgreement">The EDIFACT one-way send
            agreement.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactAgreementContent.ReceiveAgreement">
            <summary>
            Gets or sets the EDIFACT one-way receive agreement.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactAgreementContent.SendAgreement">
            <summary>
            Gets or sets the EDIFACT one-way send agreement.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactAgreementContent.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.EdifactCharacterSet">
            <summary>
            Defines values for EdifactCharacterSet.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.EdifactDecimalIndicator">
            <summary>
            Defines values for EdifactDecimalIndicator.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.EdifactDelimiterOverride">
            <summary>
            The Edifact delimiter override settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactDelimiterOverride.#ctor">
            <summary>
            Initializes a new instance of the EdifactDelimiterOverride class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactDelimiterOverride.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.Azure.Management.Logic.Models.SegmentTerminatorSuffix,Microsoft.Azure.Management.Logic.Models.EdifactDecimalIndicator,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the EdifactDelimiterOverride class.
            </summary>
            <param name="dataElementSeparator">The data element
            separator.</param>
            <param name="componentSeparator">The component separator.</param>
            <param name="segmentTerminator">The segment terminator.</param>
            <param name="repetitionSeparator">The repetition separator.</param>
            <param name="segmentTerminatorSuffix">The segment terminator
            suffix. Possible values include: 'NotSpecified', 'None', 'CR',
            'LF', 'CRLF'</param>
            <param name="decimalPointIndicator">The decimal point indicator.
            Possible values include: 'NotSpecified', 'Comma', 'Decimal'</param>
            <param name="releaseIndicator">The release indicator.</param>
            <param name="messageId">The message id.</param>
            <param name="messageVersion">The message version.</param>
            <param name="messageRelease">The message release.</param>
            <param name="messageAssociationAssignedCode">The message
            association assigned code.</param>
            <param name="targetNamespace">The target namespace on which this
            delimiter settings has to be applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactDelimiterOverride.MessageId">
            <summary>
            Gets or sets the message id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactDelimiterOverride.MessageVersion">
            <summary>
            Gets or sets the message version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactDelimiterOverride.MessageRelease">
            <summary>
            Gets or sets the message release.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactDelimiterOverride.DataElementSeparator">
            <summary>
            Gets or sets the data element separator.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactDelimiterOverride.ComponentSeparator">
            <summary>
            Gets or sets the component separator.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactDelimiterOverride.SegmentTerminator">
            <summary>
            Gets or sets the segment terminator.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactDelimiterOverride.RepetitionSeparator">
            <summary>
            Gets or sets the repetition separator.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactDelimiterOverride.SegmentTerminatorSuffix">
            <summary>
            Gets or sets the segment terminator suffix. Possible values
            include: 'NotSpecified', 'None', 'CR', 'LF', 'CRLF'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactDelimiterOverride.DecimalPointIndicator">
            <summary>
            Gets or sets the decimal point indicator. Possible values include:
            'NotSpecified', 'Comma', 'Decimal'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactDelimiterOverride.ReleaseIndicator">
            <summary>
            Gets or sets the release indicator.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactDelimiterOverride.MessageAssociationAssignedCode">
            <summary>
            Gets or sets the message association assigned code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactDelimiterOverride.TargetNamespace">
            <summary>
            Gets or sets the target namespace on which this delimiter settings
            has to be applied.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactDelimiterOverride.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeOverride">
            <summary>
            The Edifact envelope override settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeOverride.#ctor">
            <summary>
            Initializes a new instance of the EdifactEnvelopeOverride class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeOverride.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the EdifactEnvelopeOverride class.
            </summary>
            <param name="messageId">The message id on which this envelope
            settings has to be applied.</param>
            <param name="messageVersion">The message version on which this
            envelope settings has to be applied.</param>
            <param name="messageRelease">The message release version on which
            this envelope settings has to be applied.</param>
            <param name="messageAssociationAssignedCode">The message
            association assigned code.</param>
            <param name="targetNamespace">The target namespace on which this
            envelope settings has to be applied.</param>
            <param name="functionalGroupId">The functional group id.</param>
            <param name="senderApplicationQualifier">The sender application
            qualifier.</param>
            <param name="senderApplicationId">The sender application
            id.</param>
            <param name="receiverApplicationQualifier">The receiver application
            qualifier.</param>
            <param name="receiverApplicationId">The receiver application
            id.</param>
            <param name="controllingAgencyCode">The controlling agency
            code.</param>
            <param name="groupHeaderMessageVersion">The group header message
            version.</param>
            <param name="groupHeaderMessageRelease">The group header message
            release.</param>
            <param name="associationAssignedCode">The association assigned
            code.</param>
            <param name="applicationPassword">The application password.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeOverride.MessageId">
            <summary>
            Gets or sets the message id on which this envelope settings has to
            be applied.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeOverride.MessageVersion">
            <summary>
            Gets or sets the message version on which this envelope settings
            has to be applied.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeOverride.MessageRelease">
            <summary>
            Gets or sets the message release version on which this envelope
            settings has to be applied.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeOverride.MessageAssociationAssignedCode">
            <summary>
            Gets or sets the message association assigned code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeOverride.TargetNamespace">
            <summary>
            Gets or sets the target namespace on which this envelope settings
            has to be applied.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeOverride.FunctionalGroupId">
            <summary>
            Gets or sets the functional group id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeOverride.SenderApplicationQualifier">
            <summary>
            Gets or sets the sender application qualifier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeOverride.SenderApplicationId">
            <summary>
            Gets or sets the sender application id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeOverride.ReceiverApplicationQualifier">
            <summary>
            Gets or sets the receiver application qualifier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeOverride.ReceiverApplicationId">
            <summary>
            Gets or sets the receiver application id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeOverride.ControllingAgencyCode">
            <summary>
            Gets or sets the controlling agency code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeOverride.GroupHeaderMessageVersion">
            <summary>
            Gets or sets the group header message version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeOverride.GroupHeaderMessageRelease">
            <summary>
            Gets or sets the group header message release.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeOverride.AssociationAssignedCode">
            <summary>
            Gets or sets the association assigned code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeOverride.ApplicationPassword">
            <summary>
            Gets or sets the application password.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings">
            <summary>
            The Edifact agreement envelope settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.#ctor">
            <summary>
            Initializes a new instance of the EdifactEnvelopeSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Int64,System.Int64,System.Boolean,System.Int64,System.Int64,System.Boolean,System.Boolean,System.Int64,System.Int64,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the EdifactEnvelopeSettings class.
            </summary>
            <param name="applyDelimiterStringAdvice">The value indicating
            whether to apply delimiter string advice.</param>
            <param name="createGroupingSegments">The value indicating whether
            to create grouping segments.</param>
            <param name="enableDefaultGroupHeaders">The value indicating
            whether to enable default group headers.</param>
            <param name="interchangeControlNumberLowerBound">The interchange
            control number lower bound.</param>
            <param name="interchangeControlNumberUpperBound">The interchange
            control number upper bound.</param>
            <param name="rolloverInterchangeControlNumber">The value indicating
            whether to rollover interchange control number.</param>
            <param name="groupControlNumberLowerBound">The group control number
            lower bound.</param>
            <param name="groupControlNumberUpperBound">The group control number
            upper bound.</param>
            <param name="rolloverGroupControlNumber">The value indicating
            whether to rollover group control number.</param>
            <param name="overwriteExistingTransactionSetControlNumber">The
            value indicating whether to overwrite existing transaction set
            control number.</param>
            <param name="transactionSetControlNumberLowerBound">The transaction
            set control number lower bound.</param>
            <param name="transactionSetControlNumberUpperBound">The transaction
            set control number upper bound.</param>
            <param name="rolloverTransactionSetControlNumber">The value
            indicating whether to rollover transaction set control
            number.</param>
            <param name="isTestInterchange">The value indicating whether the
            message is a test interchange.</param>
            <param name="groupAssociationAssignedCode">The group association
            assigned code.</param>
            <param name="communicationAgreementId">The communication agreement
            id.</param>
            <param name="recipientReferencePasswordValue">The recipient
            reference password value.</param>
            <param name="recipientReferencePasswordQualifier">The recipient
            reference password qualifier.</param>
            <param name="applicationReferenceId">The application reference
            id.</param>
            <param name="processingPriorityCode">The processing priority
            code.</param>
            <param name="interchangeControlNumberPrefix">The interchange
            control number prefix.</param>
            <param name="interchangeControlNumberSuffix">The interchange
            control number suffix.</param>
            <param name="senderReverseRoutingAddress">The sender reverse
            routing address.</param>
            <param name="receiverReverseRoutingAddress">The receiver reverse
            routing address.</param>
            <param name="functionalGroupId">The functional group id.</param>
            <param name="groupControllingAgencyCode">The group controlling
            agency code.</param>
            <param name="groupMessageVersion">The group message
            version.</param>
            <param name="groupMessageRelease">The group message
            release.</param>
            <param name="groupControlNumberPrefix">The group control number
            prefix.</param>
            <param name="groupControlNumberSuffix">The group control number
            suffix.</param>
            <param name="groupApplicationReceiverQualifier">The group
            application receiver qualifier.</param>
            <param name="groupApplicationReceiverId">The group application
            receiver id.</param>
            <param name="groupApplicationSenderQualifier">The group application
            sender qualifier.</param>
            <param name="groupApplicationSenderId">The group application sender
            id.</param>
            <param name="groupApplicationPassword">The group application
            password.</param>
            <param name="transactionSetControlNumberPrefix">The transaction set
            control number prefix.</param>
            <param name="transactionSetControlNumberSuffix">The transaction set
            control number suffix.</param>
            <param name="senderInternalIdentification">The sender internal
            identification.</param>
            <param name="senderInternalSubIdentification">The sender internal
            sub identification.</param>
            <param name="receiverInternalIdentification">The receiver internal
            identification.</param>
            <param name="receiverInternalSubIdentification">The receiver
            internal sub identification.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.GroupAssociationAssignedCode">
            <summary>
            Gets or sets the group association assigned code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.CommunicationAgreementId">
            <summary>
            Gets or sets the communication agreement id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.ApplyDelimiterStringAdvice">
            <summary>
            Gets or sets the value indicating whether to apply delimiter string
            advice.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.CreateGroupingSegments">
            <summary>
            Gets or sets the value indicating whether to create grouping
            segments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.EnableDefaultGroupHeaders">
            <summary>
            Gets or sets the value indicating whether to enable default group
            headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.RecipientReferencePasswordValue">
            <summary>
            Gets or sets the recipient reference password value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.RecipientReferencePasswordQualifier">
            <summary>
            Gets or sets the recipient reference password qualifier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.ApplicationReferenceId">
            <summary>
            Gets or sets the application reference id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.ProcessingPriorityCode">
            <summary>
            Gets or sets the processing priority code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.InterchangeControlNumberLowerBound">
            <summary>
            Gets or sets the interchange control number lower bound.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.InterchangeControlNumberUpperBound">
            <summary>
            Gets or sets the interchange control number upper bound.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.RolloverInterchangeControlNumber">
            <summary>
            Gets or sets the value indicating whether to rollover interchange
            control number.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.InterchangeControlNumberPrefix">
            <summary>
            Gets or sets the interchange control number prefix.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.InterchangeControlNumberSuffix">
            <summary>
            Gets or sets the interchange control number suffix.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.SenderReverseRoutingAddress">
            <summary>
            Gets or sets the sender reverse routing address.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.ReceiverReverseRoutingAddress">
            <summary>
            Gets or sets the receiver reverse routing address.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.FunctionalGroupId">
            <summary>
            Gets or sets the functional group id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.GroupControllingAgencyCode">
            <summary>
            Gets or sets the group controlling agency code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.GroupMessageVersion">
            <summary>
            Gets or sets the group message version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.GroupMessageRelease">
            <summary>
            Gets or sets the group message release.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.GroupControlNumberLowerBound">
            <summary>
            Gets or sets the group control number lower bound.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.GroupControlNumberUpperBound">
            <summary>
            Gets or sets the group control number upper bound.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.RolloverGroupControlNumber">
            <summary>
            Gets or sets the value indicating whether to rollover group control
            number.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.GroupControlNumberPrefix">
            <summary>
            Gets or sets the group control number prefix.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.GroupControlNumberSuffix">
            <summary>
            Gets or sets the group control number suffix.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.GroupApplicationReceiverQualifier">
            <summary>
            Gets or sets the group application receiver qualifier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.GroupApplicationReceiverId">
            <summary>
            Gets or sets the group application receiver id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.GroupApplicationSenderQualifier">
            <summary>
            Gets or sets the group application sender qualifier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.GroupApplicationSenderId">
            <summary>
            Gets or sets the group application sender id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.GroupApplicationPassword">
            <summary>
            Gets or sets the group application password.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.OverwriteExistingTransactionSetControlNumber">
            <summary>
            Gets or sets the value indicating whether to overwrite existing
            transaction set control number.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.TransactionSetControlNumberPrefix">
            <summary>
            Gets or sets the transaction set control number prefix.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.TransactionSetControlNumberSuffix">
            <summary>
            Gets or sets the transaction set control number suffix.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.TransactionSetControlNumberLowerBound">
            <summary>
            Gets or sets the transaction set control number lower bound.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.TransactionSetControlNumberUpperBound">
            <summary>
            Gets or sets the transaction set control number upper bound.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.RolloverTransactionSetControlNumber">
            <summary>
            Gets or sets the value indicating whether to rollover transaction
            set control number.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.IsTestInterchange">
            <summary>
            Gets or sets the value indicating whether the message is a test
            interchange.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.SenderInternalIdentification">
            <summary>
            Gets or sets the sender internal identification.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.SenderInternalSubIdentification">
            <summary>
            Gets or sets the sender internal sub identification.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.ReceiverInternalIdentification">
            <summary>
            Gets or sets the receiver internal identification.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.ReceiverInternalSubIdentification">
            <summary>
            Gets or sets the receiver internal sub identification.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.EdifactFramingSettings">
            <summary>
            The Edifact agreement framing settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactFramingSettings.#ctor">
            <summary>
            Initializes a new instance of the EdifactFramingSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactFramingSettings.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,Microsoft.Azure.Management.Logic.Models.EdifactDecimalIndicator,Microsoft.Azure.Management.Logic.Models.SegmentTerminatorSuffix,System.String,System.String)">
            <summary>
            Initializes a new instance of the EdifactFramingSettings class.
            </summary>
            <param name="protocolVersion">The protocol version.</param>
            <param name="dataElementSeparator">The data element
            separator.</param>
            <param name="componentSeparator">The component separator.</param>
            <param name="segmentTerminator">The segment terminator.</param>
            <param name="releaseIndicator">The release indicator.</param>
            <param name="repetitionSeparator">The repetition separator.</param>
            <param name="characterSet">The EDIFACT frame setting characterSet.
            Possible values include: 'NotSpecified', 'UNOB', 'UNOA', 'UNOC',
            'UNOD', 'UNOE', 'UNOF', 'UNOG', 'UNOH', 'UNOI', 'UNOJ', 'UNOK',
            'UNOX', 'UNOY', 'KECA'</param>
            <param name="decimalPointIndicator">The EDIFACT frame setting
            decimal indicator. Possible values include: 'NotSpecified',
            'Comma', 'Decimal'</param>
            <param name="segmentTerminatorSuffix">The EDIFACT frame setting
            segment terminator suffix. Possible values include: 'NotSpecified',
            'None', 'CR', 'LF', 'CRLF'</param>
            <param name="serviceCodeListDirectoryVersion">The service code list
            directory version.</param>
            <param name="characterEncoding">The character encoding.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactFramingSettings.ServiceCodeListDirectoryVersion">
            <summary>
            Gets or sets the service code list directory version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactFramingSettings.CharacterEncoding">
            <summary>
            Gets or sets the character encoding.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactFramingSettings.ProtocolVersion">
            <summary>
            Gets or sets the protocol version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactFramingSettings.DataElementSeparator">
            <summary>
            Gets or sets the data element separator.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactFramingSettings.ComponentSeparator">
            <summary>
            Gets or sets the component separator.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactFramingSettings.SegmentTerminator">
            <summary>
            Gets or sets the segment terminator.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactFramingSettings.ReleaseIndicator">
            <summary>
            Gets or sets the release indicator.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactFramingSettings.RepetitionSeparator">
            <summary>
            Gets or sets the repetition separator.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactFramingSettings.CharacterSet">
            <summary>
            Gets or sets the EDIFACT frame setting characterSet. Possible
            values include: 'NotSpecified', 'UNOB', 'UNOA', 'UNOC', 'UNOD',
            'UNOE', 'UNOF', 'UNOG', 'UNOH', 'UNOI', 'UNOJ', 'UNOK', 'UNOX',
            'UNOY', 'KECA'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactFramingSettings.DecimalPointIndicator">
            <summary>
            Gets or sets the EDIFACT frame setting decimal indicator. Possible
            values include: 'NotSpecified', 'Comma', 'Decimal'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactFramingSettings.SegmentTerminatorSuffix">
            <summary>
            Gets or sets the EDIFACT frame setting segment terminator suffix.
            Possible values include: 'NotSpecified', 'None', 'CR', 'LF', 'CRLF'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactFramingSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.EdifactMessageFilter">
            <summary>
            The Edifact message filter for odata query.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactMessageFilter.#ctor">
            <summary>
            Initializes a new instance of the EdifactMessageFilter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactMessageFilter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the EdifactMessageFilter class.
            </summary>
            <param name="messageFilterType">The message filter type. Possible
            values include: 'NotSpecified', 'Include', 'Exclude'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactMessageFilter.MessageFilterType">
            <summary>
            Gets or sets the message filter type. Possible values include:
            'NotSpecified', 'Include', 'Exclude'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactMessageFilter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.EdifactMessageIdentifier">
            <summary>
            The Edifact message identifier.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactMessageIdentifier.#ctor">
            <summary>
            Initializes a new instance of the EdifactMessageIdentifier class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactMessageIdentifier.#ctor(System.String)">
            <summary>
            Initializes a new instance of the EdifactMessageIdentifier class.
            </summary>
            <param name="messageId">The message id on which this envelope
            settings has to be applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactMessageIdentifier.MessageId">
            <summary>
            Gets or sets the message id on which this envelope settings has to
            be applied.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactMessageIdentifier.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.EdifactOneWayAgreement">
            <summary>
            The Edifact one way agreement.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactOneWayAgreement.#ctor">
            <summary>
            Initializes a new instance of the EdifactOneWayAgreement class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactOneWayAgreement.#ctor(Microsoft.Azure.Management.Logic.Models.BusinessIdentity,Microsoft.Azure.Management.Logic.Models.BusinessIdentity,Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings)">
            <summary>
            Initializes a new instance of the EdifactOneWayAgreement class.
            </summary>
            <param name="senderBusinessIdentity">The sender business
            identity</param>
            <param name="receiverBusinessIdentity">The receiver business
            identity</param>
            <param name="protocolSettings">The EDIFACT protocol
            settings.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactOneWayAgreement.SenderBusinessIdentity">
            <summary>
            Gets or sets the sender business identity
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactOneWayAgreement.ReceiverBusinessIdentity">
            <summary>
            Gets or sets the receiver business identity
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactOneWayAgreement.ProtocolSettings">
            <summary>
            Gets or sets the EDIFACT protocol settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactOneWayAgreement.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.EdifactProcessingSettings">
            <summary>
            The Edifact agreement protocol settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactProcessingSettings.#ctor">
            <summary>
            Initializes a new instance of the EdifactProcessingSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactProcessingSettings.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EdifactProcessingSettings class.
            </summary>
            <param name="maskSecurityInfo">The value indicating whether to mask
            security information.</param>
            <param name="preserveInterchange">The value indicating whether to
            preserve interchange.</param>
            <param name="suspendInterchangeOnError">The value indicating
            whether to suspend interchange on error.</param>
            <param name="createEmptyXmlTagsForTrailingSeparators">The value
            indicating whether to create empty xml tags for trailing
            separators.</param>
            <param name="useDotAsDecimalSeparator">The value indicating whether
            to use dot as decimal separator.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactProcessingSettings.MaskSecurityInfo">
            <summary>
            Gets or sets the value indicating whether to mask security
            information.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactProcessingSettings.PreserveInterchange">
            <summary>
            Gets or sets the value indicating whether to preserve interchange.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactProcessingSettings.SuspendInterchangeOnError">
            <summary>
            Gets or sets the value indicating whether to suspend interchange on
            error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactProcessingSettings.CreateEmptyXmlTagsForTrailingSeparators">
            <summary>
            Gets or sets the value indicating whether to create empty xml tags
            for trailing separators.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactProcessingSettings.UseDotAsDecimalSeparator">
            <summary>
            Gets or sets the value indicating whether to use dot as decimal
            separator.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactProcessingSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings">
            <summary>
            The Edifact agreement protocol settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings.#ctor">
            <summary>
            Initializes a new instance of the EdifactProtocolSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings.#ctor(Microsoft.Azure.Management.Logic.Models.EdifactValidationSettings,Microsoft.Azure.Management.Logic.Models.EdifactFramingSettings,Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeSettings,Microsoft.Azure.Management.Logic.Models.EdifactAcknowledgementSettings,Microsoft.Azure.Management.Logic.Models.EdifactMessageFilter,Microsoft.Azure.Management.Logic.Models.EdifactProcessingSettings,System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.EdifactSchemaReference},System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.EdifactEnvelopeOverride},System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.EdifactMessageIdentifier},System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.EdifactValidationOverride},System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.EdifactDelimiterOverride})">
            <summary>
            Initializes a new instance of the EdifactProtocolSettings class.
            </summary>
            <param name="validationSettings">The EDIFACT validation
            settings.</param>
            <param name="framingSettings">The EDIFACT framing settings.</param>
            <param name="envelopeSettings">The EDIFACT envelope
            settings.</param>
            <param name="acknowledgementSettings">The EDIFACT acknowledgement
            settings.</param>
            <param name="messageFilter">The EDIFACT message filter.</param>
            <param name="processingSettings">The EDIFACT processing
            Settings.</param>
            <param name="schemaReferences">The EDIFACT schema
            references.</param>
            <param name="envelopeOverrides">The EDIFACT envelope override
            settings.</param>
            <param name="messageFilterList">The EDIFACT message filter
            list.</param>
            <param name="validationOverrides">The EDIFACT validation override
            settings.</param>
            <param name="edifactDelimiterOverrides">The EDIFACT delimiter
            override settings.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings.ValidationSettings">
            <summary>
            Gets or sets the EDIFACT validation settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings.FramingSettings">
            <summary>
            Gets or sets the EDIFACT framing settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings.EnvelopeSettings">
            <summary>
            Gets or sets the EDIFACT envelope settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings.AcknowledgementSettings">
            <summary>
            Gets or sets the EDIFACT acknowledgement settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings.MessageFilter">
            <summary>
            Gets or sets the EDIFACT message filter.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings.ProcessingSettings">
            <summary>
            Gets or sets the EDIFACT processing Settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings.EnvelopeOverrides">
            <summary>
            Gets or sets the EDIFACT envelope override settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings.MessageFilterList">
            <summary>
            Gets or sets the EDIFACT message filter list.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings.SchemaReferences">
            <summary>
            Gets or sets the EDIFACT schema references.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings.ValidationOverrides">
            <summary>
            Gets or sets the EDIFACT validation override settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings.EdifactDelimiterOverrides">
            <summary>
            Gets or sets the EDIFACT delimiter override settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.EdifactSchemaReference">
            <summary>
            The Edifact schema reference.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactSchemaReference.#ctor">
            <summary>
            Initializes a new instance of the EdifactSchemaReference class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactSchemaReference.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the EdifactSchemaReference class.
            </summary>
            <param name="messageId">The message id.</param>
            <param name="messageVersion">The message version.</param>
            <param name="messageRelease">The message release version.</param>
            <param name="schemaName">The schema name.</param>
            <param name="senderApplicationId">The sender application
            id.</param>
            <param name="senderApplicationQualifier">The sender application
            qualifier.</param>
            <param name="associationAssignedCode">The association assigned
            code.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactSchemaReference.MessageId">
            <summary>
            Gets or sets the message id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactSchemaReference.MessageVersion">
            <summary>
            Gets or sets the message version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactSchemaReference.MessageRelease">
            <summary>
            Gets or sets the message release version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactSchemaReference.SenderApplicationId">
            <summary>
            Gets or sets the sender application id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactSchemaReference.SenderApplicationQualifier">
            <summary>
            Gets or sets the sender application qualifier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactSchemaReference.AssociationAssignedCode">
            <summary>
            Gets or sets the association assigned code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactSchemaReference.SchemaName">
            <summary>
            Gets or sets the schema name.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactSchemaReference.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.EdifactValidationOverride">
            <summary>
            The Edifact validation override settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactValidationOverride.#ctor">
            <summary>
            Initializes a new instance of the EdifactValidationOverride class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactValidationOverride.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the EdifactValidationOverride class.
            </summary>
            <param name="messageId">The message id on which the validation
            settings has to be applied.</param>
            <param name="enforceCharacterSet">The value indicating whether to
            validate character Set.</param>
            <param name="validateEdiTypes">The value indicating whether to
            validate EDI types.</param>
            <param name="validateXsdTypes">The value indicating whether to
            validate XSD types.</param>
            <param name="allowLeadingAndTrailingSpacesAndZeroes">The value
            indicating whether to allow leading and trailing spaces and
            zeroes.</param>
            <param name="trailingSeparatorPolicy">The trailing separator
            policy. Possible values include: 'NotSpecified', 'NotAllowed',
            'Optional', 'Mandatory'</param>
            <param name="trimLeadingAndTrailingSpacesAndZeroes">The value
            indicating whether to trim leading and trailing spaces and
            zeroes.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactValidationOverride.MessageId">
            <summary>
            Gets or sets the message id on which the validation settings has to
            be applied.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactValidationOverride.EnforceCharacterSet">
            <summary>
            Gets or sets the value indicating whether to validate character
            Set.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactValidationOverride.ValidateEdiTypes">
            <summary>
            Gets or sets the value indicating whether to validate EDI types.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactValidationOverride.ValidateXsdTypes">
            <summary>
            Gets or sets the value indicating whether to validate XSD types.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactValidationOverride.AllowLeadingAndTrailingSpacesAndZeroes">
            <summary>
            Gets or sets the value indicating whether to allow leading and
            trailing spaces and zeroes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactValidationOverride.TrailingSeparatorPolicy">
            <summary>
            Gets or sets the trailing separator policy. Possible values
            include: 'NotSpecified', 'NotAllowed', 'Optional', 'Mandatory'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactValidationOverride.TrimLeadingAndTrailingSpacesAndZeroes">
            <summary>
            Gets or sets the value indicating whether to trim leading and
            trailing spaces and zeroes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactValidationOverride.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.EdifactValidationSettings">
            <summary>
            The Edifact agreement validation settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactValidationSettings.#ctor">
            <summary>
            Initializes a new instance of the EdifactValidationSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactValidationSettings.#ctor(System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the EdifactValidationSettings class.
            </summary>
            <param name="validateCharacterSet">The value indicating whether to
            validate character set in the message.</param>
            <param name="checkDuplicateInterchangeControlNumber">The value
            indicating whether to check for duplicate interchange control
            number.</param>
            <param name="interchangeControlNumberValidityDays">The validity
            period of interchange control number.</param>
            <param name="checkDuplicateGroupControlNumber">The value indicating
            whether to check for duplicate group control number.</param>
            <param name="checkDuplicateTransactionSetControlNumber">The value
            indicating whether to check for duplicate transaction set control
            number.</param>
            <param name="validateEdiTypes">The value indicating whether to
            Whether to validate EDI types.</param>
            <param name="validateXsdTypes">The value indicating whether to
            Whether to validate XSD types.</param>
            <param name="allowLeadingAndTrailingSpacesAndZeroes">The value
            indicating whether to allow leading and trailing spaces and
            zeroes.</param>
            <param name="trimLeadingAndTrailingSpacesAndZeroes">The value
            indicating whether to trim leading and trailing spaces and
            zeroes.</param>
            <param name="trailingSeparatorPolicy">The trailing separator
            policy. Possible values include: 'NotSpecified', 'NotAllowed',
            'Optional', 'Mandatory'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactValidationSettings.ValidateCharacterSet">
            <summary>
            Gets or sets the value indicating whether to validate character set
            in the message.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactValidationSettings.CheckDuplicateInterchangeControlNumber">
            <summary>
            Gets or sets the value indicating whether to check for duplicate
            interchange control number.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactValidationSettings.InterchangeControlNumberValidityDays">
            <summary>
            Gets or sets the validity period of interchange control number.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactValidationSettings.CheckDuplicateGroupControlNumber">
            <summary>
            Gets or sets the value indicating whether to check for duplicate
            group control number.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactValidationSettings.CheckDuplicateTransactionSetControlNumber">
            <summary>
            Gets or sets the value indicating whether to check for duplicate
            transaction set control number.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactValidationSettings.ValidateEdiTypes">
            <summary>
            Gets or sets the value indicating whether to Whether to validate
            EDI types.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactValidationSettings.ValidateXsdTypes">
            <summary>
            Gets or sets the value indicating whether to Whether to validate
            XSD types.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactValidationSettings.AllowLeadingAndTrailingSpacesAndZeroes">
            <summary>
            Gets or sets the value indicating whether to allow leading and
            trailing spaces and zeroes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactValidationSettings.TrimLeadingAndTrailingSpacesAndZeroes">
            <summary>
            Gets or sets the value indicating whether to trim leading and
            trailing spaces and zeroes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.EdifactValidationSettings.TrailingSeparatorPolicy">
            <summary>
            Gets or sets the trailing separator policy. Possible values
            include: 'NotSpecified', 'NotAllowed', 'Optional', 'Mandatory'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.EdifactValidationSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.EncryptionAlgorithm">
            <summary>
            Defines values for EncryptionAlgorithm.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.ErrorInfo">
            <summary>
            The error info.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ErrorInfo.#ctor">
            <summary>
            Initializes a new instance of the ErrorInfo class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ErrorInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ErrorInfo class.
            </summary>
            <param name="code">The error code.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ErrorInfo.Code">
            <summary>
            Gets or sets the error code.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ErrorInfo.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.ErrorProperties">
            <summary>
            Error properties indicate why the Logic service was not able to process
            the incoming request. The reason is provided in the error message.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ErrorProperties.#ctor">
            <summary>
            Initializes a new instance of the ErrorProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ErrorProperties.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ErrorProperties class.
            </summary>
            <param name="code">Error code.</param>
            <param name="message">Error message indicating why the operation
            failed.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ErrorProperties.Code">
            <summary>
            Gets or sets error code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ErrorProperties.Message">
            <summary>
            Gets or sets error message indicating why the operation failed.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.ErrorResponse">
            <summary>
            Error response indicates Logic service is not able to process the
            incoming request. The error property contains the error details.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ErrorResponse.#ctor">
            <summary>
            Initializes a new instance of the ErrorResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ErrorResponse.#ctor(Microsoft.Azure.Management.Logic.Models.ErrorProperties)">
            <summary>
            Initializes a new instance of the ErrorResponse class.
            </summary>
            <param name="error">The error properties.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ErrorResponse.Error">
            <summary>
            Gets or sets the error properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.ErrorResponseException">
            <summary>
            Exception thrown for an invalid response with ErrorResponse
            information.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ErrorResponseException.Request">
            <summary>
            Gets information about the associated HTTP request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ErrorResponseException.Response">
            <summary>
            Gets information about the associated HTTP response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ErrorResponseException.Body">
            <summary>
            Gets or sets the body object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ErrorResponseException.#ctor">
            <summary>
            Initializes a new instance of the ErrorResponseException class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ErrorResponseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ErrorResponseException class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ErrorResponseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ErrorResponseException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.EventLevel">
            <summary>
            Defines values for EventLevel.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Expression.#ctor">
            <summary>
            Initializes a new instance of the Expression class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Expression.#ctor(System.String,System.Object,System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.Expression},Microsoft.Azure.Management.Logic.Models.AzureResourceErrorInfo)">
            <summary>
            Initializes a new instance of the Expression class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Expression.Text">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Expression.Value">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Expression.Subexpressions">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Expression.Error">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Expression.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ExpressionRoot.#ctor">
            <summary>
            Initializes a new instance of the ExpressionRoot class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ExpressionRoot.#ctor(System.String,System.Object,System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.Expression},Microsoft.Azure.Management.Logic.Models.AzureResourceErrorInfo,System.String)">
            <summary>
            Initializes a new instance of the ExpressionRoot class.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ExpressionRoot.Path">
            <summary>
            Gets or sets the path.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ExpressionRoot.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.GenerateUpgradedDefinitionParameters">
            <summary>
            The parameters to generate upgraded definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.GenerateUpgradedDefinitionParameters.#ctor">
            <summary>
            Initializes a new instance of the
            GenerateUpgradedDefinitionParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.GenerateUpgradedDefinitionParameters.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            GenerateUpgradedDefinitionParameters class.
            </summary>
            <param name="targetSchemaVersion">The target schema
            version.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.GenerateUpgradedDefinitionParameters.TargetSchemaVersion">
            <summary>
            Gets or sets the target schema version.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters">
            <summary>
            The callback url parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters.#ctor">
            <summary>
            Initializes a new instance of the GetCallbackUrlParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters.#ctor(System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the GetCallbackUrlParameters class.
            </summary>
            <param name="notAfter">The expiry time.</param>
            <param name="keyType">The key type. Possible values include:
            'NotSpecified', 'Primary', 'Secondary'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters.NotAfter">
            <summary>
            Gets or sets the expiry time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters.KeyType">
            <summary>
            Gets or sets the key type. Possible values include: 'NotSpecified',
            'Primary', 'Secondary'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.HashingAlgorithm">
            <summary>
            Defines values for HashingAlgorithm.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.IntegrationAccount">
            <summary>
            The integration account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccount.#ctor">
            <summary>
            Initializes a new instance of the IntegrationAccount class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccount.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Object,Microsoft.Azure.Management.Logic.Models.IntegrationAccountSku)">
            <summary>
            Initializes a new instance of the IntegrationAccount class.
            </summary>
            <param name="id">The resource id.</param>
            <param name="name">Gets the resource name.</param>
            <param name="type">Gets the resource type.</param>
            <param name="location">The resource location.</param>
            <param name="tags">The resource tags.</param>
            <param name="properties">The integration account
            properties.</param>
            <param name="sku">The sku.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccount.Properties">
            <summary>
            Gets or sets the integration account properties.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccount.Sku">
            <summary>
            Gets or sets the sku.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccount.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreement">
            <summary>
            The integration account agreement.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreement.#ctor">
            <summary>
            Initializes a new instance of the IntegrationAccountAgreement
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreement.#ctor(Microsoft.Azure.Management.Logic.Models.AgreementType,System.String,System.String,Microsoft.Azure.Management.Logic.Models.BusinessIdentity,Microsoft.Azure.Management.Logic.Models.BusinessIdentity,Microsoft.Azure.Management.Logic.Models.AgreementContent,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Object)">
            <summary>
            Initializes a new instance of the IntegrationAccountAgreement
            class.
            </summary>
            <param name="agreementType">The agreement type. Possible values
            include: 'NotSpecified', 'AS2', 'X12', 'Edifact'</param>
            <param name="hostPartner">The integration account partner that is
            set as host partner for this agreement.</param>
            <param name="guestPartner">The integration account partner that is
            set as guest partner for this agreement.</param>
            <param name="hostIdentity">The business identity of the host
            partner.</param>
            <param name="guestIdentity">The business identity of the guest
            partner.</param>
            <param name="content">The agreement content.</param>
            <param name="id">The resource id.</param>
            <param name="name">Gets the resource name.</param>
            <param name="type">Gets the resource type.</param>
            <param name="location">The resource location.</param>
            <param name="tags">The resource tags.</param>
            <param name="createdTime">The created time.</param>
            <param name="changedTime">The changed time.</param>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreement.CreatedTime">
            <summary>
            Gets the created time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreement.ChangedTime">
            <summary>
            Gets the changed time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreement.Metadata">
            <summary>
            Gets or sets the metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreement.AgreementType">
            <summary>
            Gets or sets the agreement type. Possible values include:
            'NotSpecified', 'AS2', 'X12', 'Edifact'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreement.HostPartner">
            <summary>
            Gets or sets the integration account partner that is set as host
            partner for this agreement.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreement.GuestPartner">
            <summary>
            Gets or sets the integration account partner that is set as guest
            partner for this agreement.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreement.HostIdentity">
            <summary>
            Gets or sets the business identity of the host partner.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreement.GuestIdentity">
            <summary>
            Gets or sets the business identity of the guest partner.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreement.Content">
            <summary>
            Gets or sets the agreement content.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreement.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreementFilter">
            <summary>
            The integration account agreement filter for odata query.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreementFilter.#ctor">
            <summary>
            Initializes a new instance of the IntegrationAccountAgreementFilter
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreementFilter.#ctor(Microsoft.Azure.Management.Logic.Models.AgreementType)">
            <summary>
            Initializes a new instance of the IntegrationAccountAgreementFilter
            class.
            </summary>
            <param name="agreementType">The agreement type of integration
            account agreement. Possible values include: 'NotSpecified', 'AS2',
            'X12', 'Edifact'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreementFilter.AgreementType">
            <summary>
            Gets or sets the agreement type of integration account agreement.
            Possible values include: 'NotSpecified', 'AS2', 'X12', 'Edifact'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountAgreementFilter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate">
            <summary>
            The integration account certificate.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate.#ctor">
            <summary>
            Initializes a new instance of the IntegrationAccountCertificate
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Object,Microsoft.Azure.Management.Logic.Models.KeyVaultKeyReference,System.String)">
            <summary>
            Initializes a new instance of the IntegrationAccountCertificate
            class.
            </summary>
            <param name="id">The resource id.</param>
            <param name="name">Gets the resource name.</param>
            <param name="type">Gets the resource type.</param>
            <param name="location">The resource location.</param>
            <param name="tags">The resource tags.</param>
            <param name="createdTime">The created time.</param>
            <param name="changedTime">The changed time.</param>
            <param name="metadata">The metadata.</param>
            <param name="key">The key details in the key vault.</param>
            <param name="publicCertificate">The public certificate.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate.CreatedTime">
            <summary>
            Gets the created time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate.ChangedTime">
            <summary>
            Gets the changed time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate.Metadata">
            <summary>
            Gets or sets the metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate.Key">
            <summary>
            Gets or sets the key details in the key vault.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate.PublicCertificate">
            <summary>
            Gets or sets the public certificate.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.IntegrationAccountMap">
            <summary>
            The integration account map.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountMap.#ctor">
            <summary>
            Initializes a new instance of the IntegrationAccountMap class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountMap.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Logic.Models.IntegrationAccountMapPropertiesParametersSchema,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,Microsoft.Azure.Management.Logic.Models.ContentLink,System.Object)">
            <summary>
            Initializes a new instance of the IntegrationAccountMap class.
            </summary>
            <param name="mapType">The map type. Possible values include:
            'NotSpecified', 'Xslt', 'Xslt20', 'Xslt30', 'Liquid'</param>
            <param name="id">The resource id.</param>
            <param name="name">Gets the resource name.</param>
            <param name="type">Gets the resource type.</param>
            <param name="location">The resource location.</param>
            <param name="tags">The resource tags.</param>
            <param name="parametersSchema">The parameters schema of integration
            account map.</param>
            <param name="createdTime">The created time.</param>
            <param name="changedTime">The changed time.</param>
            <param name="content">The content.</param>
            <param name="contentType">The content type.</param>
            <param name="contentLink">The content link.</param>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountMap.MapType">
            <summary>
            Gets or sets the map type. Possible values include: 'NotSpecified',
            'Xslt', 'Xslt20', 'Xslt30', 'Liquid'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountMap.ParametersSchema">
            <summary>
            Gets or sets the parameters schema of integration account map.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountMap.CreatedTime">
            <summary>
            Gets the created time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountMap.ChangedTime">
            <summary>
            Gets the changed time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountMap.Content">
            <summary>
            Gets or sets the content.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountMap.ContentType">
            <summary>
            Gets or sets the content type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountMap.ContentLink">
            <summary>
            Gets the content link.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountMap.Metadata">
            <summary>
            Gets or sets the metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountMap.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.IntegrationAccountMapFilter">
            <summary>
            The integration account map filter for odata query.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountMapFilter.#ctor">
            <summary>
            Initializes a new instance of the IntegrationAccountMapFilter
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountMapFilter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the IntegrationAccountMapFilter
            class.
            </summary>
            <param name="mapType">The map type of integration account map.
            Possible values include: 'NotSpecified', 'Xslt', 'Xslt20',
            'Xslt30', 'Liquid'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountMapFilter.MapType">
            <summary>
            Gets or sets the map type of integration account map. Possible
            values include: 'NotSpecified', 'Xslt', 'Xslt20', 'Xslt30',
            'Liquid'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountMapFilter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.IntegrationAccountMapPropertiesParametersSchema">
            <summary>
            The parameters schema of integration account map.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountMapPropertiesParametersSchema.#ctor">
            <summary>
            Initializes a new instance of the
            IntegrationAccountMapPropertiesParametersSchema class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountMapPropertiesParametersSchema.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            IntegrationAccountMapPropertiesParametersSchema class.
            </summary>
            <param name="refProperty">The reference name.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountMapPropertiesParametersSchema.RefProperty">
            <summary>
            Gets or sets the reference name.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner">
            <summary>
            The integration account partner.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner.#ctor">
            <summary>
            Initializes a new instance of the IntegrationAccountPartner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner.#ctor(System.String,Microsoft.Azure.Management.Logic.Models.PartnerContent,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Object)">
            <summary>
            Initializes a new instance of the IntegrationAccountPartner class.
            </summary>
            <param name="partnerType">The partner type. Possible values
            include: 'NotSpecified', 'B2B'</param>
            <param name="content">The partner content.</param>
            <param name="id">The resource id.</param>
            <param name="name">Gets the resource name.</param>
            <param name="type">Gets the resource type.</param>
            <param name="location">The resource location.</param>
            <param name="tags">The resource tags.</param>
            <param name="createdTime">The created time.</param>
            <param name="changedTime">The changed time.</param>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner.PartnerType">
            <summary>
            Gets or sets the partner type. Possible values include:
            'NotSpecified', 'B2B'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner.CreatedTime">
            <summary>
            Gets the created time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner.ChangedTime">
            <summary>
            Gets the changed time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner.Metadata">
            <summary>
            Gets or sets the metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner.Content">
            <summary>
            Gets or sets the partner content.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter">
            <summary>
            The integration account partner filter for odata query.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter.#ctor">
            <summary>
            Initializes a new instance of the IntegrationAccountPartnerFilter
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the IntegrationAccountPartnerFilter
            class.
            </summary>
            <param name="partnerType">The partner type of integration account
            partner. Possible values include: 'NotSpecified', 'B2B'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter.PartnerType">
            <summary>
            Gets or sets the partner type of integration account partner.
            Possible values include: 'NotSpecified', 'B2B'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema">
            <summary>
            The integration account schema.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema.#ctor">
            <summary>
            Initializes a new instance of the IntegrationAccountSchema class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Object,System.String,System.String,Microsoft.Azure.Management.Logic.Models.ContentLink)">
            <summary>
            Initializes a new instance of the IntegrationAccountSchema class.
            </summary>
            <param name="schemaType">The schema type. Possible values include:
            'NotSpecified', 'Xml'</param>
            <param name="id">The resource id.</param>
            <param name="name">Gets the resource name.</param>
            <param name="type">Gets the resource type.</param>
            <param name="location">The resource location.</param>
            <param name="tags">The resource tags.</param>
            <param name="targetNamespace">The target namespace of the
            schema.</param>
            <param name="documentName">The document name.</param>
            <param name="fileName">The file name.</param>
            <param name="createdTime">The created time.</param>
            <param name="changedTime">The changed time.</param>
            <param name="metadata">The metadata.</param>
            <param name="content">The content.</param>
            <param name="contentType">The content type.</param>
            <param name="contentLink">The content link.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema.SchemaType">
            <summary>
            Gets or sets the schema type. Possible values include:
            'NotSpecified', 'Xml'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema.TargetNamespace">
            <summary>
            Gets or sets the target namespace of the schema.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema.DocumentName">
            <summary>
            Gets or sets the document name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema.FileName">
            <summary>
            Gets or sets the file name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema.CreatedTime">
            <summary>
            Gets the created time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema.ChangedTime">
            <summary>
            Gets the changed time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema.Metadata">
            <summary>
            Gets or sets the metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema.Content">
            <summary>
            Gets or sets the content.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema.ContentType">
            <summary>
            Gets or sets the content type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema.ContentLink">
            <summary>
            Gets the content link.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter">
            <summary>
            The integration account schema filter for odata query.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter.#ctor">
            <summary>
            Initializes a new instance of the IntegrationAccountSchemaFilter
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the IntegrationAccountSchemaFilter
            class.
            </summary>
            <param name="schemaType">The schema type of integration account
            schema. Possible values include: 'NotSpecified', 'Xml'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter.SchemaType">
            <summary>
            Gets or sets the schema type of integration account schema.
            Possible values include: 'NotSpecified', 'Xml'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSession">
            <summary>
            The integration account session.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSession.#ctor">
            <summary>
            Initializes a new instance of the IntegrationAccountSession class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSession.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Object)">
            <summary>
            Initializes a new instance of the IntegrationAccountSession class.
            </summary>
            <param name="id">The resource id.</param>
            <param name="name">Gets the resource name.</param>
            <param name="type">Gets the resource type.</param>
            <param name="location">The resource location.</param>
            <param name="tags">The resource tags.</param>
            <param name="createdTime">The created time.</param>
            <param name="changedTime">The changed time.</param>
            <param name="content">The session content.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSession.CreatedTime">
            <summary>
            Gets the created time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSession.ChangedTime">
            <summary>
            Gets the changed time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSession.Content">
            <summary>
            Gets or sets the session content.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSessionFilter">
            <summary>
            The integration account session filter.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSessionFilter.#ctor">
            <summary>
            Initializes a new instance of the IntegrationAccountSessionFilter
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSessionFilter.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the IntegrationAccountSessionFilter
            class.
            </summary>
            <param name="changedTime">The changed time of integration account
            sessions.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSessionFilter.ChangedTime">
            <summary>
            Gets or sets the changed time of integration account sessions.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSessionFilter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSku">
            <summary>
            The integration account sku.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSku.#ctor">
            <summary>
            Initializes a new instance of the IntegrationAccountSku class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSku.#ctor(System.String)">
            <summary>
            Initializes a new instance of the IntegrationAccountSku class.
            </summary>
            <param name="name">The sku name. Possible values include:
            'NotSpecified', 'Free', 'Basic', 'Standard'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSku.Name">
            <summary>
            Gets or sets the sku name. Possible values include: 'NotSpecified',
            'Free', 'Basic', 'Standard'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSku.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.IntegrationAccountSkuName">
            <summary>
            Defines values for IntegrationAccountSkuName.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.JsonSchema">
            <summary>
            The JSON schema.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.JsonSchema.#ctor">
            <summary>
            Initializes a new instance of the JsonSchema class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.JsonSchema.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the JsonSchema class.
            </summary>
            <param name="title">The JSON title.</param>
            <param name="content">The JSON content.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.JsonSchema.Title">
            <summary>
            Gets or sets the JSON title.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.JsonSchema.Content">
            <summary>
            Gets or sets the JSON content.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.KeyType">
            <summary>
            Defines values for KeyType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.KeyVaultKey">
            <summary>
            The key vault key.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.KeyVaultKey.#ctor">
            <summary>
            Initializes a new instance of the KeyVaultKey class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.KeyVaultKey.#ctor(System.String,Microsoft.Azure.Management.Logic.Models.KeyVaultKeyAttributes)">
            <summary>
            Initializes a new instance of the KeyVaultKey class.
            </summary>
            <param name="kid">The key id.</param>
            <param name="attributes">The key attributes.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.KeyVaultKey.Kid">
            <summary>
            Gets or sets the key id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.KeyVaultKey.Attributes">
            <summary>
            Gets or sets the key attributes.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.KeyVaultKeyAttributes">
            <summary>
            The key attributes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.KeyVaultKeyAttributes.#ctor">
            <summary>
            Initializes a new instance of the KeyVaultKeyAttributes class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.KeyVaultKeyAttributes.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the KeyVaultKeyAttributes class.
            </summary>
            <param name="enabled">Whether the key is enabled or not.</param>
            <param name="created">When the key was created.</param>
            <param name="updated">When the key was updated.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.KeyVaultKeyAttributes.Enabled">
            <summary>
            Gets or sets whether the key is enabled or not.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.KeyVaultKeyAttributes.Created">
            <summary>
            Gets or sets when the key was created.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.KeyVaultKeyAttributes.Updated">
            <summary>
            Gets or sets when the key was updated.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.KeyVaultKeyReference">
            <summary>
            The reference to the key vault key.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.KeyVaultKeyReference.#ctor">
            <summary>
            Initializes a new instance of the KeyVaultKeyReference class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.KeyVaultKeyReference.#ctor(Microsoft.Azure.Management.Logic.Models.KeyVaultKeyReferenceKeyVault,System.String,System.String)">
            <summary>
            Initializes a new instance of the KeyVaultKeyReference class.
            </summary>
            <param name="keyVault">The key vault reference.</param>
            <param name="keyName">The private key name in key vault.</param>
            <param name="keyVersion">The private key version in key
            vault.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.KeyVaultKeyReference.KeyVault">
            <summary>
            Gets or sets the key vault reference.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.KeyVaultKeyReference.KeyName">
            <summary>
            Gets or sets the private key name in key vault.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.KeyVaultKeyReference.KeyVersion">
            <summary>
            Gets or sets the private key version in key vault.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.KeyVaultKeyReference.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.KeyVaultKeyReferenceKeyVault">
            <summary>
            The key vault reference.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.KeyVaultKeyReferenceKeyVault.#ctor">
            <summary>
            Initializes a new instance of the KeyVaultKeyReferenceKeyVault
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.KeyVaultKeyReferenceKeyVault.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the KeyVaultKeyReferenceKeyVault
            class.
            </summary>
            <param name="id">The resource id.</param>
            <param name="name">The resource name.</param>
            <param name="type">The resource type.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.KeyVaultKeyReferenceKeyVault.Id">
            <summary>
            Gets or sets the resource id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.KeyVaultKeyReferenceKeyVault.Name">
            <summary>
            Gets the resource name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.KeyVaultKeyReferenceKeyVault.Type">
            <summary>
            Gets the resource type.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.KeyVaultReference">
            <summary>
            The key vault reference.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.KeyVaultReference.#ctor">
            <summary>
            Initializes a new instance of the KeyVaultReference class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.KeyVaultReference.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the KeyVaultReference class.
            </summary>
            <param name="id">The resource id.</param>
            <param name="name">Gets the resource name.</param>
            <param name="type">Gets the resource type.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.ListKeyVaultKeysDefinition">
            <summary>
            The list key vault keys definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ListKeyVaultKeysDefinition.#ctor">
            <summary>
            Initializes a new instance of the ListKeyVaultKeysDefinition class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ListKeyVaultKeysDefinition.#ctor(Microsoft.Azure.Management.Logic.Models.KeyVaultReference,System.String)">
            <summary>
            Initializes a new instance of the ListKeyVaultKeysDefinition class.
            </summary>
            <param name="keyVault">The key vault reference.</param>
            <param name="skipToken">The skip token.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ListKeyVaultKeysDefinition.KeyVault">
            <summary>
            Gets or sets the key vault reference.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ListKeyVaultKeysDefinition.SkipToken">
            <summary>
            Gets or sets the skip token.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ListKeyVaultKeysDefinition.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.MapType">
            <summary>
            Defines values for MapType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.MessageFilterType">
            <summary>
            Defines values for MessageFilterType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.Operation">
            <summary>
            Logic REST API operation
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Operation.#ctor">
            <summary>
            Initializes a new instance of the Operation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Operation.#ctor(System.String,Microsoft.Azure.Management.Logic.Models.OperationDisplay)">
            <summary>
            Initializes a new instance of the Operation class.
            </summary>
            <param name="name">Operation name:
            {provider}/{resource}/{operation}</param>
            <param name="display">The object that represents the
            operation.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Operation.Name">
            <summary>
            Gets or sets operation name: {provider}/{resource}/{operation}
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Operation.Display">
            <summary>
            Gets or sets the object that represents the operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.OperationDisplay">
            <summary>
            The object that represents the operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.OperationDisplay.#ctor">
            <summary>
            Initializes a new instance of the OperationDisplay class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.OperationDisplay.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the OperationDisplay class.
            </summary>
            <param name="provider">Service provider: Microsoft.Logic</param>
            <param name="resource">Resource on which the operation is
            performed: Profile, endpoint, etc.</param>
            <param name="operation">Operation type: Read, write, delete,
            etc.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.OperationDisplay.Provider">
            <summary>
            Gets or sets service provider: Microsoft.Logic
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.OperationDisplay.Resource">
            <summary>
            Gets or sets resource on which the operation is performed: Profile,
            endpoint, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.OperationDisplay.Operation">
            <summary>
            Gets or sets operation type: Read, write, delete, etc.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.OperationResult">
            <summary>
            The operation result definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.OperationResult.#ctor">
            <summary>
            Initializes a new instance of the OperationResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.OperationResult.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.Azure.Management.Logic.Models.RunActionCorrelation,System.String,System.String,System.Object,System.String,System.Object,Microsoft.Azure.Management.Logic.Models.ContentLink,System.Object,Microsoft.Azure.Management.Logic.Models.ContentLink,System.Object,System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.RetryHistory},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the OperationResult class.
            </summary>
            <param name="startTime">The start time of the workflow scope
            repetition.</param>
            <param name="endTime">The end time of the workflow scope
            repetition.</param>
            <param name="correlation">The correlation properties.</param>
            <param name="status">The status of the workflow scope repetition.
            Possible values include: 'NotSpecified', 'Paused', 'Running',
            'Waiting', 'Succeeded', 'Skipped', 'Suspended', 'Cancelled',
            'Failed', 'Faulted', 'TimedOut', 'Aborted', 'Ignored'</param>
            <param name="code">The workflow scope repetition code.</param>
            <param name="trackingId">Gets the tracking id.</param>
            <param name="inputs">Gets the inputs.</param>
            <param name="inputsLink">Gets the link to inputs.</param>
            <param name="outputs">Gets the outputs.</param>
            <param name="outputsLink">Gets the link to outputs.</param>
            <param name="trackedProperties">Gets the tracked
            properties.</param>
            <param name="retryHistory">Gets the retry histories.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.OperationResult.TrackingId">
            <summary>
            Gets the tracking id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.OperationResult.Inputs">
            <summary>
            Gets the inputs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.OperationResult.InputsLink">
            <summary>
            Gets the link to inputs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.OperationResult.Outputs">
            <summary>
            Gets the outputs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.OperationResult.OutputsLink">
            <summary>
            Gets the link to outputs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.OperationResult.TrackedProperties">
            <summary>
            Gets the tracked properties.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.OperationResult.RetryHistory">
            <summary>
            Gets the retry histories.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.OperationResult.IterationCount">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.OperationResultProperties">
            <summary>
            The run operation result properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.OperationResultProperties.#ctor">
            <summary>
            Initializes a new instance of the OperationResultProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.OperationResultProperties.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.Azure.Management.Logic.Models.RunActionCorrelation,System.String,System.String,System.Object)">
            <summary>
            Initializes a new instance of the OperationResultProperties class.
            </summary>
            <param name="startTime">The start time of the workflow scope
            repetition.</param>
            <param name="endTime">The end time of the workflow scope
            repetition.</param>
            <param name="correlation">The correlation properties.</param>
            <param name="status">The status of the workflow scope repetition.
            Possible values include: 'NotSpecified', 'Paused', 'Running',
            'Waiting', 'Succeeded', 'Skipped', 'Suspended', 'Cancelled',
            'Failed', 'Faulted', 'TimedOut', 'Aborted', 'Ignored'</param>
            <param name="code">The workflow scope repetition code.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.OperationResultProperties.StartTime">
            <summary>
            Gets or sets the start time of the workflow scope repetition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.OperationResultProperties.EndTime">
            <summary>
            Gets or sets the end time of the workflow scope repetition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.OperationResultProperties.Correlation">
            <summary>
            Gets or sets the correlation properties.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.OperationResultProperties.Status">
            <summary>
            Gets or sets the status of the workflow scope repetition. Possible
            values include: 'NotSpecified', 'Paused', 'Running', 'Waiting',
            'Succeeded', 'Skipped', 'Suspended', 'Cancelled', 'Failed',
            'Faulted', 'TimedOut', 'Aborted', 'Ignored'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.OperationResultProperties.Code">
            <summary>
            Gets or sets the workflow scope repetition code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.OperationResultProperties.Error">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.Page`1">
            <summary>
            Defines a page in Azure responses.
            </summary>
            <typeparam name="T">Type of the page content items</typeparam>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Page`1.NextPageLink">
            <summary>
            Gets the link to the next page.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Page`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Page`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.Page1`1">
            <summary>
            Defines a page in Azure responses.
            </summary>
            <typeparam name="T">Type of the page content items</typeparam>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Page1`1.NextPageLink">
            <summary>
            Gets the link to the next page.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Page1`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Page1`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.Page2`1">
            <summary>
            Defines a page in Azure responses.
            </summary>
            <typeparam name="T">Type of the page content items</typeparam>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Page2`1.NextPageLink">
            <summary>
            Gets the link to the next page.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Page2`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Page2`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.ParameterType">
            <summary>
            Defines values for ParameterType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.PartnerContent">
            <summary>
            The integration account partner content.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.PartnerContent.#ctor">
            <summary>
            Initializes a new instance of the PartnerContent class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.PartnerContent.#ctor(Microsoft.Azure.Management.Logic.Models.B2BPartnerContent)">
            <summary>
            Initializes a new instance of the PartnerContent class.
            </summary>
            <param name="b2b">The B2B partner content.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.PartnerContent.B2b">
            <summary>
            Gets or sets the B2B partner content.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.PartnerType">
            <summary>
            Defines values for PartnerType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.RecurrenceFrequency">
            <summary>
            Defines values for RecurrenceFrequency.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule">
            <summary>
            The recurrence schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.#ctor">
            <summary>
            Initializes a new instance of the RecurrenceSchedule class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.#ctor(System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Collections.Generic.IList{System.Nullable{Microsoft.Azure.Management.Logic.Models.DaysOfWeek}},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.RecurrenceScheduleOccurrence})">
            <summary>
            Initializes a new instance of the RecurrenceSchedule class.
            </summary>
            <param name="minutes">The minutes.</param>
            <param name="hours">The hours.</param>
            <param name="weekDays">The days of the week.</param>
            <param name="monthDays">The month days.</param>
            <param name="monthlyOccurrences">The monthly occurrences.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.Minutes">
            <summary>
            Gets or sets the minutes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.Hours">
            <summary>
            Gets or sets the hours.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.WeekDays">
            <summary>
            Gets or sets the days of the week.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.MonthDays">
            <summary>
            Gets or sets the month days.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.MonthlyOccurrences">
            <summary>
            Gets or sets the monthly occurrences.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.RecurrenceScheduleOccurrence">
            <summary>
            The recurrence schedule occurrence.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.RecurrenceScheduleOccurrence.#ctor">
            <summary>
            Initializes a new instance of the RecurrenceScheduleOccurrence
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.RecurrenceScheduleOccurrence.#ctor(System.Nullable{Microsoft.Azure.Management.Logic.Models.DayOfWeek},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the RecurrenceScheduleOccurrence
            class.
            </summary>
            <param name="day">The day of the week. Possible values include:
            'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday',
            'Saturday'</param>
            <param name="occurrence">The occurrence.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RecurrenceScheduleOccurrence.Day">
            <summary>
            Gets or sets the day of the week. Possible values include:
            'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday',
            'Saturday'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RecurrenceScheduleOccurrence.Occurrence">
            <summary>
            Gets or sets the occurrence.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.RegenerateActionParameter">
            <summary>
            The access key regenerate action content.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.RegenerateActionParameter.#ctor">
            <summary>
            Initializes a new instance of the RegenerateActionParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.RegenerateActionParameter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RegenerateActionParameter class.
            </summary>
            <param name="keyType">The key type. Possible values include:
            'NotSpecified', 'Primary', 'Secondary'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RegenerateActionParameter.KeyType">
            <summary>
            Gets or sets the key type. Possible values include: 'NotSpecified',
            'Primary', 'Secondary'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.RepetitionIndex">
            <summary>
            The workflow run action repetition index.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.RepetitionIndex.#ctor">
            <summary>
            Initializes a new instance of the RepetitionIndex class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.RepetitionIndex.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the RepetitionIndex class.
            </summary>
            <param name="itemIndex">The index.</param>
            <param name="scopeName">The scope.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RepetitionIndex.ScopeName">
            <summary>
            Gets or sets the scope.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RepetitionIndex.ItemIndex">
            <summary>
            Gets or sets the index.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.RepetitionIndex.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.Request">
            <summary>
            A request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Request.#ctor">
            <summary>
            Initializes a new instance of the Request class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Request.#ctor(System.Object,System.String,System.String)">
            <summary>
            Initializes a new instance of the Request class.
            </summary>
            <param name="headers">A list of all the headers attached to the
            request.</param>
            <param name="uri">The destination for the request.</param>
            <param name="method">The HTTP method used for the request.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Request.Headers">
            <summary>
            Gets or sets a list of all the headers attached to the request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Request.Uri">
            <summary>
            Gets or sets the destination for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Request.Method">
            <summary>
            Gets or sets the HTTP method used for the request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.RequestHistory">
            <summary>
            The request history.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.RequestHistory.#ctor">
            <summary>
            Initializes a new instance of the RequestHistory class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.RequestHistory.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Logic.Models.RequestHistoryProperties)">
            <summary>
            Initializes a new instance of the RequestHistory class.
            </summary>
            <param name="id">The resource id.</param>
            <param name="name">Gets the resource name.</param>
            <param name="type">Gets the resource type.</param>
            <param name="location">The resource location.</param>
            <param name="tags">The resource tags.</param>
            <param name="properties">The request history properties.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RequestHistory.Properties">
            <summary>
            Gets or sets the request history properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.RequestHistoryProperties">
            <summary>
            The request history.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.RequestHistoryProperties.#ctor">
            <summary>
            Initializes a new instance of the RequestHistoryProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.RequestHistoryProperties.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.Azure.Management.Logic.Models.Request,Microsoft.Azure.Management.Logic.Models.Response)">
            <summary>
            Initializes a new instance of the RequestHistoryProperties class.
            </summary>
            <param name="startTime">The time the request started.</param>
            <param name="endTime">The time the request ended.</param>
            <param name="request">The request.</param>
            <param name="response">The response.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RequestHistoryProperties.StartTime">
            <summary>
            Gets or sets the time the request started.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RequestHistoryProperties.EndTime">
            <summary>
            Gets or sets the time the request ended.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RequestHistoryProperties.Request">
            <summary>
            Gets or sets the request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RequestHistoryProperties.Response">
            <summary>
            Gets or sets the response.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.Resource">
            <summary>
            The base resource type.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Resource.#ctor">
            <summary>
            Initializes a new instance of the Resource class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Resource.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the Resource class.
            </summary>
            <param name="id">The resource id.</param>
            <param name="name">Gets the resource name.</param>
            <param name="type">Gets the resource type.</param>
            <param name="location">The resource location.</param>
            <param name="tags">The resource tags.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Resource.Id">
            <summary>
            Gets the resource id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Resource.Name">
            <summary>
            Gets the resource name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Resource.Type">
            <summary>
            Gets the resource type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Resource.Location">
            <summary>
            Gets or sets the resource location.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Resource.Tags">
            <summary>
            Gets or sets the resource tags.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.ResourceReference">
            <summary>
            The resource reference.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ResourceReference.#ctor">
            <summary>
            Initializes a new instance of the ResourceReference class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.ResourceReference.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ResourceReference class.
            </summary>
            <param name="id">The resource id.</param>
            <param name="name">Gets the resource name.</param>
            <param name="type">Gets the resource type.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ResourceReference.Id">
            <summary>
            Gets or sets the resource id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ResourceReference.Name">
            <summary>
            Gets the resource name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.ResourceReference.Type">
            <summary>
            Gets the resource type.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.Response">
            <summary>
            A response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Response.#ctor">
            <summary>
            Initializes a new instance of the Response class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Response.#ctor(System.Object,System.Nullable{System.Int32},Microsoft.Azure.Management.Logic.Models.ContentLink)">
            <summary>
            Initializes a new instance of the Response class.
            </summary>
            <param name="headers">A list of all the headers attached to the
            response.</param>
            <param name="statusCode">The status code of the response.</param>
            <param name="bodyLink">Details on the location of the body
            content.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Response.Headers">
            <summary>
            Gets or sets a list of all the headers attached to the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Response.StatusCode">
            <summary>
            Gets or sets the status code of the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Response.BodyLink">
            <summary>
            Gets or sets details on the location of the body content.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.RetryHistory">
            <summary>
            The retry history.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.RetryHistory.#ctor">
            <summary>
            Initializes a new instance of the RetryHistory class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.RetryHistory.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.ErrorResponse)">
            <summary>
            Initializes a new instance of the RetryHistory class.
            </summary>
            <param name="startTime">Gets the start time.</param>
            <param name="endTime">Gets the end time.</param>
            <param name="code">Gets the status code.</param>
            <param name="clientRequestId">Gets the client request Id.</param>
            <param name="serviceRequestId">Gets the service request Id.</param>
            <param name="error">Gets the error response.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RetryHistory.StartTime">
            <summary>
            Gets the start time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RetryHistory.EndTime">
            <summary>
            Gets the end time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RetryHistory.Code">
            <summary>
            Gets the status code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RetryHistory.ClientRequestId">
            <summary>
            Gets the client request Id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RetryHistory.ServiceRequestId">
            <summary>
            Gets the service request Id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RetryHistory.Error">
            <summary>
            Gets the error response.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.RunActionCorrelation">
            <summary>
            The workflow run action correlation properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.RunActionCorrelation.#ctor">
            <summary>
            Initializes a new instance of the RunActionCorrelation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.RunActionCorrelation.#ctor(System.String,System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Initializes a new instance of the RunActionCorrelation class.
            </summary>
            <param name="clientTrackingId">The client tracking
            identifier.</param>
            <param name="clientKeywords">The client keywords.</param>
            <param name="actionTrackingId">The action tracking
            identifier.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RunActionCorrelation.ActionTrackingId">
            <summary>
            Gets or sets the action tracking identifier.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.RunCorrelation">
            <summary>
            The correlation properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.RunCorrelation.#ctor">
            <summary>
            Initializes a new instance of the RunCorrelation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.RunCorrelation.#ctor(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the RunCorrelation class.
            </summary>
            <param name="clientTrackingId">The client tracking
            identifier.</param>
            <param name="clientKeywords">The client keywords.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RunCorrelation.ClientTrackingId">
            <summary>
            Gets or sets the client tracking identifier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.RunCorrelation.ClientKeywords">
            <summary>
            Gets or sets the client keywords.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.SchemaType">
            <summary>
            Defines values for SchemaType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.SegmentTerminatorSuffix">
            <summary>
            Defines values for SegmentTerminatorSuffix.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.SetTriggerStateActionDefinition.#ctor">
            <summary>
            Initializes a new instance of the SetTriggerStateActionDefinition
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.SetTriggerStateActionDefinition.#ctor(Microsoft.Azure.Management.Logic.Models.WorkflowTrigger)">
            <summary>
            Initializes a new instance of the SetTriggerStateActionDefinition
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.SetTriggerStateActionDefinition.Source">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.SetTriggerStateActionDefinition.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.SigningAlgorithm">
            <summary>
            Defines values for SigningAlgorithm.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.Sku">
            <summary>
            The sku type.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Sku.#ctor">
            <summary>
            Initializes a new instance of the Sku class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Sku.#ctor(System.String,Microsoft.Azure.Management.Logic.Models.ResourceReference)">
            <summary>
            Initializes a new instance of the Sku class.
            </summary>
            <param name="name">The name. Possible values include:
            'NotSpecified', 'Free', 'Shared', 'Basic', 'Standard',
            'Premium'</param>
            <param name="plan">The reference to plan.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Sku.Name">
            <summary>
            Gets or sets the name. Possible values include: 'NotSpecified',
            'Free', 'Shared', 'Basic', 'Standard', 'Premium'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Sku.Plan">
            <summary>
            Gets or sets the reference to plan.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Sku.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.SkuName">
            <summary>
            Defines values for SkuName.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.SubResource">
            <summary>
            The sub resource type.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.SubResource.#ctor">
            <summary>
            Initializes a new instance of the SubResource class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.SubResource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SubResource class.
            </summary>
            <param name="id">The resource id.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.SubResource.Id">
            <summary>
            Gets the resource id.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.TrackEventsOperationOptions">
            <summary>
            Defines values for TrackEventsOperationOptions.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.TrackingEvent.#ctor">
            <summary>
            Initializes a new instance of the TrackingEvent class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.TrackingEvent.#ctor(Microsoft.Azure.Management.Logic.Models.EventLevel,System.DateTime,System.String,Microsoft.Azure.Management.Logic.Models.TrackingEventErrorInfo)">
            <summary>
            Initializes a new instance of the TrackingEvent class.
            </summary>
            <param name="eventLevel">Possible values include: 'LogAlways',
            'Critical', 'Error', 'Warning', 'Informational', 'Verbose'</param>
            <param name="recordType">Possible values include: 'NotSpecified',
            'Custom', 'AS2Message', 'AS2MDN', 'X12Interchange',
            'X12FunctionalGroup', 'X12TransactionSet',
            'X12InterchangeAcknowledgment', 'X12FunctionalGroupAcknowledgment',
            'X12TransactionSetAcknowledgment', 'EdifactInterchange',
            'EdifactFunctionalGroup', 'EdifactTransactionSet',
            'EdifactInterchangeAcknowledgment',
            'EdifactFunctionalGroupAcknowledgment',
            'EdifactTransactionSetAcknowledgment'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.TrackingEvent.EventLevel">
            <summary>
            Gets or sets possible values include: 'LogAlways', 'Critical',
            'Error', 'Warning', 'Informational', 'Verbose'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.TrackingEvent.EventTime">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.TrackingEvent.RecordType">
            <summary>
            Gets or sets possible values include: 'NotSpecified', 'Custom',
            'AS2Message', 'AS2MDN', 'X12Interchange', 'X12FunctionalGroup',
            'X12TransactionSet', 'X12InterchangeAcknowledgment',
            'X12FunctionalGroupAcknowledgment',
            'X12TransactionSetAcknowledgment', 'EdifactInterchange',
            'EdifactFunctionalGroup', 'EdifactTransactionSet',
            'EdifactInterchangeAcknowledgment',
            'EdifactFunctionalGroupAcknowledgment',
            'EdifactTransactionSetAcknowledgment'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.TrackingEvent.Error">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.TrackingEvent.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.TrackingEventErrorInfo.#ctor">
            <summary>
            Initializes a new instance of the TrackingEventErrorInfo class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.TrackingEventErrorInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the TrackingEventErrorInfo class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.TrackingEventErrorInfo.Message">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.TrackingEventErrorInfo.Code">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.TrackingEventsDefinition.#ctor">
            <summary>
            Initializes a new instance of the TrackingEventsDefinition class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.TrackingEventsDefinition.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.TrackingEvent},System.String)">
            <summary>
            Initializes a new instance of the TrackingEventsDefinition class.
            </summary>
            <param name="trackEventsOptions">Possible values include: 'None',
            'DisableSourceInfoEnrich'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.TrackingEventsDefinition.SourceType">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.TrackingEventsDefinition.TrackEventsOptions">
            <summary>
            Gets or sets possible values include: 'None',
            'DisableSourceInfoEnrich'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.TrackingEventsDefinition.Events">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.TrackingEventsDefinition.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.TrackingRecordType">
            <summary>
            Defines values for TrackingRecordType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.TrailingSeparatorPolicy">
            <summary>
            Defines values for TrailingSeparatorPolicy.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.UsageIndicator">
            <summary>
            Defines values for UsageIndicator.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.Workflow">
            <summary>
            The workflow type.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Workflow.#ctor">
            <summary>
            Initializes a new instance of the Workflow class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Workflow.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.Sku,Microsoft.Azure.Management.Logic.Models.ResourceReference,System.Object,System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Logic.Models.WorkflowParameter})">
            <summary>
            Initializes a new instance of the Workflow class.
            </summary>
            <param name="id">The resource id.</param>
            <param name="name">Gets the resource name.</param>
            <param name="type">Gets the resource type.</param>
            <param name="location">The resource location.</param>
            <param name="tags">The resource tags.</param>
            <param name="provisioningState">Gets the provisioning state.
            Possible values include: 'NotSpecified', 'Accepted', 'Running',
            'Ready', 'Creating', 'Created', 'Deleting', 'Deleted', 'Canceled',
            'Failed', 'Succeeded', 'Moving', 'Updating', 'Registering',
            'Registered', 'Unregistering', 'Unregistered', 'Completed'</param>
            <param name="createdTime">Gets the created time.</param>
            <param name="changedTime">Gets the changed time.</param>
            <param name="state">The state. Possible values include:
            'NotSpecified', 'Completed', 'Enabled', 'Disabled', 'Deleted',
            'Suspended'</param>
            <param name="version">Gets the version.</param>
            <param name="accessEndpoint">Gets the access endpoint.</param>
            <param name="sku">The sku.</param>
            <param name="integrationAccount">The integration account.</param>
            <param name="definition">The definition.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Workflow.ProvisioningState">
            <summary>
            Gets the provisioning state. Possible values include:
            'NotSpecified', 'Accepted', 'Running', 'Ready', 'Creating',
            'Created', 'Deleting', 'Deleted', 'Canceled', 'Failed',
            'Succeeded', 'Moving', 'Updating', 'Registering', 'Registered',
            'Unregistering', 'Unregistered', 'Completed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Workflow.CreatedTime">
            <summary>
            Gets the created time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Workflow.ChangedTime">
            <summary>
            Gets the changed time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Workflow.State">
            <summary>
            Gets or sets the state. Possible values include: 'NotSpecified',
            'Completed', 'Enabled', 'Disabled', 'Deleted', 'Suspended'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Workflow.Version">
            <summary>
            Gets the version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Workflow.AccessEndpoint">
            <summary>
            Gets the access endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Workflow.Sku">
            <summary>
            Gets or sets the sku.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Workflow.IntegrationAccount">
            <summary>
            Gets or sets the integration account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Workflow.Definition">
            <summary>
            Gets or sets the definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.Workflow.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.Workflow.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowFilter">
            <summary>
            The workflow filter.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowFilter.#ctor">
            <summary>
            Initializes a new instance of the WorkflowFilter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowFilter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the WorkflowFilter class.
            </summary>
            <param name="state">The state of workflows. Possible values
            include: 'NotSpecified', 'Completed', 'Enabled', 'Disabled',
            'Deleted', 'Suspended'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowFilter.State">
            <summary>
            Gets or sets the state of workflows. Possible values include:
            'NotSpecified', 'Completed', 'Enabled', 'Disabled', 'Deleted',
            'Suspended'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowOutputParameter">
            <summary>
            The workflow output parameter.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowOutputParameter.#ctor">
            <summary>
            Initializes a new instance of the WorkflowOutputParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowOutputParameter.#ctor(System.String,System.Object,System.Object,System.String,System.Object)">
            <summary>
            Initializes a new instance of the WorkflowOutputParameter class.
            </summary>
            <param name="type">The type. Possible values include:
            'NotSpecified', 'String', 'SecureString', 'Int', 'Float', 'Bool',
            'Array', 'Object', 'SecureObject'</param>
            <param name="value">The value.</param>
            <param name="metadata">The metadata.</param>
            <param name="description">The description.</param>
            <param name="error">Gets the error.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowOutputParameter.Error">
            <summary>
            Gets the error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowParameter">
            <summary>
            The workflow parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowParameter.#ctor">
            <summary>
            Initializes a new instance of the WorkflowParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowParameter.#ctor(System.String,System.Object,System.Object,System.String)">
            <summary>
            Initializes a new instance of the WorkflowParameter class.
            </summary>
            <param name="type">The type. Possible values include:
            'NotSpecified', 'String', 'SecureString', 'Int', 'Float', 'Bool',
            'Array', 'Object', 'SecureObject'</param>
            <param name="value">The value.</param>
            <param name="metadata">The metadata.</param>
            <param name="description">The description.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowParameter.Type">
            <summary>
            Gets or sets the type. Possible values include: 'NotSpecified',
            'String', 'SecureString', 'Int', 'Float', 'Bool', 'Array',
            'Object', 'SecureObject'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowParameter.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowParameter.Metadata">
            <summary>
            Gets or sets the metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowParameter.Description">
            <summary>
            Gets or sets the description.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowProvisioningState">
            <summary>
            Defines values for WorkflowProvisioningState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowRun">
            <summary>
            The workflow run.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowRun.#ctor">
            <summary>
            Initializes a new instance of the WorkflowRun class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowRun.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Object,System.String,Microsoft.Azure.Management.Logic.Models.Correlation,Microsoft.Azure.Management.Logic.Models.ResourceReference,Microsoft.Azure.Management.Logic.Models.WorkflowRunTrigger,System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Logic.Models.WorkflowOutputParameter},Microsoft.Azure.Management.Logic.Models.WorkflowRunTrigger,System.String,System.String)">
            <summary>
            Initializes a new instance of the WorkflowRun class.
            </summary>
            <param name="id">The resource id.</param>
            <param name="waitEndTime">Gets the wait end time.</param>
            <param name="startTime">Gets the start time.</param>
            <param name="endTime">Gets the end time.</param>
            <param name="status">Gets the status. Possible values include:
            'NotSpecified', 'Paused', 'Running', 'Waiting', 'Succeeded',
            'Skipped', 'Suspended', 'Cancelled', 'Failed', 'Faulted',
            'TimedOut', 'Aborted', 'Ignored'</param>
            <param name="code">Gets the code.</param>
            <param name="error">Gets the error.</param>
            <param name="correlationId">Gets the correlation id.</param>
            <param name="correlation">The run correlation.</param>
            <param name="workflow">Gets the reference to workflow
            version.</param>
            <param name="trigger">Gets the fired trigger.</param>
            <param name="outputs">Gets the outputs.</param>
            <param name="response">Gets the response of the flow run.</param>
            <param name="name">Gets the workflow run name.</param>
            <param name="type">Gets the workflow run type.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRun.WaitEndTime">
            <summary>
            Gets the wait end time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRun.StartTime">
            <summary>
            Gets the start time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRun.EndTime">
            <summary>
            Gets the end time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRun.Status">
            <summary>
            Gets the status. Possible values include: 'NotSpecified', 'Paused',
            'Running', 'Waiting', 'Succeeded', 'Skipped', 'Suspended',
            'Cancelled', 'Failed', 'Faulted', 'TimedOut', 'Aborted', 'Ignored'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRun.Code">
            <summary>
            Gets the code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRun.Error">
            <summary>
            Gets the error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRun.CorrelationId">
            <summary>
            Gets the correlation id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRun.Correlation">
            <summary>
            Gets or sets the run correlation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRun.Workflow">
            <summary>
            Gets the reference to workflow version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRun.Trigger">
            <summary>
            Gets the fired trigger.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRun.Outputs">
            <summary>
            Gets the outputs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRun.Response">
            <summary>
            Gets the response of the flow run.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRun.Name">
            <summary>
            Gets the workflow run name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRun.Type">
            <summary>
            Gets the workflow run type.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowRunAction">
            <summary>
            The workflow run action.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowRunAction.#ctor">
            <summary>
            Initializes a new instance of the WorkflowRunAction class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowRunAction.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Object,System.String,Microsoft.Azure.Management.Logic.Models.Correlation,Microsoft.Azure.Management.Logic.Models.ContentLink,Microsoft.Azure.Management.Logic.Models.ContentLink,System.Object,System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.RetryHistory},System.String,System.String)">
            <summary>
            Initializes a new instance of the WorkflowRunAction class.
            </summary>
            <param name="id">The resource id.</param>
            <param name="startTime">Gets the start time.</param>
            <param name="endTime">Gets the end time.</param>
            <param name="status">Gets the status. Possible values include:
            'NotSpecified', 'Paused', 'Running', 'Waiting', 'Succeeded',
            'Skipped', 'Suspended', 'Cancelled', 'Failed', 'Faulted',
            'TimedOut', 'Aborted', 'Ignored'</param>
            <param name="code">Gets the code.</param>
            <param name="error">Gets the error.</param>
            <param name="trackingId">Gets the tracking id.</param>
            <param name="correlation">The correlation properties.</param>
            <param name="inputsLink">Gets the link to inputs.</param>
            <param name="outputsLink">Gets the link to outputs.</param>
            <param name="trackedProperties">Gets the tracked
            properties.</param>
            <param name="retryHistory">Gets the retry histories.</param>
            <param name="name">Gets the workflow run action name.</param>
            <param name="type">Gets the workflow run action type.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunAction.StartTime">
            <summary>
            Gets the start time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunAction.EndTime">
            <summary>
            Gets the end time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunAction.Status">
            <summary>
            Gets the status. Possible values include: 'NotSpecified', 'Paused',
            'Running', 'Waiting', 'Succeeded', 'Skipped', 'Suspended',
            'Cancelled', 'Failed', 'Faulted', 'TimedOut', 'Aborted', 'Ignored'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunAction.Code">
            <summary>
            Gets the code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunAction.Error">
            <summary>
            Gets the error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunAction.TrackingId">
            <summary>
            Gets the tracking id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunAction.Correlation">
            <summary>
            Gets or sets the correlation properties.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunAction.InputsLink">
            <summary>
            Gets the link to inputs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunAction.OutputsLink">
            <summary>
            Gets the link to outputs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunAction.TrackedProperties">
            <summary>
            Gets the tracked properties.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunAction.RetryHistory">
            <summary>
            Gets the retry histories.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunAction.Name">
            <summary>
            Gets the workflow run action name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunAction.Type">
            <summary>
            Gets the workflow run action type.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionFilter">
            <summary>
            The workflow run action filter.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionFilter.#ctor">
            <summary>
            Initializes a new instance of the WorkflowRunActionFilter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionFilter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the WorkflowRunActionFilter class.
            </summary>
            <param name="status">The status of workflow run action. Possible
            values include: 'NotSpecified', 'Paused', 'Running', 'Waiting',
            'Succeeded', 'Skipped', 'Suspended', 'Cancelled', 'Failed',
            'Faulted', 'TimedOut', 'Aborted', 'Ignored'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionFilter.Status">
            <summary>
            Gets or sets the status of workflow run action. Possible values
            include: 'NotSpecified', 'Paused', 'Running', 'Waiting',
            'Succeeded', 'Skipped', 'Suspended', 'Cancelled', 'Failed',
            'Faulted', 'TimedOut', 'Aborted', 'Ignored'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinition">
            <summary>
            The workflow run action repetition definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinition.#ctor">
            <summary>
            Initializes a new instance of the
            WorkflowRunActionRepetitionDefinition class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinition.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.Azure.Management.Logic.Models.RunActionCorrelation,System.String,System.String,System.Object,System.String,System.Object,Microsoft.Azure.Management.Logic.Models.ContentLink,System.Object,Microsoft.Azure.Management.Logic.Models.ContentLink,System.Object,System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.RetryHistory},System.Nullable{System.Int32},System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.RepetitionIndex})">
            <summary>
            Initializes a new instance of the
            WorkflowRunActionRepetitionDefinition class.
            </summary>
            <param name="id">The resource id.</param>
            <param name="name">Gets the resource name.</param>
            <param name="type">Gets the resource type.</param>
            <param name="location">The resource location.</param>
            <param name="tags">The resource tags.</param>
            <param name="startTime">The start time of the workflow scope
            repetition.</param>
            <param name="endTime">The end time of the workflow scope
            repetition.</param>
            <param name="correlation">The correlation properties.</param>
            <param name="status">The status of the workflow scope repetition.
            Possible values include: 'NotSpecified', 'Paused', 'Running',
            'Waiting', 'Succeeded', 'Skipped', 'Suspended', 'Cancelled',
            'Failed', 'Faulted', 'TimedOut', 'Aborted', 'Ignored'</param>
            <param name="code">The workflow scope repetition code.</param>
            <param name="trackingId">Gets the tracking id.</param>
            <param name="inputs">Gets the inputs.</param>
            <param name="inputsLink">Gets the link to inputs.</param>
            <param name="outputs">Gets the outputs.</param>
            <param name="outputsLink">Gets the link to outputs.</param>
            <param name="trackedProperties">Gets the tracked
            properties.</param>
            <param name="retryHistory">Gets the retry histories.</param>
            <param name="repetitionIndexes">The repetition indexes.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinition.StartTime">
            <summary>
            Gets or sets the start time of the workflow scope repetition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinition.EndTime">
            <summary>
            Gets or sets the end time of the workflow scope repetition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinition.Correlation">
            <summary>
            Gets or sets the correlation properties.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinition.Status">
            <summary>
            Gets or sets the status of the workflow scope repetition. Possible
            values include: 'NotSpecified', 'Paused', 'Running', 'Waiting',
            'Succeeded', 'Skipped', 'Suspended', 'Cancelled', 'Failed',
            'Faulted', 'TimedOut', 'Aborted', 'Ignored'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinition.Code">
            <summary>
            Gets or sets the workflow scope repetition code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinition.Error">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinition.TrackingId">
            <summary>
            Gets the tracking id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinition.Inputs">
            <summary>
            Gets the inputs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinition.InputsLink">
            <summary>
            Gets the link to inputs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinition.Outputs">
            <summary>
            Gets the outputs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinition.OutputsLink">
            <summary>
            Gets the link to outputs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinition.TrackedProperties">
            <summary>
            Gets the tracked properties.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinition.RetryHistory">
            <summary>
            Gets the retry histories.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinition.IterationCount">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinition.RepetitionIndexes">
            <summary>
            Gets or sets the repetition indexes.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinitionCollection">
            <summary>
            A collection of workflow run action repetitions.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinitionCollection.#ctor">
            <summary>
            Initializes a new instance of the
            WorkflowRunActionRepetitionDefinitionCollection class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinitionCollection.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinition})">
            <summary>
            Initializes a new instance of the
            WorkflowRunActionRepetitionDefinitionCollection class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunActionRepetitionDefinitionCollection.Value">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowRunFilter">
            <summary>
            The workflow run filter.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowRunFilter.#ctor">
            <summary>
            Initializes a new instance of the WorkflowRunFilter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowRunFilter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the WorkflowRunFilter class.
            </summary>
            <param name="status">The status of workflow run. Possible values
            include: 'NotSpecified', 'Paused', 'Running', 'Waiting',
            'Succeeded', 'Skipped', 'Suspended', 'Cancelled', 'Failed',
            'Faulted', 'TimedOut', 'Aborted', 'Ignored'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunFilter.Status">
            <summary>
            Gets or sets the status of workflow run. Possible values include:
            'NotSpecified', 'Paused', 'Running', 'Waiting', 'Succeeded',
            'Skipped', 'Suspended', 'Cancelled', 'Failed', 'Faulted',
            'TimedOut', 'Aborted', 'Ignored'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowRunTrigger">
            <summary>
            The workflow run trigger.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowRunTrigger.#ctor">
            <summary>
            Initializes a new instance of the WorkflowRunTrigger class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowRunTrigger.#ctor(System.String,System.Object,Microsoft.Azure.Management.Logic.Models.ContentLink,System.Object,Microsoft.Azure.Management.Logic.Models.ContentLink,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,Microsoft.Azure.Management.Logic.Models.Correlation,System.String,System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the WorkflowRunTrigger class.
            </summary>
            <param name="name">Gets the name.</param>
            <param name="inputs">Gets the inputs.</param>
            <param name="inputsLink">Gets the link to inputs.</param>
            <param name="outputs">Gets the outputs.</param>
            <param name="outputsLink">Gets the link to outputs.</param>
            <param name="scheduledTime">Gets the scheduled time.</param>
            <param name="startTime">Gets the start time.</param>
            <param name="endTime">Gets the end time.</param>
            <param name="trackingId">Gets the tracking id.</param>
            <param name="correlation">The run correlation.</param>
            <param name="code">Gets the code.</param>
            <param name="status">Gets the status. Possible values include:
            'NotSpecified', 'Paused', 'Running', 'Waiting', 'Succeeded',
            'Skipped', 'Suspended', 'Cancelled', 'Failed', 'Faulted',
            'TimedOut', 'Aborted', 'Ignored'</param>
            <param name="error">Gets the error.</param>
            <param name="trackedProperties">Gets the tracked
            properties.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunTrigger.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunTrigger.Inputs">
            <summary>
            Gets the inputs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunTrigger.InputsLink">
            <summary>
            Gets the link to inputs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunTrigger.Outputs">
            <summary>
            Gets the outputs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunTrigger.OutputsLink">
            <summary>
            Gets the link to outputs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunTrigger.ScheduledTime">
            <summary>
            Gets the scheduled time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunTrigger.StartTime">
            <summary>
            Gets the start time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunTrigger.EndTime">
            <summary>
            Gets the end time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunTrigger.TrackingId">
            <summary>
            Gets the tracking id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunTrigger.Correlation">
            <summary>
            Gets or sets the run correlation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunTrigger.Code">
            <summary>
            Gets the code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunTrigger.Status">
            <summary>
            Gets the status. Possible values include: 'NotSpecified', 'Paused',
            'Running', 'Waiting', 'Succeeded', 'Skipped', 'Suspended',
            'Cancelled', 'Failed', 'Faulted', 'TimedOut', 'Aborted', 'Ignored'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunTrigger.Error">
            <summary>
            Gets the error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowRunTrigger.TrackedProperties">
            <summary>
            Gets the tracked properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowState">
            <summary>
            Defines values for WorkflowState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowStatus">
            <summary>
            Defines values for WorkflowStatus.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowTrigger">
            <summary>
            The workflow trigger.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowTrigger.#ctor">
            <summary>
            Initializes a new instance of the WorkflowTrigger class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowTrigger.#ctor(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.Azure.Management.Logic.Models.WorkflowTriggerRecurrence,Microsoft.Azure.Management.Logic.Models.ResourceReference,System.String,System.String)">
            <summary>
            Initializes a new instance of the WorkflowTrigger class.
            </summary>
            <param name="id">The resource id.</param>
            <param name="provisioningState">Gets the provisioning state.
            Possible values include: 'NotSpecified', 'Accepted', 'Running',
            'Ready', 'Creating', 'Created', 'Deleting', 'Deleted', 'Canceled',
            'Failed', 'Succeeded', 'Moving', 'Updating', 'Registering',
            'Registered', 'Unregistering', 'Unregistered', 'Completed'</param>
            <param name="createdTime">Gets the created time.</param>
            <param name="changedTime">Gets the changed time.</param>
            <param name="state">Gets the state. Possible values include:
            'NotSpecified', 'Completed', 'Enabled', 'Disabled', 'Deleted',
            'Suspended'</param>
            <param name="status">Gets the status. Possible values include:
            'NotSpecified', 'Paused', 'Running', 'Waiting', 'Succeeded',
            'Skipped', 'Suspended', 'Cancelled', 'Failed', 'Faulted',
            'TimedOut', 'Aborted', 'Ignored'</param>
            <param name="lastExecutionTime">Gets the last execution
            time.</param>
            <param name="nextExecutionTime">Gets the next execution
            time.</param>
            <param name="recurrence">Gets the workflow trigger
            recurrence.</param>
            <param name="workflow">Gets the reference to workflow.</param>
            <param name="name">Gets the workflow trigger name.</param>
            <param name="type">Gets the workflow trigger type.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTrigger.ProvisioningState">
            <summary>
            Gets the provisioning state. Possible values include:
            'NotSpecified', 'Accepted', 'Running', 'Ready', 'Creating',
            'Created', 'Deleting', 'Deleted', 'Canceled', 'Failed',
            'Succeeded', 'Moving', 'Updating', 'Registering', 'Registered',
            'Unregistering', 'Unregistered', 'Completed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTrigger.CreatedTime">
            <summary>
            Gets the created time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTrigger.ChangedTime">
            <summary>
            Gets the changed time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTrigger.State">
            <summary>
            Gets the state. Possible values include: 'NotSpecified',
            'Completed', 'Enabled', 'Disabled', 'Deleted', 'Suspended'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTrigger.Status">
            <summary>
            Gets the status. Possible values include: 'NotSpecified', 'Paused',
            'Running', 'Waiting', 'Succeeded', 'Skipped', 'Suspended',
            'Cancelled', 'Failed', 'Faulted', 'TimedOut', 'Aborted', 'Ignored'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTrigger.LastExecutionTime">
            <summary>
            Gets the last execution time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTrigger.NextExecutionTime">
            <summary>
            Gets the next execution time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTrigger.Recurrence">
            <summary>
            Gets the workflow trigger recurrence.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTrigger.Workflow">
            <summary>
            Gets the reference to workflow.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTrigger.Name">
            <summary>
            Gets the workflow trigger name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTrigger.Type">
            <summary>
            Gets the workflow trigger type.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerCallbackUrl">
            <summary>
            The workflow trigger callback URL.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerCallbackUrl.#ctor">
            <summary>
            Initializes a new instance of the WorkflowTriggerCallbackUrl class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerCallbackUrl.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.Management.Logic.Models.WorkflowTriggerListCallbackUrlQueries)">
            <summary>
            Initializes a new instance of the WorkflowTriggerCallbackUrl class.
            </summary>
            <param name="value">Gets the workflow trigger callback URL.</param>
            <param name="method">Gets the workflow trigger callback URL HTTP
            method.</param>
            <param name="basePath">Gets the workflow trigger callback URL base
            path.</param>
            <param name="relativePath">Gets the workflow trigger callback URL
            relative path.</param>
            <param name="relativePathParameters">Gets the workflow trigger
            callback URL relative path parameters.</param>
            <param name="queries">Gets the workflow trigger callback URL query
            parameters.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerCallbackUrl.Value">
            <summary>
            Gets the workflow trigger callback URL.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerCallbackUrl.Method">
            <summary>
            Gets the workflow trigger callback URL HTTP method.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerCallbackUrl.BasePath">
            <summary>
            Gets the workflow trigger callback URL base path.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerCallbackUrl.RelativePath">
            <summary>
            Gets the workflow trigger callback URL relative path.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerCallbackUrl.RelativePathParameters">
            <summary>
            Gets the workflow trigger callback URL relative path parameters.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerCallbackUrl.Queries">
            <summary>
            Gets the workflow trigger callback URL query parameters.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerFilter">
            <summary>
            The workflow trigger filter.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerFilter.#ctor">
            <summary>
            Initializes a new instance of the WorkflowTriggerFilter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerFilter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the WorkflowTriggerFilter class.
            </summary>
            <param name="state">The state of workflow trigger. Possible values
            include: 'NotSpecified', 'Completed', 'Enabled', 'Disabled',
            'Deleted', 'Suspended'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerFilter.State">
            <summary>
            Gets or sets the state of workflow trigger. Possible values
            include: 'NotSpecified', 'Completed', 'Enabled', 'Disabled',
            'Deleted', 'Suspended'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistory">
            <summary>
            The workflow trigger history.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistory.#ctor">
            <summary>
            Initializes a new instance of the WorkflowTriggerHistory class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistory.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Object,System.String,Microsoft.Azure.Management.Logic.Models.Correlation,Microsoft.Azure.Management.Logic.Models.ContentLink,Microsoft.Azure.Management.Logic.Models.ContentLink,System.Nullable{System.Boolean},Microsoft.Azure.Management.Logic.Models.ResourceReference,System.String,System.String)">
            <summary>
            Initializes a new instance of the WorkflowTriggerHistory class.
            </summary>
            <param name="id">The resource id.</param>
            <param name="startTime">Gets the start time.</param>
            <param name="endTime">Gets the end time.</param>
            <param name="status">Gets the status. Possible values include:
            'NotSpecified', 'Paused', 'Running', 'Waiting', 'Succeeded',
            'Skipped', 'Suspended', 'Cancelled', 'Failed', 'Faulted',
            'TimedOut', 'Aborted', 'Ignored'</param>
            <param name="code">Gets the code.</param>
            <param name="error">Gets the error.</param>
            <param name="trackingId">Gets the tracking id.</param>
            <param name="correlation">The run correlation.</param>
            <param name="inputsLink">Gets the link to input parameters.</param>
            <param name="outputsLink">Gets the link to output
            parameters.</param>
            <param name="fired">Gets a value indicating whether trigger was
            fired.</param>
            <param name="run">Gets the reference to workflow run.</param>
            <param name="name">Gets the workflow trigger history name.</param>
            <param name="type">Gets the workflow trigger history type.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistory.StartTime">
            <summary>
            Gets the start time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistory.EndTime">
            <summary>
            Gets the end time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistory.Status">
            <summary>
            Gets the status. Possible values include: 'NotSpecified', 'Paused',
            'Running', 'Waiting', 'Succeeded', 'Skipped', 'Suspended',
            'Cancelled', 'Failed', 'Faulted', 'TimedOut', 'Aborted', 'Ignored'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistory.Code">
            <summary>
            Gets the code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistory.Error">
            <summary>
            Gets the error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistory.TrackingId">
            <summary>
            Gets the tracking id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistory.Correlation">
            <summary>
            Gets or sets the run correlation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistory.InputsLink">
            <summary>
            Gets the link to input parameters.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistory.OutputsLink">
            <summary>
            Gets the link to output parameters.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistory.Fired">
            <summary>
            Gets a value indicating whether trigger was fired.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistory.Run">
            <summary>
            Gets the reference to workflow run.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistory.Name">
            <summary>
            Gets the workflow trigger history name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistory.Type">
            <summary>
            Gets the workflow trigger history type.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistoryFilter">
            <summary>
            The workflow trigger history filter.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistoryFilter.#ctor">
            <summary>
            Initializes a new instance of the WorkflowTriggerHistoryFilter
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistoryFilter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the WorkflowTriggerHistoryFilter
            class.
            </summary>
            <param name="status">The status of workflow trigger history.
            Possible values include: 'NotSpecified', 'Paused', 'Running',
            'Waiting', 'Succeeded', 'Skipped', 'Suspended', 'Cancelled',
            'Failed', 'Faulted', 'TimedOut', 'Aborted', 'Ignored'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistoryFilter.Status">
            <summary>
            Gets or sets the status of workflow trigger history. Possible
            values include: 'NotSpecified', 'Paused', 'Running', 'Waiting',
            'Succeeded', 'Skipped', 'Suspended', 'Cancelled', 'Failed',
            'Faulted', 'TimedOut', 'Aborted', 'Ignored'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerListCallbackUrlQueries">
            <summary>
            Gets the workflow trigger callback URL query parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerListCallbackUrlQueries.#ctor">
            <summary>
            Initializes a new instance of the
            WorkflowTriggerListCallbackUrlQueries class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerListCallbackUrlQueries.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the
            WorkflowTriggerListCallbackUrlQueries class.
            </summary>
            <param name="apiVersion">The api version.</param>
            <param name="sp">The SAS permissions.</param>
            <param name="sv">The SAS version.</param>
            <param name="sig">The SAS signature.</param>
            <param name="se">The SAS timestamp.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerListCallbackUrlQueries.ApiVersion">
            <summary>
            Gets or sets the api version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerListCallbackUrlQueries.Sp">
            <summary>
            Gets or sets the SAS permissions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerListCallbackUrlQueries.Sv">
            <summary>
            Gets or sets the SAS version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerListCallbackUrlQueries.Sig">
            <summary>
            Gets or sets the SAS signature.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerListCallbackUrlQueries.Se">
            <summary>
            Gets or sets the SAS timestamp.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerProvisioningState">
            <summary>
            Defines values for WorkflowTriggerProvisioningState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerRecurrence">
            <summary>
            The workflow trigger recurrence.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerRecurrence.#ctor">
            <summary>
            Initializes a new instance of the WorkflowTriggerRecurrence class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerRecurrence.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule)">
            <summary>
            Initializes a new instance of the WorkflowTriggerRecurrence class.
            </summary>
            <param name="frequency">The frequency. Possible values include:
            'NotSpecified', 'Second', 'Minute', 'Hour', 'Day', 'Week', 'Month',
            'Year'</param>
            <param name="interval">The interval.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <param name="timeZone">The time zone.</param>
            <param name="schedule">The recurrence schedule.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerRecurrence.Frequency">
            <summary>
            Gets or sets the frequency. Possible values include:
            'NotSpecified', 'Second', 'Minute', 'Hour', 'Day', 'Week', 'Month',
            'Year'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerRecurrence.Interval">
            <summary>
            Gets or sets the interval.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerRecurrence.StartTime">
            <summary>
            Gets or sets the start time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerRecurrence.EndTime">
            <summary>
            Gets or sets the end time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerRecurrence.TimeZone">
            <summary>
            Gets or sets the time zone.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowTriggerRecurrence.Schedule">
            <summary>
            Gets or sets the recurrence schedule.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.WorkflowVersion">
            <summary>
            The workflow version.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowVersion.#ctor">
            <summary>
            Initializes a new instance of the WorkflowVersion class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowVersion.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.Sku,Microsoft.Azure.Management.Logic.Models.ResourceReference,System.Object,System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Logic.Models.WorkflowParameter})">
            <summary>
            Initializes a new instance of the WorkflowVersion class.
            </summary>
            <param name="id">The resource id.</param>
            <param name="name">Gets the resource name.</param>
            <param name="type">Gets the resource type.</param>
            <param name="location">The resource location.</param>
            <param name="tags">The resource tags.</param>
            <param name="createdTime">Gets the created time.</param>
            <param name="changedTime">Gets the changed time.</param>
            <param name="state">The state. Possible values include:
            'NotSpecified', 'Completed', 'Enabled', 'Disabled', 'Deleted',
            'Suspended'</param>
            <param name="version">Gets the version.</param>
            <param name="accessEndpoint">Gets the access endpoint.</param>
            <param name="sku">The sku.</param>
            <param name="integrationAccount">The integration account.</param>
            <param name="definition">The definition.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowVersion.CreatedTime">
            <summary>
            Gets the created time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowVersion.ChangedTime">
            <summary>
            Gets the changed time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowVersion.State">
            <summary>
            Gets or sets the state. Possible values include: 'NotSpecified',
            'Completed', 'Enabled', 'Disabled', 'Deleted', 'Suspended'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowVersion.Version">
            <summary>
            Gets the version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowVersion.AccessEndpoint">
            <summary>
            Gets the access endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowVersion.Sku">
            <summary>
            Gets or sets the sku.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowVersion.IntegrationAccount">
            <summary>
            Gets or sets the integration account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowVersion.Definition">
            <summary>
            Gets or sets the definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.WorkflowVersion.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.WorkflowVersion.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.X12AcknowledgementSettings">
            <summary>
            The X12 agreement acknowledgement settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12AcknowledgementSettings.#ctor">
            <summary>
            Initializes a new instance of the X12AcknowledgementSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12AcknowledgementSettings.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the X12AcknowledgementSettings class.
            </summary>
            <param name="needTechnicalAcknowledgement">The value indicating
            whether technical acknowledgement is needed.</param>
            <param name="batchTechnicalAcknowledgements">The value indicating
            whether to batch the technical acknowledgements.</param>
            <param name="needFunctionalAcknowledgement">The value indicating
            whether functional acknowledgement is needed.</param>
            <param name="batchFunctionalAcknowledgements">The value indicating
            whether to batch functional acknowledgements.</param>
            <param name="needImplementationAcknowledgement">The value
            indicating whether implementation acknowledgement is
            needed.</param>
            <param name="batchImplementationAcknowledgements">The value
            indicating whether to batch implementation
            acknowledgements.</param>
            <param name="needLoopForValidMessages">The value indicating whether
            a loop is needed for valid messages.</param>
            <param name="sendSynchronousAcknowledgement">The value indicating
            whether to send synchronous acknowledgement.</param>
            <param name="acknowledgementControlNumberLowerBound">The
            acknowledgement control number lower bound.</param>
            <param name="acknowledgementControlNumberUpperBound">The
            acknowledgement control number upper bound.</param>
            <param name="rolloverAcknowledgementControlNumber">The value
            indicating whether to rollover acknowledgement control
            number.</param>
            <param name="functionalAcknowledgementVersion">The functional
            acknowledgement version.</param>
            <param name="implementationAcknowledgementVersion">The
            implementation acknowledgement version.</param>
            <param name="acknowledgementControlNumberPrefix">The
            acknowledgement control number prefix.</param>
            <param name="acknowledgementControlNumberSuffix">The
            acknowledgement control number suffix.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12AcknowledgementSettings.NeedTechnicalAcknowledgement">
            <summary>
            Gets or sets the value indicating whether technical acknowledgement
            is needed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12AcknowledgementSettings.BatchTechnicalAcknowledgements">
            <summary>
            Gets or sets the value indicating whether to batch the technical
            acknowledgements.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12AcknowledgementSettings.NeedFunctionalAcknowledgement">
            <summary>
            Gets or sets the value indicating whether functional
            acknowledgement is needed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12AcknowledgementSettings.FunctionalAcknowledgementVersion">
            <summary>
            Gets or sets the functional acknowledgement version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12AcknowledgementSettings.BatchFunctionalAcknowledgements">
            <summary>
            Gets or sets the value indicating whether to batch functional
            acknowledgements.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12AcknowledgementSettings.NeedImplementationAcknowledgement">
            <summary>
            Gets or sets the value indicating whether implementation
            acknowledgement is needed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12AcknowledgementSettings.ImplementationAcknowledgementVersion">
            <summary>
            Gets or sets the implementation acknowledgement version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12AcknowledgementSettings.BatchImplementationAcknowledgements">
            <summary>
            Gets or sets the value indicating whether to batch implementation
            acknowledgements.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12AcknowledgementSettings.NeedLoopForValidMessages">
            <summary>
            Gets or sets the value indicating whether a loop is needed for
            valid messages.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12AcknowledgementSettings.SendSynchronousAcknowledgement">
            <summary>
            Gets or sets the value indicating whether to send synchronous
            acknowledgement.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12AcknowledgementSettings.AcknowledgementControlNumberPrefix">
            <summary>
            Gets or sets the acknowledgement control number prefix.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12AcknowledgementSettings.AcknowledgementControlNumberSuffix">
            <summary>
            Gets or sets the acknowledgement control number suffix.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12AcknowledgementSettings.AcknowledgementControlNumberLowerBound">
            <summary>
            Gets or sets the acknowledgement control number lower bound.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12AcknowledgementSettings.AcknowledgementControlNumberUpperBound">
            <summary>
            Gets or sets the acknowledgement control number upper bound.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12AcknowledgementSettings.RolloverAcknowledgementControlNumber">
            <summary>
            Gets or sets the value indicating whether to rollover
            acknowledgement control number.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12AcknowledgementSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.X12AgreementContent">
            <summary>
            The X12 agreement content.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12AgreementContent.#ctor">
            <summary>
            Initializes a new instance of the X12AgreementContent class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12AgreementContent.#ctor(Microsoft.Azure.Management.Logic.Models.X12OneWayAgreement,Microsoft.Azure.Management.Logic.Models.X12OneWayAgreement)">
            <summary>
            Initializes a new instance of the X12AgreementContent class.
            </summary>
            <param name="receiveAgreement">The X12 one-way receive
            agreement.</param>
            <param name="sendAgreement">The X12 one-way send agreement.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12AgreementContent.ReceiveAgreement">
            <summary>
            Gets or sets the X12 one-way receive agreement.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12AgreementContent.SendAgreement">
            <summary>
            Gets or sets the X12 one-way send agreement.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12AgreementContent.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.X12CharacterSet">
            <summary>
            Defines values for X12CharacterSet.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.X12DateFormat">
            <summary>
            Defines values for X12DateFormat.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.X12DelimiterOverrides">
            <summary>
            The X12 delimiter override settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12DelimiterOverrides.#ctor">
            <summary>
            Initializes a new instance of the X12DelimiterOverrides class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12DelimiterOverrides.#ctor(System.Int32,System.Int32,System.Int32,Microsoft.Azure.Management.Logic.Models.SegmentTerminatorSuffix,System.Int32,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the X12DelimiterOverrides class.
            </summary>
            <param name="dataElementSeparator">The data element
            separator.</param>
            <param name="componentSeparator">The component separator.</param>
            <param name="segmentTerminator">The segment terminator.</param>
            <param name="segmentTerminatorSuffix">The segment terminator
            suffix. Possible values include: 'NotSpecified', 'None', 'CR',
            'LF', 'CRLF'</param>
            <param name="replaceCharacter">The replacement character.</param>
            <param name="replaceSeparatorsInPayload">The value indicating
            whether to replace separators in payload.</param>
            <param name="protocolVersion">The protocol version.</param>
            <param name="messageId">The message id.</param>
            <param name="targetNamespace">The target namespace on which this
            delimiter settings has to be applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12DelimiterOverrides.ProtocolVersion">
            <summary>
            Gets or sets the protocol version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12DelimiterOverrides.MessageId">
            <summary>
            Gets or sets the message id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12DelimiterOverrides.DataElementSeparator">
            <summary>
            Gets or sets the data element separator.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12DelimiterOverrides.ComponentSeparator">
            <summary>
            Gets or sets the component separator.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12DelimiterOverrides.SegmentTerminator">
            <summary>
            Gets or sets the segment terminator.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12DelimiterOverrides.SegmentTerminatorSuffix">
            <summary>
            Gets or sets the segment terminator suffix. Possible values
            include: 'NotSpecified', 'None', 'CR', 'LF', 'CRLF'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12DelimiterOverrides.ReplaceCharacter">
            <summary>
            Gets or sets the replacement character.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12DelimiterOverrides.ReplaceSeparatorsInPayload">
            <summary>
            Gets or sets the value indicating whether to replace separators in
            payload.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12DelimiterOverrides.TargetNamespace">
            <summary>
            Gets or sets the target namespace on which this delimiter settings
            has to be applied.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12DelimiterOverrides.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride">
            <summary>
            The X12 envelope override settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.#ctor">
            <summary>
            Initializes a new instance of the X12EnvelopeOverride class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the X12EnvelopeOverride class.
            </summary>
            <param name="targetNamespace">The target namespace on which this
            envelope settings has to be applied.</param>
            <param name="protocolVersion">The protocol version on which this
            envelope settings has to be applied.</param>
            <param name="messageId">The message id on which this envelope
            settings has to be applied.</param>
            <param name="responsibleAgencyCode">The responsible agency
            code.</param>
            <param name="headerVersion">The header version.</param>
            <param name="senderApplicationId">The sender application
            id.</param>
            <param name="receiverApplicationId">The receiver application
            id.</param>
            <param name="dateFormat">The date format. Possible values include:
            'NotSpecified', 'CCYYMMDD', 'YYMMDD'</param>
            <param name="timeFormat">The time format. Possible values include:
            'NotSpecified', 'HHMM', 'HHMMSS', 'HHMMSSdd', 'HHMMSSd'</param>
            <param name="functionalIdentifierCode">The functional identifier
            code.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.TargetNamespace">
            <summary>
            Gets or sets the target namespace on which this envelope settings
            has to be applied.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.ProtocolVersion">
            <summary>
            Gets or sets the protocol version on which this envelope settings
            has to be applied.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.MessageId">
            <summary>
            Gets or sets the message id on which this envelope settings has to
            be applied.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.ResponsibleAgencyCode">
            <summary>
            Gets or sets the responsible agency code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.HeaderVersion">
            <summary>
            Gets or sets the header version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.SenderApplicationId">
            <summary>
            Gets or sets the sender application id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.ReceiverApplicationId">
            <summary>
            Gets or sets the receiver application id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.FunctionalIdentifierCode">
            <summary>
            Gets or sets the functional identifier code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.DateFormat">
            <summary>
            Gets or sets the date format. Possible values include:
            'NotSpecified', 'CCYYMMDD', 'YYMMDD'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.TimeFormat">
            <summary>
            Gets or sets the time format. Possible values include:
            'NotSpecified', 'HHMM', 'HHMMSS', 'HHMMSSdd', 'HHMMSSd'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings">
            <summary>
            The X12 agreement envelope settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.#ctor">
            <summary>
            Initializes a new instance of the X12EnvelopeSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.#ctor(System.Int32,System.Boolean,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the X12EnvelopeSettings class.
            </summary>
            <param name="controlStandardsId">The controls standards id.</param>
            <param name="useControlStandardsIdAsRepetitionCharacter">The value
            indicating whether to use control standards id as repetition
            character.</param>
            <param name="senderApplicationId">The sender application
            id.</param>
            <param name="receiverApplicationId">The receiver application
            id.</param>
            <param name="controlVersionNumber">The control version
            number.</param>
            <param name="interchangeControlNumberLowerBound">The interchange
            control number lower bound.</param>
            <param name="interchangeControlNumberUpperBound">The interchange
            control number upper bound.</param>
            <param name="rolloverInterchangeControlNumber">The value indicating
            whether to rollover interchange control number.</param>
            <param name="enableDefaultGroupHeaders">The value indicating
            whether to enable default group headers.</param>
            <param name="groupControlNumberLowerBound">The group control number
            lower bound.</param>
            <param name="groupControlNumberUpperBound">The group control number
            upper bound.</param>
            <param name="rolloverGroupControlNumber">The value indicating
            whether to rollover group control number.</param>
            <param name="groupHeaderAgencyCode">The group header agency
            code.</param>
            <param name="groupHeaderVersion">The group header version.</param>
            <param name="transactionSetControlNumberLowerBound">The transaction
            set control number lower bound.</param>
            <param name="transactionSetControlNumberUpperBound">The transaction
            set control number upper bound.</param>
            <param name="rolloverTransactionSetControlNumber">The value
            indicating whether to rollover transaction set control
            number.</param>
            <param name="overwriteExistingTransactionSetControlNumber">The
            value indicating whether to overwrite existing transaction set
            control number.</param>
            <param name="groupHeaderDateFormat">The group header date format.
            Possible values include: 'NotSpecified', 'CCYYMMDD',
            'YYMMDD'</param>
            <param name="groupHeaderTimeFormat">The group header time format.
            Possible values include: 'NotSpecified', 'HHMM', 'HHMMSS',
            'HHMMSSdd', 'HHMMSSd'</param>
            <param name="usageIndicator">The usage indicator. Possible values
            include: 'NotSpecified', 'Test', 'Information',
            'Production'</param>
            <param name="functionalGroupId">The functional group id.</param>
            <param name="transactionSetControlNumberPrefix">The transaction set
            control number prefix.</param>
            <param name="transactionSetControlNumberSuffix">The transaction set
            control number suffix.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.ControlStandardsId">
            <summary>
            Gets or sets the controls standards id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.UseControlStandardsIdAsRepetitionCharacter">
            <summary>
            Gets or sets the value indicating whether to use control standards
            id as repetition character.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.SenderApplicationId">
            <summary>
            Gets or sets the sender application id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.ReceiverApplicationId">
            <summary>
            Gets or sets the receiver application id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.ControlVersionNumber">
            <summary>
            Gets or sets the control version number.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.InterchangeControlNumberLowerBound">
            <summary>
            Gets or sets the interchange  control number lower bound.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.InterchangeControlNumberUpperBound">
            <summary>
            Gets or sets the interchange  control number upper bound.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.RolloverInterchangeControlNumber">
            <summary>
            Gets or sets the value indicating whether to rollover interchange
            control number.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.EnableDefaultGroupHeaders">
            <summary>
            Gets or sets the value indicating whether to enable default group
            headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.FunctionalGroupId">
            <summary>
            Gets or sets the functional group id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.GroupControlNumberLowerBound">
            <summary>
            Gets or sets the group control number lower bound.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.GroupControlNumberUpperBound">
            <summary>
            Gets or sets the group control number upper bound.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.RolloverGroupControlNumber">
            <summary>
            Gets or sets the value indicating whether to rollover group control
            number.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.GroupHeaderAgencyCode">
            <summary>
            Gets or sets the group header agency code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.GroupHeaderVersion">
            <summary>
            Gets or sets the group header version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.TransactionSetControlNumberLowerBound">
            <summary>
            Gets or sets the transaction set control number lower bound.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.TransactionSetControlNumberUpperBound">
            <summary>
            Gets or sets the transaction set control number upper bound.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.RolloverTransactionSetControlNumber">
            <summary>
            Gets or sets the value indicating whether to rollover transaction
            set control number.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.TransactionSetControlNumberPrefix">
            <summary>
            Gets or sets the transaction set control number prefix.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.TransactionSetControlNumberSuffix">
            <summary>
            Gets or sets the transaction set control number suffix.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.OverwriteExistingTransactionSetControlNumber">
            <summary>
            Gets or sets the value indicating whether to overwrite existing
            transaction set control number.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.GroupHeaderDateFormat">
            <summary>
            Gets or sets the group header date format. Possible values include:
            'NotSpecified', 'CCYYMMDD', 'YYMMDD'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.GroupHeaderTimeFormat">
            <summary>
            Gets or sets the group header time format. Possible values include:
            'NotSpecified', 'HHMM', 'HHMMSS', 'HHMMSSdd', 'HHMMSSd'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.UsageIndicator">
            <summary>
            Gets or sets the usage indicator. Possible values include:
            'NotSpecified', 'Test', 'Information', 'Production'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.X12FramingSettings">
            <summary>
            The X12 agreement framing settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12FramingSettings.#ctor">
            <summary>
            Initializes a new instance of the X12FramingSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12FramingSettings.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.String,Microsoft.Azure.Management.Logic.Models.SegmentTerminatorSuffix)">
            <summary>
            Initializes a new instance of the X12FramingSettings class.
            </summary>
            <param name="dataElementSeparator">The data element
            separator.</param>
            <param name="componentSeparator">The component separator.</param>
            <param name="replaceSeparatorsInPayload">The value indicating
            whether to replace separators in payload.</param>
            <param name="replaceCharacter">The replacement character.</param>
            <param name="segmentTerminator">The segment terminator.</param>
            <param name="characterSet">The X12 character set. Possible values
            include: 'NotSpecified', 'Basic', 'Extended', 'UTF8'</param>
            <param name="segmentTerminatorSuffix">The segment terminator
            suffix. Possible values include: 'NotSpecified', 'None', 'CR',
            'LF', 'CRLF'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12FramingSettings.DataElementSeparator">
            <summary>
            Gets or sets the data element separator.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12FramingSettings.ComponentSeparator">
            <summary>
            Gets or sets the component separator.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12FramingSettings.ReplaceSeparatorsInPayload">
            <summary>
            Gets or sets the value indicating whether to replace separators in
            payload.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12FramingSettings.ReplaceCharacter">
            <summary>
            Gets or sets the replacement character.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12FramingSettings.SegmentTerminator">
            <summary>
            Gets or sets the segment terminator.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12FramingSettings.CharacterSet">
            <summary>
            Gets or sets the X12 character set. Possible values include:
            'NotSpecified', 'Basic', 'Extended', 'UTF8'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12FramingSettings.SegmentTerminatorSuffix">
            <summary>
            Gets or sets the segment terminator suffix. Possible values
            include: 'NotSpecified', 'None', 'CR', 'LF', 'CRLF'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12FramingSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.X12MessageFilter">
            <summary>
            The X12 message filter for odata query.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12MessageFilter.#ctor">
            <summary>
            Initializes a new instance of the X12MessageFilter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12MessageFilter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the X12MessageFilter class.
            </summary>
            <param name="messageFilterType">The message filter type. Possible
            values include: 'NotSpecified', 'Include', 'Exclude'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12MessageFilter.MessageFilterType">
            <summary>
            Gets or sets the message filter type. Possible values include:
            'NotSpecified', 'Include', 'Exclude'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12MessageFilter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.X12MessageIdentifier">
            <summary>
            The X12 message identifier.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12MessageIdentifier.#ctor">
            <summary>
            Initializes a new instance of the X12MessageIdentifier class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12MessageIdentifier.#ctor(System.String)">
            <summary>
            Initializes a new instance of the X12MessageIdentifier class.
            </summary>
            <param name="messageId">The message id.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12MessageIdentifier.MessageId">
            <summary>
            Gets or sets the message id.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12MessageIdentifier.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.X12OneWayAgreement">
            <summary>
            The X12 one-way agreement.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12OneWayAgreement.#ctor">
            <summary>
            Initializes a new instance of the X12OneWayAgreement class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12OneWayAgreement.#ctor(Microsoft.Azure.Management.Logic.Models.BusinessIdentity,Microsoft.Azure.Management.Logic.Models.BusinessIdentity,Microsoft.Azure.Management.Logic.Models.X12ProtocolSettings)">
            <summary>
            Initializes a new instance of the X12OneWayAgreement class.
            </summary>
            <param name="senderBusinessIdentity">The sender business
            identity</param>
            <param name="receiverBusinessIdentity">The receiver business
            identity</param>
            <param name="protocolSettings">The X12 protocol settings.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12OneWayAgreement.SenderBusinessIdentity">
            <summary>
            Gets or sets the sender business identity
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12OneWayAgreement.ReceiverBusinessIdentity">
            <summary>
            Gets or sets the receiver business identity
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12OneWayAgreement.ProtocolSettings">
            <summary>
            Gets or sets the X12 protocol settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12OneWayAgreement.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings">
            <summary>
            The X12 processing settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.#ctor">
            <summary>
            Initializes a new instance of the X12ProcessingSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the X12ProcessingSettings class.
            </summary>
            <param name="maskSecurityInfo">The value indicating whether to mask
            security information.</param>
            <param name="convertImpliedDecimal">The value indicating whether to
            convert numerical type to implied decimal.</param>
            <param name="preserveInterchange">The value indicating whether to
            preserve interchange.</param>
            <param name="suspendInterchangeOnError">The value indicating
            whether to suspend interchange on error.</param>
            <param name="createEmptyXmlTagsForTrailingSeparators">The value
            indicating whether to create empty xml tags for trailing
            separators.</param>
            <param name="useDotAsDecimalSeparator">The value indicating whether
            to use dot as decimal separator.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.MaskSecurityInfo">
            <summary>
            Gets or sets the value indicating whether to mask security
            information.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.ConvertImpliedDecimal">
            <summary>
            Gets or sets the value indicating whether to convert numerical type
            to implied decimal.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.PreserveInterchange">
            <summary>
            Gets or sets the value indicating whether to preserve interchange.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.SuspendInterchangeOnError">
            <summary>
            Gets or sets the value indicating whether to suspend interchange on
            error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.CreateEmptyXmlTagsForTrailingSeparators">
            <summary>
            Gets or sets the value indicating whether to create empty xml tags
            for trailing separators.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.UseDotAsDecimalSeparator">
            <summary>
            Gets or sets the value indicating whether to use dot as decimal
            separator.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.X12ProtocolSettings">
            <summary>
            The X12 agreement protocol settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12ProtocolSettings.#ctor">
            <summary>
            Initializes a new instance of the X12ProtocolSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12ProtocolSettings.#ctor(Microsoft.Azure.Management.Logic.Models.X12ValidationSettings,Microsoft.Azure.Management.Logic.Models.X12FramingSettings,Microsoft.Azure.Management.Logic.Models.X12EnvelopeSettings,Microsoft.Azure.Management.Logic.Models.X12AcknowledgementSettings,Microsoft.Azure.Management.Logic.Models.X12MessageFilter,Microsoft.Azure.Management.Logic.Models.X12SecuritySettings,Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings,System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.X12SchemaReference},System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride},System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.X12ValidationOverride},System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.X12MessageIdentifier},System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.X12DelimiterOverrides})">
            <summary>
            Initializes a new instance of the X12ProtocolSettings class.
            </summary>
            <param name="validationSettings">The X12 validation
            settings.</param>
            <param name="framingSettings">The X12 framing settings.</param>
            <param name="envelopeSettings">The X12 envelope settings.</param>
            <param name="acknowledgementSettings">The X12 acknowledgment
            settings.</param>
            <param name="messageFilter">The X12 message filter.</param>
            <param name="securitySettings">The X12 security settings.</param>
            <param name="processingSettings">The X12 processing
            settings.</param>
            <param name="schemaReferences">The X12 schema references.</param>
            <param name="envelopeOverrides">The X12 envelope override
            settings.</param>
            <param name="validationOverrides">The X12 validation override
            settings.</param>
            <param name="messageFilterList">The X12 message filter
            list.</param>
            <param name="x12DelimiterOverrides">The X12 delimiter override
            settings.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ProtocolSettings.ValidationSettings">
            <summary>
            Gets or sets the X12 validation settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ProtocolSettings.FramingSettings">
            <summary>
            Gets or sets the X12 framing settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ProtocolSettings.EnvelopeSettings">
            <summary>
            Gets or sets the X12 envelope settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ProtocolSettings.AcknowledgementSettings">
            <summary>
            Gets or sets the X12 acknowledgment settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ProtocolSettings.MessageFilter">
            <summary>
            Gets or sets the X12 message filter.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ProtocolSettings.SecuritySettings">
            <summary>
            Gets or sets the X12 security settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ProtocolSettings.ProcessingSettings">
            <summary>
            Gets or sets the X12 processing settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ProtocolSettings.EnvelopeOverrides">
            <summary>
            Gets or sets the X12 envelope override settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ProtocolSettings.ValidationOverrides">
            <summary>
            Gets or sets the X12 validation override settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ProtocolSettings.MessageFilterList">
            <summary>
            Gets or sets the X12 message filter list.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ProtocolSettings.SchemaReferences">
            <summary>
            Gets or sets the X12 schema references.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ProtocolSettings.X12DelimiterOverrides">
            <summary>
            Gets or sets the X12 delimiter override settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12ProtocolSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.X12SchemaReference">
            <summary>
            The X12 schema reference.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12SchemaReference.#ctor">
            <summary>
            Initializes a new instance of the X12SchemaReference class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12SchemaReference.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the X12SchemaReference class.
            </summary>
            <param name="messageId">The message id.</param>
            <param name="schemaVersion">The schema version.</param>
            <param name="schemaName">The schema name.</param>
            <param name="senderApplicationId">The sender application
            id.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12SchemaReference.MessageId">
            <summary>
            Gets or sets the message id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12SchemaReference.SenderApplicationId">
            <summary>
            Gets or sets the sender application id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12SchemaReference.SchemaVersion">
            <summary>
            Gets or sets the schema version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12SchemaReference.SchemaName">
            <summary>
            Gets or sets the schema name.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12SchemaReference.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.X12SecuritySettings">
            <summary>
            The X12 agreement security settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12SecuritySettings.#ctor">
            <summary>
            Initializes a new instance of the X12SecuritySettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12SecuritySettings.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the X12SecuritySettings class.
            </summary>
            <param name="authorizationQualifier">The authorization
            qualifier.</param>
            <param name="securityQualifier">The security qualifier.</param>
            <param name="authorizationValue">The authorization value.</param>
            <param name="passwordValue">The password value.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12SecuritySettings.AuthorizationQualifier">
            <summary>
            Gets or sets the authorization qualifier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12SecuritySettings.AuthorizationValue">
            <summary>
            Gets or sets the authorization value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12SecuritySettings.SecurityQualifier">
            <summary>
            Gets or sets the security qualifier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12SecuritySettings.PasswordValue">
            <summary>
            Gets or sets the password value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12SecuritySettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.X12TimeFormat">
            <summary>
            Defines values for X12TimeFormat.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.X12ValidationOverride">
            <summary>
            The X12 validation override settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12ValidationOverride.#ctor">
            <summary>
            Initializes a new instance of the X12ValidationOverride class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12ValidationOverride.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the X12ValidationOverride class.
            </summary>
            <param name="messageId">The message id on which the validation
            settings has to be applied.</param>
            <param name="validateEdiTypes">The value indicating whether to
            validate EDI types.</param>
            <param name="validateXsdTypes">The value indicating whether to
            validate XSD types.</param>
            <param name="allowLeadingAndTrailingSpacesAndZeroes">The value
            indicating whether to allow leading and trailing spaces and
            zeroes.</param>
            <param name="validateCharacterSet">The value indicating whether to
            validate character Set.</param>
            <param name="trimLeadingAndTrailingSpacesAndZeroes">The value
            indicating whether to trim leading and trailing spaces and
            zeroes.</param>
            <param name="trailingSeparatorPolicy">The trailing separator
            policy. Possible values include: 'NotSpecified', 'NotAllowed',
            'Optional', 'Mandatory'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ValidationOverride.MessageId">
            <summary>
            Gets or sets the message id on which the validation settings has to
            be applied.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ValidationOverride.ValidateEdiTypes">
            <summary>
            Gets or sets the value indicating whether to validate EDI types.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ValidationOverride.ValidateXsdTypes">
            <summary>
            Gets or sets the value indicating whether to validate XSD types.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ValidationOverride.AllowLeadingAndTrailingSpacesAndZeroes">
            <summary>
            Gets or sets the value indicating whether to allow leading and
            trailing spaces and zeroes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ValidationOverride.ValidateCharacterSet">
            <summary>
            Gets or sets the value indicating whether to validate character
            Set.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ValidationOverride.TrimLeadingAndTrailingSpacesAndZeroes">
            <summary>
            Gets or sets the value indicating whether to trim leading and
            trailing spaces and zeroes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ValidationOverride.TrailingSeparatorPolicy">
            <summary>
            Gets or sets the trailing separator policy. Possible values
            include: 'NotSpecified', 'NotAllowed', 'Optional', 'Mandatory'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12ValidationOverride.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Models.X12ValidationSettings">
            <summary>
            The X12 agreement validation settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12ValidationSettings.#ctor">
            <summary>
            Initializes a new instance of the X12ValidationSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12ValidationSettings.#ctor(System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the X12ValidationSettings class.
            </summary>
            <param name="validateCharacterSet">The value indicating whether to
            validate character set in the message.</param>
            <param name="checkDuplicateInterchangeControlNumber">The value
            indicating whether to check for duplicate interchange control
            number.</param>
            <param name="interchangeControlNumberValidityDays">The validity
            period of interchange control number.</param>
            <param name="checkDuplicateGroupControlNumber">The value indicating
            whether to check for duplicate group control number.</param>
            <param name="checkDuplicateTransactionSetControlNumber">The value
            indicating whether to check for duplicate transaction set control
            number.</param>
            <param name="validateEdiTypes">The value indicating whether to
            Whether to validate EDI types.</param>
            <param name="validateXsdTypes">The value indicating whether to
            Whether to validate XSD types.</param>
            <param name="allowLeadingAndTrailingSpacesAndZeroes">The value
            indicating whether to allow leading and trailing spaces and
            zeroes.</param>
            <param name="trimLeadingAndTrailingSpacesAndZeroes">The value
            indicating whether to trim leading and trailing spaces and
            zeroes.</param>
            <param name="trailingSeparatorPolicy">The trailing separator
            policy. Possible values include: 'NotSpecified', 'NotAllowed',
            'Optional', 'Mandatory'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ValidationSettings.ValidateCharacterSet">
            <summary>
            Gets or sets the value indicating whether to validate character set
            in the message.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ValidationSettings.CheckDuplicateInterchangeControlNumber">
            <summary>
            Gets or sets the value indicating whether to check for duplicate
            interchange control number.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ValidationSettings.InterchangeControlNumberValidityDays">
            <summary>
            Gets or sets the validity period of interchange control number.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ValidationSettings.CheckDuplicateGroupControlNumber">
            <summary>
            Gets or sets the value indicating whether to check for duplicate
            group control number.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ValidationSettings.CheckDuplicateTransactionSetControlNumber">
            <summary>
            Gets or sets the value indicating whether to check for duplicate
            transaction set control number.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ValidationSettings.ValidateEdiTypes">
            <summary>
            Gets or sets the value indicating whether to Whether to validate
            EDI types.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ValidationSettings.ValidateXsdTypes">
            <summary>
            Gets or sets the value indicating whether to Whether to validate
            XSD types.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ValidationSettings.AllowLeadingAndTrailingSpacesAndZeroes">
            <summary>
            Gets or sets the value indicating whether to allow leading and
            trailing spaces and zeroes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ValidationSettings.TrimLeadingAndTrailingSpacesAndZeroes">
            <summary>
            Gets or sets the value indicating whether to trim leading and
            trailing spaces and zeroes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Models.X12ValidationSettings.TrailingSeparatorPolicy">
            <summary>
            Gets or sets the trailing separator policy. Possible values
            include: 'NotSpecified', 'NotAllowed', 'Optional', 'Mandatory'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Models.X12ValidationSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.Operations">
            <summary>
            Operations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Operations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the Operations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.Operations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Operations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Logic REST API operations.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Logic.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.Operations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Logic REST API operations.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Logic.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.OperationsExtensions">
            <summary>
            Extension methods for Operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.OperationsExtensions.List(Microsoft.Azure.Management.Logic.IOperations)">
            <summary>
            Lists all of the available Logic REST API operations.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.OperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IOperations,System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Logic REST API operations.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.OperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IOperations,System.String)">
            <summary>
            Lists all of the available Logic REST API operations.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.OperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Logic REST API operations.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsOperations">
            <summary>
            WorkflowRunActionRepetitionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsOperations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the WorkflowRunActionRepetitionsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsOperations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsOperations.ListWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all of a workflow run action repetitions.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get a workflow run action repetition.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='repetitionName'>
            The workflow repetition.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsOperations.ListExpressionTracesWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists a workflow run expression trace.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='repetitionName'>
            The workflow repetition.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsOperationsExtensions">
            <summary>
            Extension methods for WorkflowRunActionRepetitionsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsOperationsExtensions.List(Microsoft.Azure.Management.Logic.IWorkflowRunActionRepetitionsOperations,System.String,System.String,System.String,System.String)">
            <summary>
            Get all of a workflow run action repetitions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IWorkflowRunActionRepetitionsOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all of a workflow run action repetitions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IWorkflowRunActionRepetitionsOperations,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a workflow run action repetition.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='repetitionName'>
            The workflow repetition.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IWorkflowRunActionRepetitionsOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a workflow run action repetition.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='repetitionName'>
            The workflow repetition.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsOperationsExtensions.ListExpressionTraces(Microsoft.Azure.Management.Logic.IWorkflowRunActionRepetitionsOperations,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Lists a workflow run expression trace.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='repetitionName'>
            The workflow repetition.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsOperationsExtensions.ListExpressionTracesAsync(Microsoft.Azure.Management.Logic.IWorkflowRunActionRepetitionsOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists a workflow run expression trace.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='repetitionName'>
            The workflow repetition.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsRequestHistoriesOperations">
            <summary>
            WorkflowRunActionRepetitionsRequestHistoriesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsRequestHistoriesOperations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the WorkflowRunActionRepetitionsRequestHistoriesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsRequestHistoriesOperations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsRequestHistoriesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List a workflow run repetition request history.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='repetitionName'>
            The workflow repetition.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Logic.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsRequestHistoriesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a workflow run repetition request history.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='repetitionName'>
            The workflow repetition.
            </param>
            <param name='requestHistoryName'>
            The request history name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Logic.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsRequestHistoriesOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List a workflow run repetition request history.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Logic.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsRequestHistoriesOperationsExtensions">
            <summary>
            Extension methods for WorkflowRunActionRepetitionsRequestHistoriesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsRequestHistoriesOperationsExtensions.List(Microsoft.Azure.Management.Logic.IWorkflowRunActionRepetitionsRequestHistoriesOperations,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List a workflow run repetition request history.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='repetitionName'>
            The workflow repetition.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsRequestHistoriesOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IWorkflowRunActionRepetitionsRequestHistoriesOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List a workflow run repetition request history.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='repetitionName'>
            The workflow repetition.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsRequestHistoriesOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IWorkflowRunActionRepetitionsRequestHistoriesOperations,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets a workflow run repetition request history.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='repetitionName'>
            The workflow repetition.
            </param>
            <param name='requestHistoryName'>
            The request history name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsRequestHistoriesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IWorkflowRunActionRepetitionsRequestHistoriesOperations,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a workflow run repetition request history.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='repetitionName'>
            The workflow repetition.
            </param>
            <param name='requestHistoryName'>
            The request history name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsRequestHistoriesOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IWorkflowRunActionRepetitionsRequestHistoriesOperations,System.String)">
            <summary>
            List a workflow run repetition request history.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRepetitionsRequestHistoriesOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IWorkflowRunActionRepetitionsRequestHistoriesOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            List a workflow run repetition request history.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowRunActionRequestHistoriesOperations">
            <summary>
            WorkflowRunActionRequestHistoriesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRequestHistoriesOperations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the WorkflowRunActionRequestHistoriesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.WorkflowRunActionRequestHistoriesOperations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRequestHistoriesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List a workflow run request history.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Logic.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRequestHistoriesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a workflow run request history.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='requestHistoryName'>
            The request history name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Logic.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRequestHistoriesOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List a workflow run request history.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Logic.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowRunActionRequestHistoriesOperationsExtensions">
            <summary>
            Extension methods for WorkflowRunActionRequestHistoriesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRequestHistoriesOperationsExtensions.List(Microsoft.Azure.Management.Logic.IWorkflowRunActionRequestHistoriesOperations,System.String,System.String,System.String,System.String)">
            <summary>
            List a workflow run request history.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRequestHistoriesOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IWorkflowRunActionRequestHistoriesOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List a workflow run request history.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRequestHistoriesOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IWorkflowRunActionRequestHistoriesOperations,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets a workflow run request history.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='requestHistoryName'>
            The request history name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRequestHistoriesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IWorkflowRunActionRequestHistoriesOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a workflow run request history.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='requestHistoryName'>
            The request history name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRequestHistoriesOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IWorkflowRunActionRequestHistoriesOperations,System.String)">
            <summary>
            List a workflow run request history.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionRequestHistoriesOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IWorkflowRunActionRequestHistoriesOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            List a workflow run request history.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowRunActionScopeRepetitionsOperations">
            <summary>
            WorkflowRunActionScopeRepetitionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionScopeRepetitionsOperations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the WorkflowRunActionScopeRepetitionsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.WorkflowRunActionScopeRepetitionsOperations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionScopeRepetitionsOperations.ListWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List the workflow run action scoped repetitions.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionScopeRepetitionsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get a workflow run action scoped repetition.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='repetitionName'>
            The workflow repetition.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowRunActionScopeRepetitionsOperationsExtensions">
            <summary>
            Extension methods for WorkflowRunActionScopeRepetitionsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionScopeRepetitionsOperationsExtensions.List(Microsoft.Azure.Management.Logic.IWorkflowRunActionScopeRepetitionsOperations,System.String,System.String,System.String,System.String)">
            <summary>
            List the workflow run action scoped repetitions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionScopeRepetitionsOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IWorkflowRunActionScopeRepetitionsOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List the workflow run action scoped repetitions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionScopeRepetitionsOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IWorkflowRunActionScopeRepetitionsOperations,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a workflow run action scoped repetition.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='repetitionName'>
            The workflow repetition.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionScopeRepetitionsOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IWorkflowRunActionScopeRepetitionsOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a workflow run action scoped repetition.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='repetitionName'>
            The workflow repetition.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowRunActionsOperations">
            <summary>
            WorkflowRunActionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionsOperations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the WorkflowRunActionsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.WorkflowRunActionsOperations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionsOperations.ListWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowRunActionFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow run actions.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a workflow run action.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionsOperations.ListExpressionTracesWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists a workflow run expression trace.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow run actions.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowRunActionsOperationsExtensions">
            <summary>
            Extension methods for WorkflowRunActionsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionsOperationsExtensions.List(Microsoft.Azure.Management.Logic.IWorkflowRunActionsOperations,System.String,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowRunActionFilter})">
            <summary>
            Gets a list of workflow run actions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionsOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IWorkflowRunActionsOperations,System.String,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowRunActionFilter},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow run actions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionsOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IWorkflowRunActionsOperations,System.String,System.String,System.String,System.String)">
            <summary>
            Gets a workflow run action.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionsOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IWorkflowRunActionsOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a workflow run action.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionsOperationsExtensions.ListExpressionTraces(Microsoft.Azure.Management.Logic.IWorkflowRunActionsOperations,System.String,System.String,System.String,System.String)">
            <summary>
            Lists a workflow run expression trace.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionsOperationsExtensions.ListExpressionTracesAsync(Microsoft.Azure.Management.Logic.IWorkflowRunActionsOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists a workflow run expression trace.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='actionName'>
            The workflow action name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionsOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IWorkflowRunActionsOperations,System.String)">
            <summary>
            Gets a list of workflow run actions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunActionsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IWorkflowRunActionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow run actions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowRunOperations">
            <summary>
            WorkflowRunOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunOperations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the WorkflowRunOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.WorkflowRunOperations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets an operation for a run.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='operationId'>
            The workflow operation id.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowRunOperationsExtensions">
            <summary>
            Extension methods for WorkflowRunOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IWorkflowRunOperations,System.String,System.String,System.String,System.String)">
            <summary>
            Gets an operation for a run.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='operationId'>
            The workflow operation id.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IWorkflowRunOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an operation for a run.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='operationId'>
            The workflow operation id.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowRunsOperations">
            <summary>
            WorkflowRunsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunsOperations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the WorkflowRunsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.WorkflowRunsOperations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunsOperations.ListWithHttpMessagesAsync(System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowRunFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow runs.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a workflow run.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunsOperations.CancelWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Cancels a workflow run.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow runs.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowRunsOperationsExtensions">
            <summary>
            Extension methods for WorkflowRunsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunsOperationsExtensions.List(Microsoft.Azure.Management.Logic.IWorkflowRunsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowRunFilter})">
            <summary>
            Gets a list of workflow runs.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunsOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IWorkflowRunsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowRunFilter},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow runs.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunsOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IWorkflowRunsOperations,System.String,System.String,System.String)">
            <summary>
            Gets a workflow run.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunsOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IWorkflowRunsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a workflow run.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunsOperationsExtensions.Cancel(Microsoft.Azure.Management.Logic.IWorkflowRunsOperations,System.String,System.String,System.String)">
            <summary>
            Cancels a workflow run.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunsOperationsExtensions.CancelAsync(Microsoft.Azure.Management.Logic.IWorkflowRunsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels a workflow run.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='runName'>
            The workflow run name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunsOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IWorkflowRunsOperations,System.String)">
            <summary>
            Gets a list of workflow runs.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowRunsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IWorkflowRunsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow runs.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowsOperations">
            <summary>
            WorkflowsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the WorkflowsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.WorkflowsOperations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperations.ListBySubscriptionWithHttpMessagesAsync(Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflows by subscription.
            </summary>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflows by resource group.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a workflow.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.Workflow,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a workflow.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='workflow'>
            The workflow.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.Workflow,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates a workflow.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='workflow'>
            The workflow.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a workflow.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperations.DisableWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Disables a workflow.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperations.EnableWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Enables a workflow.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperations.GenerateUpgradedDefinitionWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.GenerateUpgradedDefinitionParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Generates the upgraded definition for a workflow.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='parameters'>
            Parameters for generating an upgraded definition.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperations.ListCallbackUrlWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the workflow callback Url.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='listCallbackUrl'>
            Which callback url to list.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperations.ListSwaggerWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets an OpenAPI definition for the workflow.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperations.MoveWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.Workflow,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Moves an existing workflow.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='move'>
            The workflow to move.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperations.RegenerateAccessKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.RegenerateActionParameter,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Regenerates the callback URL access key for request triggers.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='keyType'>
            The access key type.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperations.ValidateByResourceGroupWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Logic.Models.Workflow,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates the workflow.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='validate'>
            The workflow.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperations.ValidateByLocationWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.Workflow,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates the workflow definition.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='location'>
            The workflow location.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='workflow'>
            The workflow definition.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperations.ListBySubscriptionNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflows by subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflows by resource group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions">
            <summary>
            Extension methods for WorkflowsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.ListBySubscription(Microsoft.Azure.Management.Logic.IWorkflowsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowFilter})">
            <summary>
            Gets a list of workflows by subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.ListBySubscriptionAsync(Microsoft.Azure.Management.Logic.IWorkflowsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowFilter},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflows by subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowFilter})">
            <summary>
            Gets a list of workflows by resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowFilter},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflows by resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String)">
            <summary>
            Gets a workflow.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a workflow.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.Workflow)">
            <summary>
            Creates or updates a workflow.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='workflow'>
            The workflow.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.Workflow,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a workflow.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='workflow'>
            The workflow.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.Update(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.Workflow)">
            <summary>
            Updates a workflow.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='workflow'>
            The workflow.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.Workflow,System.Threading.CancellationToken)">
            <summary>
            Updates a workflow.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='workflow'>
            The workflow.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String)">
            <summary>
            Deletes a workflow.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a workflow.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.Disable(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String)">
            <summary>
            Disables a workflow.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.DisableAsync(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Disables a workflow.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.Enable(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String)">
            <summary>
            Enables a workflow.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.EnableAsync(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Enables a workflow.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.GenerateUpgradedDefinition(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GenerateUpgradedDefinitionParameters)">
            <summary>
            Generates the upgraded definition for a workflow.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='parameters'>
            Parameters for generating an upgraded definition.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.GenerateUpgradedDefinitionAsync(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GenerateUpgradedDefinitionParameters,System.Threading.CancellationToken)">
            <summary>
            Generates the upgraded definition for a workflow.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='parameters'>
            Parameters for generating an upgraded definition.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.ListCallbackUrl(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters)">
            <summary>
            Get the workflow callback Url.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='listCallbackUrl'>
            Which callback url to list.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.ListCallbackUrlAsync(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters,System.Threading.CancellationToken)">
            <summary>
            Get the workflow callback Url.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='listCallbackUrl'>
            Which callback url to list.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.ListSwagger(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String)">
            <summary>
            Gets an OpenAPI definition for the workflow.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.ListSwaggerAsync(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an OpenAPI definition for the workflow.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.Move(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.Workflow)">
            <summary>
            Moves an existing workflow.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='move'>
            The workflow to move.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.MoveAsync(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.Workflow,System.Threading.CancellationToken)">
            <summary>
            Moves an existing workflow.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='move'>
            The workflow to move.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.RegenerateAccessKey(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.RegenerateActionParameter)">
            <summary>
            Regenerates the callback URL access key for request triggers.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='keyType'>
            The access key type.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.RegenerateAccessKeyAsync(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.RegenerateActionParameter,System.Threading.CancellationToken)">
            <summary>
            Regenerates the callback URL access key for request triggers.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='keyType'>
            The access key type.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.ValidateByResourceGroup(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.Workflow)">
            <summary>
            Validates the workflow.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='validate'>
            The workflow.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.ValidateByResourceGroupAsync(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String,Microsoft.Azure.Management.Logic.Models.Workflow,System.Threading.CancellationToken)">
            <summary>
            Validates the workflow.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='validate'>
            The workflow.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.ValidateByLocation(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.Workflow)">
            <summary>
            Validates the workflow definition.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='location'>
            The workflow location.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='workflow'>
            The workflow definition.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.ValidateByLocationAsync(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.Workflow,System.Threading.CancellationToken)">
            <summary>
            Validates the workflow definition.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='location'>
            The workflow location.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='workflow'>
            The workflow definition.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.ListBySubscriptionNext(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String)">
            <summary>
            Gets a list of workflows by subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.ListBySubscriptionNextAsync(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflows by subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String)">
            <summary>
            Gets a list of workflows by resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowsOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.Logic.IWorkflowsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflows by resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowTriggerHistoriesOperations">
            <summary>
            WorkflowTriggerHistoriesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggerHistoriesOperations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the WorkflowTriggerHistoriesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.WorkflowTriggerHistoriesOperations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggerHistoriesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistoryFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow trigger histories.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggerHistoriesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a workflow trigger history.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='historyName'>
            The workflow trigger history name. Corresponds to the run name for triggers
            that resulted in a run.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggerHistoriesOperations.ResubmitWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Resubmits a workflow run based on the trigger history.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='historyName'>
            The workflow trigger history name. Corresponds to the run name for triggers
            that resulted in a run.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggerHistoriesOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow trigger histories.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowTriggerHistoriesOperationsExtensions">
            <summary>
            Extension methods for WorkflowTriggerHistoriesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggerHistoriesOperationsExtensions.List(Microsoft.Azure.Management.Logic.IWorkflowTriggerHistoriesOperations,System.String,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistoryFilter})">
            <summary>
            Gets a list of workflow trigger histories.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggerHistoriesOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IWorkflowTriggerHistoriesOperations,System.String,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowTriggerHistoryFilter},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow trigger histories.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggerHistoriesOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IWorkflowTriggerHistoriesOperations,System.String,System.String,System.String,System.String)">
            <summary>
            Gets a workflow trigger history.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='historyName'>
            The workflow trigger history name. Corresponds to the run name for triggers
            that resulted in a run.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggerHistoriesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IWorkflowTriggerHistoriesOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a workflow trigger history.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='historyName'>
            The workflow trigger history name. Corresponds to the run name for triggers
            that resulted in a run.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggerHistoriesOperationsExtensions.Resubmit(Microsoft.Azure.Management.Logic.IWorkflowTriggerHistoriesOperations,System.String,System.String,System.String,System.String)">
            <summary>
            Resubmits a workflow run based on the trigger history.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='historyName'>
            The workflow trigger history name. Corresponds to the run name for triggers
            that resulted in a run.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggerHistoriesOperationsExtensions.ResubmitAsync(Microsoft.Azure.Management.Logic.IWorkflowTriggerHistoriesOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Resubmits a workflow run based on the trigger history.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='historyName'>
            The workflow trigger history name. Corresponds to the run name for triggers
            that resulted in a run.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggerHistoriesOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IWorkflowTriggerHistoriesOperations,System.String)">
            <summary>
            Gets a list of workflow trigger histories.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggerHistoriesOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IWorkflowTriggerHistoriesOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow trigger histories.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowTriggersOperations">
            <summary>
            WorkflowTriggersOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the WorkflowTriggersOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.WorkflowTriggersOperations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperations.ListWithHttpMessagesAsync(System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowTriggerFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow triggers.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a workflow trigger.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperations.ResetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Resets a workflow trigger.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperations.RunWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Runs a workflow trigger.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperations.GetSchemaJsonWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the trigger schema as JSON.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperations.SetStateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.SetTriggerStateActionDefinition,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the state of a workflow trigger.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='setState'>
            The workflow trigger state.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperations.ListCallbackUrlWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the callback URL for a workflow trigger.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow triggers.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowTriggersOperationsExtensions">
            <summary>
            Extension methods for WorkflowTriggersOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperationsExtensions.List(Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowTriggerFilter})">
            <summary>
            Gets a list of workflow triggers.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.Logic.Models.WorkflowTriggerFilter},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow triggers.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations,System.String,System.String,System.String)">
            <summary>
            Gets a workflow trigger.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a workflow trigger.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperationsExtensions.Reset(Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations,System.String,System.String,System.String)">
            <summary>
            Resets a workflow trigger.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperationsExtensions.ResetAsync(Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Resets a workflow trigger.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperationsExtensions.Run(Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations,System.String,System.String,System.String)">
            <summary>
            Runs a workflow trigger.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperationsExtensions.RunAsync(Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Runs a workflow trigger.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperationsExtensions.GetSchemaJson(Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations,System.String,System.String,System.String)">
            <summary>
            Get the trigger schema as JSON.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperationsExtensions.GetSchemaJsonAsync(Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the trigger schema as JSON.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperationsExtensions.SetState(Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.SetTriggerStateActionDefinition)">
            <summary>
            Sets the state of a workflow trigger.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='setState'>
            The workflow trigger state.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperationsExtensions.SetStateAsync(Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.SetTriggerStateActionDefinition,System.Threading.CancellationToken)">
            <summary>
            Sets the state of a workflow trigger.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='setState'>
            The workflow trigger state.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperationsExtensions.ListCallbackUrl(Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations,System.String,System.String,System.String)">
            <summary>
            Get the callback URL for a workflow trigger.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperationsExtensions.ListCallbackUrlAsync(Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the callback URL for a workflow trigger.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations,System.String)">
            <summary>
            Gets a list of workflow triggers.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowTriggersOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow triggers.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowVersionsOperations">
            <summary>
            WorkflowVersionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowVersionsOperations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the WorkflowVersionsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.WorkflowVersionsOperations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowVersionsOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow versions.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='top'>
            The number of items to be included in the result.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowVersionsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a workflow version.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='versionId'>
            The workflow versionId.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowVersionsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow versions.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowVersionsOperationsExtensions">
            <summary>
            Extension methods for WorkflowVersionsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowVersionsOperationsExtensions.List(Microsoft.Azure.Management.Logic.IWorkflowVersionsOperations,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets a list of workflow versions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='top'>
            The number of items to be included in the result.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowVersionsOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IWorkflowVersionsOperations,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow versions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='top'>
            The number of items to be included in the result.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowVersionsOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IWorkflowVersionsOperations,System.String,System.String,System.String)">
            <summary>
            Gets a workflow version.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='versionId'>
            The workflow versionId.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowVersionsOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IWorkflowVersionsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a workflow version.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='versionId'>
            The workflow versionId.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowVersionsOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IWorkflowVersionsOperations,System.String)">
            <summary>
            Gets a list of workflow versions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowVersionsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IWorkflowVersionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of workflow versions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowVersionTriggersOperations">
            <summary>
            WorkflowVersionTriggersOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowVersionTriggersOperations.#ctor(Microsoft.Azure.Management.Logic.LogicManagementClient)">
            <summary>
            Initializes a new instance of the WorkflowVersionTriggersOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Logic.WorkflowVersionTriggersOperations.Client">
            <summary>
            Gets a reference to the LogicManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowVersionTriggersOperations.ListCallbackUrlWithHttpMessagesAsync(System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the callback url for a trigger of a workflow version.
            </summary>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='versionId'>
            The workflow versionId.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='parameters'>
            The callback URL parameters.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Logic.WorkflowVersionTriggersOperationsExtensions">
            <summary>
            Extension methods for WorkflowVersionTriggersOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowVersionTriggersOperationsExtensions.ListCallbackUrl(Microsoft.Azure.Management.Logic.IWorkflowVersionTriggersOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters)">
            <summary>
            Get the callback url for a trigger of a workflow version.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='versionId'>
            The workflow versionId.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='parameters'>
            The callback URL parameters.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Logic.WorkflowVersionTriggersOperationsExtensions.ListCallbackUrlAsync(Microsoft.Azure.Management.Logic.IWorkflowVersionTriggersOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.GetCallbackUrlParameters,System.Threading.CancellationToken)">
            <summary>
            Get the callback url for a trigger of a workflow version.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group name.
            </param>
            <param name='workflowName'>
            The workflow name.
            </param>
            <param name='versionId'>
            The workflow versionId.
            </param>
            <param name='triggerName'>
            The workflow trigger name.
            </param>
            <param name='parameters'>
            The callback URL parameters.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
    </members>
</doc>
